syntax = "proto3";

package google.datastore.admin.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/datastore/admin/v1/index.proto";
import "google/longrunning/operations.proto";
import "google/protobuf/timestamp.proto";

option java_package = "com.google.datastore.admin.v1";
option java_outer_classname = "DatastoreAdminProto";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/datastore/admin/v1;admin";
option csharp_namespace = "Google.Cloud.Datastore.Admin.V1";
option php_namespace = "Google\\Cloud\\Datastore\\Admin\\V1";
option ruby_package = "Google::Cloud::Datastore::Admin::V1";


enum OperationType {

	OPERATION_TYPE_UNSPECIFIED = 0;
	EXPORT_ENTITIES = 1;
	IMPORT_ENTITIES = 2;
	CREATE_INDEX = 3;
	DELETE_INDEX = 4;
}

service DatastoreAdmin {
	option (google.api.default_host) = "datastore.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/datastore";

	rpc ExportEntities(google.datastore.admin.v1.ExportEntitiesRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "ExportEntitiesResponse"
			metadata_type: "ExportEntitiesMetadata"
		};
		option (google.api.method_signature) = "project_id,labels,entity_filter,output_url_prefix";
		option (google.api.http) = {
			post: "/v1/projects/{project_id}:export"
			body: "*"
		};

	}
	rpc ImportEntities(google.datastore.admin.v1.ImportEntitiesRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "google.protobuf.Empty"
			metadata_type: "ImportEntitiesMetadata"
		};
		option (google.api.method_signature) = "project_id,labels,input_url,entity_filter";
		option (google.api.http) = {
			post: "/v1/projects/{project_id}:import"
			body: "*"
		};

	}
	rpc CreateIndex(google.datastore.admin.v1.CreateIndexRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "Index"
			metadata_type: "IndexOperationMetadata"
		};
		option (google.api.http) = {
			post: "/v1/projects/{project_id}/indexes"
			body: "index"
		};

	}
	rpc DeleteIndex(google.datastore.admin.v1.DeleteIndexRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "Index"
			metadata_type: "IndexOperationMetadata"
		};
		option (google.api.http) = {
			delete: "/v1/projects/{project_id}/indexes/{index_id}"
		};

	}
	rpc GetIndex(google.datastore.admin.v1.GetIndexRequest) returns (google.datastore.admin.v1.Index) {
		option (google.api.http) = {
			get: "/v1/projects/{project_id}/indexes/{index_id}"
		};

	}
	rpc ListIndexes(google.datastore.admin.v1.ListIndexesRequest) returns (google.datastore.admin.v1.ListIndexesResponse) {
		option (google.api.http) = {
			get: "/v1/projects/{project_id}/indexes"
		};

	}
}

message CommonMetadata {

	enum State {

		STATE_UNSPECIFIED = 0;
		INITIALIZING = 1;
		PROCESSING = 2;
		CANCELLING = 3;
		FINALIZING = 4;
		SUCCESSFUL = 5;
		FAILED = 6;
		CANCELLED = 7;
	}

	google.protobuf.Timestamp start_time = 1;
	google.protobuf.Timestamp end_time = 2;
	OperationType operation_type = 3;
	map<string, string> labels = 4;
	State state = 5;
}

message Progress {

	int64 work_completed = 1;
	int64 work_estimated = 2;
}

message ExportEntitiesRequest {

	string project_id = 1 [
		(google.api.field_behavior) = REQUIRED
	];
	map<string, string> labels = 2;
	EntityFilter entity_filter = 3;
	string output_url_prefix = 4 [
		(google.api.field_behavior) = REQUIRED
	];
}

message ImportEntitiesRequest {

	string project_id = 1 [
		(google.api.field_behavior) = REQUIRED
	];
	map<string, string> labels = 2;
	string input_url = 3 [
		(google.api.field_behavior) = REQUIRED
	];
	EntityFilter entity_filter = 4;
}

message ExportEntitiesResponse {

	string output_url = 1;
}

message ExportEntitiesMetadata {

	CommonMetadata common = 1;
	Progress progress_entities = 2;
	Progress progress_bytes = 3;
	EntityFilter entity_filter = 4;
	string output_url_prefix = 5;
}

message ImportEntitiesMetadata {

	CommonMetadata common = 1;
	Progress progress_entities = 2;
	Progress progress_bytes = 3;
	EntityFilter entity_filter = 4;
	string input_url = 5;
}

message EntityFilter {

	repeated string kinds = 1;
	repeated string namespace_ids = 2;
}

message CreateIndexRequest {

	string project_id = 1;
	google.datastore.admin.v1.Index index = 3;
}

message DeleteIndexRequest {

	string project_id = 1;
	string index_id = 3;
}

message GetIndexRequest {

	string project_id = 1;
	string index_id = 3;
}

message ListIndexesRequest {

	string project_id = 1;
	string filter = 3;
	int32 page_size = 4;
	string page_token = 5;
}

message ListIndexesResponse {

	repeated google.datastore.admin.v1.Index indexes = 1;
	string next_page_token = 2;
}

message IndexOperationMetadata {

	CommonMetadata common = 1;
	Progress progress_entities = 2;
	string index_id = 3;
}
