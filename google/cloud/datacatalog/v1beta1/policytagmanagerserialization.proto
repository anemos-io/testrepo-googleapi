syntax = "proto3";

package google.cloud.datacatalog.v1beta1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/cloud/datacatalog/v1beta1/policytagmanager.proto";
import "google/iam/v1/policy.proto";
import "google/api/client.proto";

option java_package = "com.google.cloud.datacatalog.v1beta1";
option java_outer_classname = "PolicyTagManagerSerializationProto";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/cloud/datacatalog/v1beta1;datacatalog";
option cc_enable_arenas = true;
option csharp_namespace = "Google.Cloud.DataCatalog.V1Beta1";
option php_namespace = "Google\\Cloud\\DataCatalog\\V1beta1";
option ruby_package = "Google::Cloud::DataCatalog::V1beta1";


service PolicyTagManagerSerialization {
	option (google.api.default_host) = "datacatalog.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/cloud-platform";

	rpc ImportTaxonomies(google.cloud.datacatalog.v1beta1.ImportTaxonomiesRequest) returns (google.cloud.datacatalog.v1beta1.ImportTaxonomiesResponse) {
		option (google.api.http) = {
			post: "/v1beta1/{parent=projects/*/locations/*}/taxonomies:import"
			body: "*"
		};

	}
	rpc ExportTaxonomies(google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest) returns (google.cloud.datacatalog.v1beta1.ExportTaxonomiesResponse) {
		option (google.api.http) = {
			get: "/v1beta1/{parent=projects/*/locations/*}/taxonomies:export"
		};

	}
}

message SerializedTaxonomy {

	string display_name = 1 [
		(google.api.field_behavior) = REQUIRED
	];
	string description = 2;
	repeated SerializedPolicyTag policy_tags = 3;
}

message SerializedPolicyTag {

	string display_name = 2 [
		(google.api.field_behavior) = REQUIRED
	];
	string description = 3;
	repeated SerializedPolicyTag child_policy_tags = 4;
}

message ImportTaxonomiesRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "datacatalog.googleapis.com/Taxonomy"
		}
	];
	oneof source {
		InlineSource inline_source = 2;
	}
}

message InlineSource {

	repeated SerializedTaxonomy taxonomies = 1 [
		(google.api.field_behavior) = REQUIRED
	];
}

message ImportTaxonomiesResponse {

	repeated google.cloud.datacatalog.v1beta1.Taxonomy taxonomies = 1;
}

message ExportTaxonomiesRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "datacatalog.googleapis.com/Taxonomy"
		}
	];
	repeated string taxonomies = 2 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "datacatalog.googleapis.com/Taxonomy"
		}
	];
	oneof destination {
		bool serialized_taxonomies = 3;
	}
}

message ExportTaxonomiesResponse {

	repeated SerializedTaxonomy taxonomies = 1;
}
