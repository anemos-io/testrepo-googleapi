syntax = "proto3";

package google.cloud.dialogflow.cx.v3;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/longrunning/operations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

option java_package = "com.google.cloud.dialogflow.cx.v3";
option java_outer_classname = "IntentProto";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/cloud/dialogflow/cx/v3;cx";
option cc_enable_arenas = true;
option objc_class_prefix = "DF";
option csharp_namespace = "Google.Cloud.Dialogflow.Cx.V3";
option ruby_package = "Google::Cloud::Dialogflow::CX::V3";


enum IntentView {

	INTENT_VIEW_UNSPECIFIED = 0;
	INTENT_VIEW_PARTIAL = 1;
	INTENT_VIEW_FULL = 2;
}

service Intents {
	option (google.api.default_host) = "dialogflow.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow";

	rpc ListIntents(google.cloud.dialogflow.cx.v3.ListIntentsRequest) returns (google.cloud.dialogflow.cx.v3.ListIntentsResponse) {
		option (google.api.method_signature) = "parent";
		option (google.api.http) = {
			get: "/v3/{parent=projects/*/locations/*/agents/*}/intents"
		};

	}
	rpc GetIntent(google.cloud.dialogflow.cx.v3.GetIntentRequest) returns (google.cloud.dialogflow.cx.v3.Intent) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v3/{name=projects/*/locations/*/agents/*/intents/*}"
		};

	}
	rpc CreateIntent(google.cloud.dialogflow.cx.v3.CreateIntentRequest) returns (google.cloud.dialogflow.cx.v3.Intent) {
		option (google.api.method_signature) = "parent,intent";
		option (google.api.http) = {
			post: "/v3/{parent=projects/*/locations/*/agents/*}/intents"
			body: "intent"
		};

	}
	rpc UpdateIntent(google.cloud.dialogflow.cx.v3.UpdateIntentRequest) returns (google.cloud.dialogflow.cx.v3.Intent) {
		option (google.api.method_signature) = "intent,update_mask";
		option (google.api.http) = {
			patch: "/v3/{intent.name=projects/*/locations/*/agents/*/intents/*}"
			body: "intent"
		};

	}
	rpc DeleteIntent(google.cloud.dialogflow.cx.v3.DeleteIntentRequest) returns (google.protobuf.Empty) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			delete: "/v3/{name=projects/*/locations/*/agents/*/intents/*}"
		};

	}
}

message Intent {
	option (google.api.resource) = {
		type: "dialogflow.googleapis.com/Intent"
		pattern: ["projects/{project}/locations/{location}/agents/{agent}/intents/{intent}"]
	};

	message TrainingPhrase {

		message Part {

			string text = 1 [
				(google.api.field_behavior) = REQUIRED
			];
			string parameter_id = 2;
		}

		string id = 1;
		repeated Part parts = 2 [
			(google.api.field_behavior) = REQUIRED
		];
		int32 repeat_count = 3;
	}

	message Parameter {

		string id = 1 [
			(google.api.field_behavior) = REQUIRED
		];
		string entity_type = 2 [
			(google.api.field_behavior) = REQUIRED
			(google.api.resource_reference) = {
				type: "dialogflow.googleapis.com/EntityType"
			}
		];
		bool is_list = 3;
		bool redact = 4;
	}

	string name = 1;
	string display_name = 2 [
		(google.api.field_behavior) = REQUIRED
	];
	repeated TrainingPhrase training_phrases = 3;
	repeated Parameter parameters = 4;
	int32 priority = 5;
	bool is_fallback = 6;
	map<string, string> labels = 7;
	string description = 8;
}

message ListIntentsRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "dialogflow.googleapis.com/Intent"
		}
	];
	string language_code = 2;
	IntentView intent_view = 5;
	int32 page_size = 3;
	string page_token = 4;
}

message ListIntentsResponse {

	repeated Intent intents = 1;
	string next_page_token = 2;
}

message GetIntentRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "dialogflow.googleapis.com/Intent"
		}
	];
	string language_code = 2;
}

message CreateIntentRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "dialogflow.googleapis.com/Intent"
		}
	];
	Intent intent = 2 [
		(google.api.field_behavior) = REQUIRED
	];
	string language_code = 3;
}

message UpdateIntentRequest {

	Intent intent = 1 [
		(google.api.field_behavior) = REQUIRED
	];
	string language_code = 2;
	google.protobuf.FieldMask update_mask = 3;
}

message DeleteIntentRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "dialogflow.googleapis.com/Intent"
		}
	];
}
