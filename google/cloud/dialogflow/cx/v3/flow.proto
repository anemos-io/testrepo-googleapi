syntax = "proto3";

package google.cloud.dialogflow.cx.v3;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/cloud/dialogflow/cx/v3/advanced_settings.proto";
import "google/cloud/dialogflow/cx/v3/page.proto";
import "google/cloud/dialogflow/cx/v3/validation_message.proto";
import "google/longrunning/operations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

option java_package = "com.google.cloud.dialogflow.cx.v3";
option java_outer_classname = "FlowProto";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/cloud/dialogflow/cx/v3;cx";
option cc_enable_arenas = true;
option objc_class_prefix = "DF";
option csharp_namespace = "Google.Cloud.Dialogflow.Cx.V3";
option ruby_package = "Google::Cloud::Dialogflow::CX::V3";


service Flows {
	option (google.api.default_host) = "dialogflow.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow";

	rpc CreateFlow(google.cloud.dialogflow.cx.v3.CreateFlowRequest) returns (google.cloud.dialogflow.cx.v3.Flow) {
		option (google.api.method_signature) = "parent,flow";
		option (google.api.http) = {
			post: "/v3/{parent=projects/*/locations/*/agents/*}/flows"
			body: "flow"
		};

	}
	rpc DeleteFlow(google.cloud.dialogflow.cx.v3.DeleteFlowRequest) returns (google.protobuf.Empty) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			delete: "/v3/{name=projects/*/locations/*/agents/*/flows/*}"
		};

	}
	rpc ListFlows(google.cloud.dialogflow.cx.v3.ListFlowsRequest) returns (google.cloud.dialogflow.cx.v3.ListFlowsResponse) {
		option (google.api.method_signature) = "parent";
		option (google.api.http) = {
			get: "/v3/{parent=projects/*/locations/*/agents/*}/flows"
		};

	}
	rpc GetFlow(google.cloud.dialogflow.cx.v3.GetFlowRequest) returns (google.cloud.dialogflow.cx.v3.Flow) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v3/{name=projects/*/locations/*/agents/*/flows/*}"
		};

	}
	rpc UpdateFlow(google.cloud.dialogflow.cx.v3.UpdateFlowRequest) returns (google.cloud.dialogflow.cx.v3.Flow) {
		option (google.api.method_signature) = "flow,update_mask";
		option (google.api.http) = {
			patch: "/v3/{flow.name=projects/*/locations/*/agents/*/flows/*}"
			body: "flow"
		};

	}
	rpc TrainFlow(google.cloud.dialogflow.cx.v3.TrainFlowRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "google.protobuf.Empty"
			metadata_type: "google.protobuf.Struct"
		};
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			post: "/v3/{name=projects/*/locations/*/agents/*/flows/*}:train"
			body: "*"
		};

	}
	rpc ValidateFlow(google.cloud.dialogflow.cx.v3.ValidateFlowRequest) returns (google.cloud.dialogflow.cx.v3.FlowValidationResult) {
		option (google.api.http) = {
			post: "/v3/{name=projects/*/locations/*/agents/*/flows/*}:validate"
			body: "*"
		};

	}
	rpc GetFlowValidationResult(google.cloud.dialogflow.cx.v3.GetFlowValidationResultRequest) returns (google.cloud.dialogflow.cx.v3.FlowValidationResult) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v3/{name=projects/*/locations/*/agents/*/flows/*/validationResult}"
		};

	}
	rpc ImportFlow(google.cloud.dialogflow.cx.v3.ImportFlowRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "ImportFlowResponse"
			metadata_type: "google.protobuf.Struct"
		};
		option (google.api.http) = {
			post: "/v3/{parent=projects/*/locations/*/agents/*}/flows:import"
			body: "*"
		};

	}
	rpc ExportFlow(google.cloud.dialogflow.cx.v3.ExportFlowRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "ExportFlowResponse"
			metadata_type: "google.protobuf.Struct"
		};
		option (google.api.http) = {
			post: "/v3/{name=projects/*/locations/*/agents/*/flows/*}:export"
			body: "*"
		};

	}
}

message NluSettings {

	enum ModelType {

		MODEL_TYPE_UNSPECIFIED = 0;
		MODEL_TYPE_STANDARD = 1;
		MODEL_TYPE_ADVANCED = 3;
	}

	enum ModelTrainingMode {

		MODEL_TRAINING_MODE_UNSPECIFIED = 0;
		MODEL_TRAINING_MODE_AUTOMATIC = 1;
		MODEL_TRAINING_MODE_MANUAL = 2;
	}

	ModelType model_type = 1;
	float classification_threshold = 3;
	ModelTrainingMode model_training_mode = 4;
}

message Flow {
	option (google.api.resource) = {
		type: "dialogflow.googleapis.com/Flow"
		pattern: ["projects/{project}/locations/{location}/agents/{agent}/flows/{flow}"]
	};

	string name = 1;
	string display_name = 2 [
		(google.api.field_behavior) = REQUIRED
	];
	string description = 3;
	repeated google.cloud.dialogflow.cx.v3.TransitionRoute transition_routes = 4;
	repeated google.cloud.dialogflow.cx.v3.EventHandler event_handlers = 10;
	repeated string transition_route_groups = 15 [
		(google.api.resource_reference) = {
			type: "dialogflow.googleapis.com/TransitionRouteGroup"
		}
	];
	NluSettings nlu_settings = 11;
}

message CreateFlowRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "dialogflow.googleapis.com/Flow"
		}
	];
	Flow flow = 2 [
		(google.api.field_behavior) = REQUIRED
	];
	string language_code = 3;
}

message DeleteFlowRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "dialogflow.googleapis.com/Flow"
		}
	];
	bool force = 2;
}

message ListFlowsRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "dialogflow.googleapis.com/Flow"
		}
	];
	int32 page_size = 2;
	string page_token = 3;
	string language_code = 4;
}

message ListFlowsResponse {

	repeated Flow flows = 1;
	string next_page_token = 2;
}

message GetFlowRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "dialogflow.googleapis.com/Flow"
		}
	];
	string language_code = 2;
}

message UpdateFlowRequest {

	Flow flow = 1 [
		(google.api.field_behavior) = REQUIRED
	];
	google.protobuf.FieldMask update_mask = 2;
	string language_code = 3;
}

message TrainFlowRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "dialogflow.googleapis.com/Flow"
		}
	];
}

message ValidateFlowRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "dialogflow.googleapis.com/Flow"
		}
	];
	string language_code = 2;
}

message GetFlowValidationResultRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "dialogflow.googleapis.com/FlowValidationResult"
		}
	];
	string language_code = 2;
}

message FlowValidationResult {
	option (google.api.resource) = {
		type: "dialogflow.googleapis.com/FlowValidationResult"
		pattern: ["projects/{project}/locations/{location}/agents/{agent}/flows/{flow}/validationResult"]
	};

	string name = 1;
	repeated google.cloud.dialogflow.cx.v3.ValidationMessage validation_messages = 2;
	google.protobuf.Timestamp update_time = 3;
}

message ImportFlowRequest {

	enum ImportOption {

		IMPORT_OPTION_UNSPECIFIED = 0;
		KEEP = 1;
		FALLBACK = 2;
	}

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "dialogflow.googleapis.com/Flow"
		}
	];
	oneof flow {
		string flow_uri = 2;
		bytes flow_content = 3;
	}
	ImportOption import_option = 4;
}

message ImportFlowResponse {

	string flow = 1 [
		(google.api.resource_reference) = {
			type: "dialogflow.googleapis.com/Flow"
		}
	];
}

message ExportFlowRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "dialogflow.googleapis.com/Flow"
		}
	];
	string flow_uri = 2 [
		(google.api.field_behavior) = OPTIONAL
	];
	bool include_referenced_flows = 4 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message ExportFlowResponse {

	oneof flow {
		string flow_uri = 1;
		bytes flow_content = 2;
	}
}
