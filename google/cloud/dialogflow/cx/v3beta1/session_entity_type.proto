syntax = "proto3";

package google.cloud.dialogflow.cx.v3beta1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/cloud/dialogflow/cx/v3beta1/entity_type.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";

option java_package = "com.google.cloud.dialogflow.cx.v3beta1";
option java_outer_classname = "SessionEntityTypeProto";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/cloud/dialogflow/cx/v3beta1;cx";
option cc_enable_arenas = true;
option objc_class_prefix = "DF";
option csharp_namespace = "Google.Cloud.Dialogflow.Cx.V3Beta1";


service SessionEntityTypes {
	option (google.api.default_host) = "dialogflow.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow";

	rpc ListSessionEntityTypes(google.cloud.dialogflow.cx.v3beta1.ListSessionEntityTypesRequest) returns (google.cloud.dialogflow.cx.v3beta1.ListSessionEntityTypesResponse) {
		option (google.api.method_signature) = "parent";
		option (google.api.http) = {
			get: "/v3beta1/{parent=projects/*/locations/*/agents/*/sessions/*}/entityTypes"
			additional_bindings: {
				get: "/v3beta1/{parent=projects/*/locations/*/agents/*/environments/*/sessions/*}/entityTypes"
			}
		};

	}
	rpc GetSessionEntityType(google.cloud.dialogflow.cx.v3beta1.GetSessionEntityTypeRequest) returns (google.cloud.dialogflow.cx.v3beta1.SessionEntityType) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v3beta1/{name=projects/*/locations/*/agents/*/sessions/*/entityTypes/*}"
			additional_bindings: {
				get: "/v3beta1/{name=projects/*/locations/*/agents/*/environments/*/sessions/*/entityTypes/*}"
			}
		};

	}
	rpc CreateSessionEntityType(google.cloud.dialogflow.cx.v3beta1.CreateSessionEntityTypeRequest) returns (google.cloud.dialogflow.cx.v3beta1.SessionEntityType) {
		option (google.api.method_signature) = "parent,session_entity_type";
		option (google.api.http) = {
			post: "/v3beta1/{parent=projects/*/locations/*/agents/*/sessions/*}/entityTypes"
			body: "session_entity_type"
			additional_bindings: {
				post: "/v3beta1/{parent=projects/*/locations/*/agents/*/environments/*/sessions/*}/entityTypes"
				body: "session_entity_type"
			}
		};

	}
	rpc UpdateSessionEntityType(google.cloud.dialogflow.cx.v3beta1.UpdateSessionEntityTypeRequest) returns (google.cloud.dialogflow.cx.v3beta1.SessionEntityType) {
		option (google.api.method_signature) = "session_entity_type,update_mask";
		option (google.api.http) = {
			patch: "/v3beta1/{session_entity_type.name=projects/*/locations/*/agents/*/sessions/*/entityTypes/*}"
			body: "session_entity_type"
			additional_bindings: {
				patch: "/v3beta1/{session_entity_type.name=projects/*/locations/*/agents/*/environments/*/sessions/*/entityTypes/*}"
				body: "session_entity_type"
			}
		};

	}
	rpc DeleteSessionEntityType(google.cloud.dialogflow.cx.v3beta1.DeleteSessionEntityTypeRequest) returns (google.protobuf.Empty) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			delete: "/v3beta1/{name=projects/*/locations/*/agents/*/sessions/*/entityTypes/*}"
			additional_bindings: {
				delete: "/v3beta1/{name=projects/*/locations/*/agents/*/environments/*/sessions/*/entityTypes/*}"
			}
		};

	}
}

message SessionEntityType {
	option (google.api.resource) = {
		type: "dialogflow.googleapis.com/SessionEntityType"
		pattern: ["projects/{project}/locations/{location}/agents/{agent}/sessions/{session}/entityTypes/{entity_type}","projects/{project}/locations/{location}/agents/{agent}/environments/{environment}/sessions/{session}/entityTypes/{entity_type}"]
	};

	enum EntityOverrideMode {

		ENTITY_OVERRIDE_MODE_UNSPECIFIED = 0;
		ENTITY_OVERRIDE_MODE_OVERRIDE = 1;
		ENTITY_OVERRIDE_MODE_SUPPLEMENT = 2;
	}

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
	];
	EntityOverrideMode entity_override_mode = 3 [
		(google.api.field_behavior) = REQUIRED
	];
	repeated google.cloud.dialogflow.cx.v3beta1.EntityType.Entity entities = 4 [
		(google.api.field_behavior) = REQUIRED
	];
}

message ListSessionEntityTypesRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "dialogflow.googleapis.com/SessionEntityType"
		}
	];
	int32 page_size = 2;
	string page_token = 3;
}

message ListSessionEntityTypesResponse {

	repeated SessionEntityType session_entity_types = 1;
	string next_page_token = 2;
}

message GetSessionEntityTypeRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "dialogflow.googleapis.com/SessionEntityType"
		}
	];
}

message CreateSessionEntityTypeRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "dialogflow.googleapis.com/SessionEntityType"
		}
	];
	SessionEntityType session_entity_type = 2 [
		(google.api.field_behavior) = REQUIRED
	];
}

message UpdateSessionEntityTypeRequest {

	SessionEntityType session_entity_type = 1 [
		(google.api.field_behavior) = REQUIRED
	];
	google.protobuf.FieldMask update_mask = 2;
}

message DeleteSessionEntityTypeRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "dialogflow.googleapis.com/SessionEntityType"
		}
	];
}
