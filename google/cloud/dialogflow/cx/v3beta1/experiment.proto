syntax = "proto3";

package google.cloud.dialogflow.cx.v3beta1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

option java_package = "com.google.cloud.dialogflow.cx.v3beta1";
option java_outer_classname = "ExperimentProto";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/cloud/dialogflow/cx/v3beta1;cx";
option cc_enable_arenas = true;
option objc_class_prefix = "DF";
option csharp_namespace = "Google.Cloud.Dialogflow.Cx.V3Beta1";
option ruby_package = "Google::Cloud::Dialogflow::CX::V3beta1";


service Experiments {
	option (google.api.default_host) = "dialogflow.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow";

	rpc ListExperiments(google.cloud.dialogflow.cx.v3beta1.ListExperimentsRequest) returns (google.cloud.dialogflow.cx.v3beta1.ListExperimentsResponse) {
		option (google.api.method_signature) = "parent";
		option (google.api.http) = {
			get: "/v3beta1/{parent=projects/*/locations/*/agents/*/environments/*}/experiments"
		};

	}
	rpc GetExperiment(google.cloud.dialogflow.cx.v3beta1.GetExperimentRequest) returns (google.cloud.dialogflow.cx.v3beta1.Experiment) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v3beta1/{name=projects/*/locations/*/agents/*/environments/*/experiments/*}"
		};

	}
	rpc CreateExperiment(google.cloud.dialogflow.cx.v3beta1.CreateExperimentRequest) returns (google.cloud.dialogflow.cx.v3beta1.Experiment) {
		option (google.api.method_signature) = "parent,experiment";
		option (google.api.http) = {
			post: "/v3beta1/{parent=projects/*/locations/*/agents/*/environments/*}/experiments"
			body: "experiment"
		};

	}
	rpc UpdateExperiment(google.cloud.dialogflow.cx.v3beta1.UpdateExperimentRequest) returns (google.cloud.dialogflow.cx.v3beta1.Experiment) {
		option (google.api.method_signature) = "experiment,update_mask";
		option (google.api.http) = {
			patch: "/v3beta1/{experiment.name=projects/*/locations/*/agents/*/environments/*/experiments/*}"
			body: "experiment"
		};

	}
	rpc DeleteExperiment(google.cloud.dialogflow.cx.v3beta1.DeleteExperimentRequest) returns (google.protobuf.Empty) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			delete: "/v3beta1/{name=projects/*/locations/*/agents/*/environments/*/experiments/*}"
		};

	}
	rpc StartExperiment(google.cloud.dialogflow.cx.v3beta1.StartExperimentRequest) returns (google.cloud.dialogflow.cx.v3beta1.Experiment) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			post: "/v3beta1/{name=projects/*/locations/*/agents/*/environments/*/experiments/*}:start"
			body: "*"
		};

	}
	rpc StopExperiment(google.cloud.dialogflow.cx.v3beta1.StopExperimentRequest) returns (google.cloud.dialogflow.cx.v3beta1.Experiment) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			post: "/v3beta1/{name=projects/*/locations/*/agents/*/environments/*/experiments/*}:stop"
			body: "*"
		};

	}
}

message Experiment {
	option (google.api.resource) = {
		type: "dialogflow.googleapis.com/Experiment"
		pattern: ["projects/{project}/locations/{location}/agents/{agent}/environments/{environment}/experiments/{experiment}"]
	};

	message Definition {

		string condition = 1;
		oneof variants {
			VersionVariants version_variants = 2;
		}
	}

	message Result {

		message ConfidenceInterval {

			double confidence_level = 1;
			double ratio = 2;
			double lower_bound = 3;
			double upper_bound = 4;
		}

		message Metric {

			MetricType type = 1;
			CountType count_type = 5;
			oneof value {
				double ratio = 2;
				double count = 4;
			}
			ConfidenceInterval confidence_interval = 3;
		}

		message VersionMetrics {

			string version = 1 [
				(google.api.resource_reference) = {
					type: "dialogflow.googleapis.com/Version"
				}
			];
			repeated Metric metrics = 2;
			int32 session_count = 3;
		}

		enum MetricType {

			METRIC_UNSPECIFIED = 0;
			CONTAINED_SESSION_NO_CALLBACK_RATE = 1;
			LIVE_AGENT_HANDOFF_RATE = 2;
			CALLBACK_SESSION_RATE = 3;
			ABANDONED_SESSION_RATE = 4;
			SESSION_END_RATE = 5;
		}

		enum CountType {

			COUNT_TYPE_UNSPECIFIED = 0;
			TOTAL_NO_MATCH_COUNT = 1;
			TOTAL_TURN_COUNT = 2;
			AVERAGE_TURN_COUNT = 3;
		}

		repeated VersionMetrics version_metrics = 1;
		google.protobuf.Timestamp last_update_time = 2;
	}

	enum State {

		STATE_UNSPECIFIED = 0;
		DRAFT = 1;
		RUNNING = 2;
		DONE = 3;
		ROLLOUT_FAILED = 4;
	}

	string name = 1;
	string display_name = 2 [
		(google.api.field_behavior) = REQUIRED
	];
	string description = 3;
	State state = 4;
	Definition definition = 5;
	RolloutConfig rollout_config = 14;
	RolloutState rollout_state = 15;
	string rollout_failure_reason = 16;
	Result result = 6;
	google.protobuf.Timestamp create_time = 7;
	google.protobuf.Timestamp start_time = 8;
	google.protobuf.Timestamp end_time = 9;
	google.protobuf.Timestamp last_update_time = 10;
	google.protobuf.Duration experiment_length = 11;
	repeated VariantsHistory variants_history = 12;
}

message VersionVariants {

	message Variant {

		string version = 1;
		float traffic_allocation = 2;
		bool is_control_group = 3;
	}

	repeated Variant variants = 1;
}

message RolloutConfig {

	message RolloutStep {

		string display_name = 1;
		int32 traffic_percent = 2;
		google.protobuf.Duration min_duration = 3;
	}

	repeated RolloutStep rollout_steps = 1;
	string rollout_condition = 2;
	string failure_condition = 3;
}

message RolloutState {

	string step = 1;
	int32 step_index = 3;
	google.protobuf.Timestamp start_time = 2;
}

message VariantsHistory {

	oneof variants {
		VersionVariants version_variants = 1;
	}
	google.protobuf.Timestamp update_time = 2;
}

message ListExperimentsRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "dialogflow.googleapis.com/Experiment"
		}
	];
	int32 page_size = 2;
	string page_token = 3;
}

message ListExperimentsResponse {

	repeated Experiment experiments = 1;
	string next_page_token = 2;
}

message GetExperimentRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "dialogflow.googleapis.com/Experiment"
		}
	];
}

message CreateExperimentRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "dialogflow.googleapis.com/Experiment"
		}
	];
	Experiment experiment = 2 [
		(google.api.field_behavior) = REQUIRED
	];
}

message UpdateExperimentRequest {

	Experiment experiment = 1 [
		(google.api.field_behavior) = REQUIRED
	];
	google.protobuf.FieldMask update_mask = 2 [
		(google.api.field_behavior) = REQUIRED
	];
}

message DeleteExperimentRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "dialogflow.googleapis.com/Experiment"
		}
	];
}

message StartExperimentRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "dialogflow.googleapis.com/Experiment"
		}
	];
}

message StopExperimentRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "dialogflow.googleapis.com/Experiment"
		}
	];
}
