syntax = "proto3";

package google.cloud.dialogflow.v2;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/cloud/dialogflow/v2/participant.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

option java_package = "com.google.cloud.dialogflow.v2";
option java_outer_classname = "ConversationProto";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/cloud/dialogflow/v2;dialogflow";
option cc_enable_arenas = true;
option objc_class_prefix = "DF";
option csharp_namespace = "Google.Cloud.Dialogflow.V2";


service Conversations {
	option (google.api.default_host) = "dialogflow.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow";

	rpc CreateConversation(google.cloud.dialogflow.v2.CreateConversationRequest) returns (google.cloud.dialogflow.v2.Conversation) {
		option (google.api.method_signature) = "parent,conversation";
		option (google.api.http) = {
			post: "/v2/{parent=projects/*}/conversations"
			body: "conversation"
			additional_bindings: {
				post: "/v2/{parent=projects/*/locations/*}/conversations"
				body: "conversation"
			}
		};

	}
	rpc ListConversations(google.cloud.dialogflow.v2.ListConversationsRequest) returns (google.cloud.dialogflow.v2.ListConversationsResponse) {
		option (google.api.method_signature) = "parent";
		option (google.api.http) = {
			get: "/v2/{parent=projects/*}/conversations"
			additional_bindings: {
				get: "/v2/{parent=projects/*/locations/*}/conversations"
			}
		};

	}
	rpc GetConversation(google.cloud.dialogflow.v2.GetConversationRequest) returns (google.cloud.dialogflow.v2.Conversation) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v2/{name=projects/*/conversations/*}"
			additional_bindings: {
				get: "/v2/{name=projects/*/locations/*/conversations/*}"
			}
		};

	}
	rpc CompleteConversation(google.cloud.dialogflow.v2.CompleteConversationRequest) returns (google.cloud.dialogflow.v2.Conversation) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			post: "/v2/{name=projects/*/conversations/*}:complete"
			body: "*"
			additional_bindings: {
				post: "/v2/{name=projects/*/locations/*/conversations/*}:complete"
				body: "*"
			}
		};

	}
	rpc ListMessages(google.cloud.dialogflow.v2.ListMessagesRequest) returns (google.cloud.dialogflow.v2.ListMessagesResponse) {
		option (google.api.method_signature) = "parent";
		option (google.api.http) = {
			get: "/v2/{parent=projects/*/conversations/*}/messages"
			additional_bindings: {
				get: "/v2/{parent=projects/*/locations/*/conversations/*}/messages"
			}
		};

	}
}

message Conversation {
	option (google.api.resource) = {
		type: "dialogflow.googleapis.com/Conversation"
		pattern: ["projects/{project}/conversations/{conversation}","projects/{project}/locations/{location}/conversations/{conversation}"]
	};

	enum LifecycleState {

		LIFECYCLE_STATE_UNSPECIFIED = 0;
		IN_PROGRESS = 1;
		COMPLETED = 2;
	}

	enum ConversationStage {

		CONVERSATION_STAGE_UNSPECIFIED = 0;
		VIRTUAL_AGENT_STAGE = 1;
		HUMAN_ASSIST_STAGE = 2;
	}

	string name = 1 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	LifecycleState lifecycle_state = 2 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string conversation_profile = 3 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "dialogflow.googleapis.com/ConversationProfile"
		}
	];
	ConversationPhoneNumber phone_number = 4 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.protobuf.Timestamp start_time = 5 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.protobuf.Timestamp end_time = 6 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	ConversationStage conversation_stage = 7;
}

message CreateConversationRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "dialogflow.googleapis.com/Conversation"
		}
	];
	Conversation conversation = 2 [
		(google.api.field_behavior) = REQUIRED
	];
	string conversation_id = 3 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message ListConversationsRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "dialogflow.googleapis.com/Conversation"
		}
	];
	int32 page_size = 2 [
		(google.api.field_behavior) = OPTIONAL
	];
	string page_token = 3 [
		(google.api.field_behavior) = OPTIONAL
	];
	string filter = 4;
}

message ListConversationsResponse {

	repeated Conversation conversations = 1;
	string next_page_token = 2;
}

message GetConversationRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "dialogflow.googleapis.com/Conversation"
		}
	];
}

message CompleteConversationRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "dialogflow.googleapis.com/Conversation"
		}
	];
}

message ListMessagesRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "dialogflow.googleapis.com/Message"
		}
	];
	string filter = 4 [
		(google.api.field_behavior) = OPTIONAL
	];
	int32 page_size = 2 [
		(google.api.field_behavior) = OPTIONAL
	];
	string page_token = 3 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message ListMessagesResponse {

	repeated google.cloud.dialogflow.v2.Message messages = 1;
	string next_page_token = 2;
}

message ConversationPhoneNumber {

	string phone_number = 3 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
}
