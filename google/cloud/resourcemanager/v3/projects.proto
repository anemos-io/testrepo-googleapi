syntax = "proto3";

package google.cloud.resourcemanager.v3;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/iam/v1/iam_policy.proto";
import "google/iam/v1/policy.proto";
import "google/longrunning/operations.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

option java_package = "com.google.cloud.resourcemanager.v3";
option java_outer_classname = "ProjectsProto";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/cloud/resourcemanager/v3;resourcemanager";
option csharp_namespace = "Google.Cloud.ResourceManager.V3";
option php_namespace = "Google\\Cloud\\ResourceManager\\V3";
option ruby_package = "Google::Cloud::ResourceManager::V3";


service Projects {
	option (google.api.default_host) = "cloudresourcemanager.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/cloud-platform.read-only";

	rpc GetProject(google.cloud.resourcemanager.v3.GetProjectRequest) returns (google.cloud.resourcemanager.v3.Project) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v3/{name=projects/*}"
		};

	}
	rpc ListProjects(google.cloud.resourcemanager.v3.ListProjectsRequest) returns (google.cloud.resourcemanager.v3.ListProjectsResponse) {
		option (google.api.method_signature) = "parent";
		option (google.api.http) = {
			get: "/v3/projects"
		};

	}
	rpc SearchProjects(google.cloud.resourcemanager.v3.SearchProjectsRequest) returns (google.cloud.resourcemanager.v3.SearchProjectsResponse) {
		option (google.api.method_signature) = "query";
		option (google.api.http) = {
			get: "/v3/projects:search"
		};

	}
	rpc CreateProject(google.cloud.resourcemanager.v3.CreateProjectRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "Project"
			metadata_type: "CreateProjectMetadata"
		};
		option (google.api.method_signature) = "project";
		option (google.api.http) = {
			post: "/v3/projects"
			body: "project"
		};

	}
	rpc UpdateProject(google.cloud.resourcemanager.v3.UpdateProjectRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "Project"
			metadata_type: "UpdateProjectMetadata"
		};
		option (google.api.method_signature) = "project,update_mask";
		option (google.api.http) = {
			patch: "/v3/{project.name=projects/*}"
			body: "project"
		};

	}
	rpc MoveProject(google.cloud.resourcemanager.v3.MoveProjectRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "Project"
			metadata_type: "MoveProjectMetadata"
		};
		option (google.api.method_signature) = "name, destination_parent";
		option (google.api.http) = {
			post: "/v3/{name=projects/*}:move"
			body: "*"
		};

	}
	rpc DeleteProject(google.cloud.resourcemanager.v3.DeleteProjectRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "Project"
			metadata_type: "DeleteProjectMetadata"
		};
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			delete: "/v3/{name=projects/*}"
		};

	}
	rpc UndeleteProject(google.cloud.resourcemanager.v3.UndeleteProjectRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "Project"
			metadata_type: "UndeleteProjectMetadata"
		};
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			post: "/v3/{name=projects/*}:undelete"
			body: "*"
		};

	}
	rpc GetIamPolicy(google.iam.v1.GetIamPolicyRequest) returns (google.iam.v1.Policy) {
		option (google.api.method_signature) = "resource";
		option (google.api.http) = {
			post: "/v3/{resource=projects/*}:getIamPolicy"
			body: "*"
		};

	}
	rpc SetIamPolicy(google.iam.v1.SetIamPolicyRequest) returns (google.iam.v1.Policy) {
		option (google.api.method_signature) = "resource, policy";
		option (google.api.http) = {
			post: "/v3/{resource=projects/*}:setIamPolicy"
			body: "*"
		};

	}
	rpc TestIamPermissions(google.iam.v1.TestIamPermissionsRequest) returns (google.iam.v1.TestIamPermissionsResponse) {
		option (google.api.method_signature) = "resource, permissions";
		option (google.api.http) = {
			post: "/v3/{resource=projects/*}:testIamPermissions"
			body: "*"
		};

	}
}

message Project {
	option (google.api.resource) = {
		type: "cloudresourcemanager.googleapis.com/Project"
		pattern: ["projects/{project}"]
		style: [DECLARATIVE_FRIENDLY]
	};

	enum State {

		STATE_UNSPECIFIED = 0;
		ACTIVE = 1;
		DELETE_REQUESTED = 2;
	}

	string name = 1 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string parent = 2 [
		(google.api.field_behavior) = OPTIONAL
	];
	string project_id = 3 [
		(google.api.field_behavior) = IMMUTABLE
	];
	State state = 4 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string display_name = 5 [
		(google.api.field_behavior) = OPTIONAL
	];
	google.protobuf.Timestamp create_time = 6 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.protobuf.Timestamp update_time = 7 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.protobuf.Timestamp delete_time = 8 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string etag = 9 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	map<string, string> labels = 10 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message GetProjectRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "cloudresourcemanager.googleapis.com/Project"
		}
	];
}

message ListProjectsRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "*"
		}
	];
	string page_token = 2 [
		(google.api.field_behavior) = OPTIONAL
	];
	int32 page_size = 3 [
		(google.api.field_behavior) = OPTIONAL
	];
	bool show_deleted = 4 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message ListProjectsResponse {

	repeated Project projects = 1;
	string next_page_token = 2;
}

message SearchProjectsRequest {

	string query = 1 [
		(google.api.field_behavior) = OPTIONAL
	];
	string page_token = 2 [
		(google.api.field_behavior) = OPTIONAL
	];
	int32 page_size = 3 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message SearchProjectsResponse {

	repeated Project projects = 1;
	string next_page_token = 2;
}

message CreateProjectRequest {

	Project project = 1 [
		(google.api.field_behavior) = REQUIRED
	];
}

message CreateProjectMetadata {

	google.protobuf.Timestamp create_time = 1;
	bool gettable = 2;
	bool ready = 3;
}

message UpdateProjectRequest {

	Project project = 1 [
		(google.api.field_behavior) = REQUIRED
	];
	google.protobuf.FieldMask update_mask = 2 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message UpdateProjectMetadata {

}

message MoveProjectRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "cloudresourcemanager.googleapis.com/Project"
		}
	];
	string destination_parent = 2 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "*"
		}
	];
}

message MoveProjectMetadata {

}

message DeleteProjectRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "cloudresourcemanager.googleapis.com/Project"
		}
	];
}

message DeleteProjectMetadata {

}

message UndeleteProjectRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "cloudresourcemanager.googleapis.com/Project"
		}
	];
}

message UndeleteProjectMetadata {

}
