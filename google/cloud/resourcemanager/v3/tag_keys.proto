syntax = "proto3";

package google.cloud.resourcemanager.v3;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/iam/v1/iam_policy.proto";
import "google/iam/v1/policy.proto";
import "google/longrunning/operations.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

option java_package = "com.google.cloud.resourcemanager.v3";
option java_outer_classname = "TagKeysProto";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/cloud/resourcemanager/v3;resourcemanager";
option csharp_namespace = "Google.Cloud.ResourceManager.V3";
option php_namespace = "Google\\Cloud\\ResourceManager\\V3";
option ruby_package = "Google::Cloud::ResourceManager::V3";


service TagKeys {
	option (google.api.default_host) = "cloudresourcemanager.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/cloud-platform.read-only";

	rpc ListTagKeys(google.cloud.resourcemanager.v3.ListTagKeysRequest) returns (google.cloud.resourcemanager.v3.ListTagKeysResponse) {
		option (google.api.method_signature) = "parent";
		option (google.api.http) = {
			get: "/v3/tagKeys"
		};

	}
	rpc GetTagKey(google.cloud.resourcemanager.v3.GetTagKeyRequest) returns (google.cloud.resourcemanager.v3.TagKey) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v3/{name=tagKeys/*}"
		};

	}
	rpc CreateTagKey(google.cloud.resourcemanager.v3.CreateTagKeyRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "TagKey"
			metadata_type: "CreateTagKeyMetadata"
		};
		option (google.api.method_signature) = "tag_key";
		option (google.api.http) = {
			post: "/v3/tagKeys"
			body: "tag_key"
		};

	}
	rpc UpdateTagKey(google.cloud.resourcemanager.v3.UpdateTagKeyRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "TagKey"
			metadata_type: "UpdateTagKeyMetadata"
		};
		option (google.api.method_signature) = "tag_key,update_mask";
		option (google.api.http) = {
			patch: "/v3/{tag_key.name=tagKeys/*}"
			body: "tag_key"
		};

	}
	rpc DeleteTagKey(google.cloud.resourcemanager.v3.DeleteTagKeyRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "TagKey"
			metadata_type: "DeleteTagKeyMetadata"
		};
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			delete: "/v3/{name=tagKeys/*}"
		};

	}
	rpc GetIamPolicy(google.iam.v1.GetIamPolicyRequest) returns (google.iam.v1.Policy) {
		option (google.api.method_signature) = "resource";
		option (google.api.http) = {
			post: "/v3/{resource=tagKeys/*}:getIamPolicy"
			body: "*"
		};

	}
	rpc SetIamPolicy(google.iam.v1.SetIamPolicyRequest) returns (google.iam.v1.Policy) {
		option (google.api.method_signature) = "resource,policy";
		option (google.api.http) = {
			post: "/v3/{resource=tagKeys/*}:setIamPolicy"
			body: "*"
		};

	}
	rpc TestIamPermissions(google.iam.v1.TestIamPermissionsRequest) returns (google.iam.v1.TestIamPermissionsResponse) {
		option (google.api.method_signature) = "resource,permissions";
		option (google.api.http) = {
			post: "/v3/{resource=tagKeys/*}:testIamPermissions"
			body: "*"
		};

	}
}

message TagKey {
	option (google.api.resource) = {
		type: "cloudresourcemanager.googleapis.com/TagKey"
		pattern: ["tagKeys/{tag_key}"]
		style: [DECLARATIVE_FRIENDLY]
	};

	string name = 1 [
		(google.api.field_behavior) = IMMUTABLE
	];
	string parent = 2 [
		(google.api.field_behavior) = IMMUTABLE
	];
	string short_name = 3 [
		(google.api.field_behavior) = REQUIRED,
		(google.api.field_behavior) = IMMUTABLE
	];
	string namespaced_name = 4 [
		(google.api.field_behavior) = OUTPUT_ONLY,
		(google.api.field_behavior) = IMMUTABLE
	];
	string description = 5 [
		(google.api.field_behavior) = OPTIONAL
	];
	google.protobuf.Timestamp create_time = 6 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.protobuf.Timestamp update_time = 7 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string etag = 8 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message ListTagKeysRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "*"
		}
	];
	int32 page_size = 2 [
		(google.api.field_behavior) = OPTIONAL
	];
	string page_token = 3 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message ListTagKeysResponse {

	repeated TagKey tag_keys = 1;
	string next_page_token = 2;
}

message GetTagKeyRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "cloudresourcemanager.googleapis.com/TagKey"
		}
	];
}

message CreateTagKeyRequest {

	TagKey tag_key = 1 [
		(google.api.field_behavior) = REQUIRED
	];
	bool validate_only = 2 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message CreateTagKeyMetadata {

}

message UpdateTagKeyRequest {

	TagKey tag_key = 1 [
		(google.api.field_behavior) = REQUIRED
	];
	google.protobuf.FieldMask update_mask = 2;
	bool validate_only = 3;
}

message UpdateTagKeyMetadata {

}

message DeleteTagKeyRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "cloudresourcemanager.googleapis.com/TagKey"
		}
	];
	bool validate_only = 2 [
		(google.api.field_behavior) = OPTIONAL
	];
	string etag = 3 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message DeleteTagKeyMetadata {

}
