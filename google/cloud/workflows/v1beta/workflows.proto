syntax = "proto3";

package google.cloud.workflows.v1beta;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/longrunning/operations.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

option java_package = "com.google.cloud.workflows.v1beta";
option java_outer_classname = "WorkflowsProto";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/cloud/workflows/v1beta;workflows";


service Workflows {
	option (google.api.default_host) = "workflows.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/cloud-platform";

	rpc ListWorkflows(google.cloud.workflows.v1beta.ListWorkflowsRequest) returns (google.cloud.workflows.v1beta.ListWorkflowsResponse) {
		option (google.api.method_signature) = "parent";
		option (google.api.http) = {
			get: "/v1beta/{parent=projects/*/locations/*}/workflows"
		};

	}
	rpc GetWorkflow(google.cloud.workflows.v1beta.GetWorkflowRequest) returns (google.cloud.workflows.v1beta.Workflow) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v1beta/{name=projects/*/locations/*/workflows/*}"
		};

	}
	rpc CreateWorkflow(google.cloud.workflows.v1beta.CreateWorkflowRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "Workflow"
			metadata_type: "OperationMetadata"
		};
		option (google.api.method_signature) = "parent,workflow,workflow_id";
		option (google.api.http) = {
			post: "/v1beta/{parent=projects/*/locations/*}/workflows"
			body: "workflow"
		};

	}
	rpc DeleteWorkflow(google.cloud.workflows.v1beta.DeleteWorkflowRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "google.protobuf.Empty"
			metadata_type: "OperationMetadata"
		};
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			delete: "/v1beta/{name=projects/*/locations/*/workflows/*}"
		};

	}
	rpc UpdateWorkflow(google.cloud.workflows.v1beta.UpdateWorkflowRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "Workflow"
			metadata_type: "OperationMetadata"
		};
		option (google.api.method_signature) = "workflow,update_mask";
		option (google.api.http) = {
			patch: "/v1beta/{workflow.name=projects/*/locations/*/workflows/*}"
			body: "workflow"
		};

	}
}

message Workflow {
	option (google.api.resource) = {
		type: "workflows.googleapis.com/Workflow"
		pattern: ["projects/{project}/locations/{location}/workflows/{workflow}"]
	};

	enum State {

		STATE_UNSPECIFIED = 0;
		ACTIVE = 1;
	}

	string name = 1;
	string description = 2;
	State state = 3 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string revision_id = 4 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.protobuf.Timestamp create_time = 5 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.protobuf.Timestamp update_time = 6 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.protobuf.Timestamp revision_create_time = 7 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	map<string, string> labels = 8;
	string service_account = 9;
	oneof source_code {
		string source_contents = 10;
	}
}

message ListWorkflowsRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "locations.googleapis.com/Location"
		}
	];
	int32 page_size = 2;
	string page_token = 3;
	string filter = 4;
	string order_by = 5;
}

message ListWorkflowsResponse {

	repeated Workflow workflows = 1;
	string next_page_token = 2;
	repeated string unreachable = 3;
}

message GetWorkflowRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "workflows.googleapis.com/Workflow"
		}
	];
}

message CreateWorkflowRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "locations.googleapis.com/Location"
		}
	];
	Workflow workflow = 2 [
		(google.api.field_behavior) = REQUIRED
	];
	string workflow_id = 3 [
		(google.api.field_behavior) = REQUIRED
	];
}

message DeleteWorkflowRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "workflows.googleapis.com/Workflow"
		}
	];
}

message UpdateWorkflowRequest {

	Workflow workflow = 1 [
		(google.api.field_behavior) = REQUIRED
	];
	google.protobuf.FieldMask update_mask = 2;
}

message OperationMetadata {

	google.protobuf.Timestamp create_time = 1;
	google.protobuf.Timestamp end_time = 2;
	string target = 3;
	string verb = 4;
	string api_version = 5;
}
