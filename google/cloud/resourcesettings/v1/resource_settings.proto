syntax = "proto3";

package google.cloud.resourcesettings.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";

option java_package = "com.google.cloud.resourcesettings.v1";
option java_outer_classname = "ResourceSettingsProto";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/cloud/resourcesettings/v1;resourcesettings";
option cc_enable_arenas = true;
option csharp_namespace = "Google.Cloud.ResourceSettings.V1";
option php_namespace = "Google\\Cloud\\ResourceSettings\\V1";
option ruby_package = "Google::Cloud::ResourceSettings::V1";


enum SettingView {

	SETTING_VIEW_UNSPECIFIED = 0;
	SETTING_VIEW_BASIC = 1;
	SETTING_VIEW_EFFECTIVE_VALUE = 2;
	SETTING_VIEW_LOCAL_VALUE = 3;
}

service ResourceSettingsService {
	option (google.api.default_host) = "resourcesettings.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/cloud-platform";

	rpc ListSettings(google.cloud.resourcesettings.v1.ListSettingsRequest) returns (google.cloud.resourcesettings.v1.ListSettingsResponse) {
		option (google.api.method_signature) = "parent";
		option (google.api.http) = {
			get: "/v1/{parent=organizations/*}/settings"
			additional_bindings: {
				get: "/v1/{parent=folders/*}/settings"
			}
			additional_bindings: {
				get: "/v1/{parent=projects/*}/settings"
			}
		};

	}
	rpc GetSetting(google.cloud.resourcesettings.v1.GetSettingRequest) returns (google.cloud.resourcesettings.v1.Setting) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v1/{name=organizations/*/settings/*}"
			additional_bindings: {
				get: "/v1/{name=folders/*/settings/*}"
			}
			additional_bindings: {
				get: "/v1/{name=projects/*/settings/*}"
			}
		};

	}
	rpc UpdateSetting(google.cloud.resourcesettings.v1.UpdateSettingRequest) returns (google.cloud.resourcesettings.v1.Setting) {
		option (google.api.http) = {
			patch: "/v1/{setting.name=organizations/*/settings/*}"
			body: "setting"
			additional_bindings: {
				patch: "/v1/{setting.name=folders/*/settings/*}"
				body: "setting"
			}
			additional_bindings: {
				patch: "/v1/{setting.name=projects/*/settings/*}"
				body: "setting"
			}
		};

	}
}

message Setting {
	option (google.api.resource) = {
		type: "resourcesettings.googleapis.com/Setting"
		pattern: ["projects/{project_number}/settings/{setting_name}","folders/{folder}/settings/{setting_name}","organizations/{organization}/settings/{setting_name}"]
	};

	string name = 1;
	SettingMetadata metadata = 7 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	Value local_value = 8;
	Value effective_value = 9 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string etag = 10;
}

message SettingMetadata {

	enum DataType {

		DATA_TYPE_UNSPECIFIED = 0;
		BOOLEAN = 1;
		STRING = 2;
		STRING_SET = 3;
		ENUM_VALUE = 4;
	}

	string display_name = 1;
	string description = 2;
	bool read_only = 3;
	DataType data_type = 4;
	Value default_value = 5;
}

message Value {

	message StringSet {

		repeated string values = 1;
	}

	message EnumValue {

		string value = 1;
	}

	oneof value {
		bool boolean_value = 1;
		string string_value = 2;
		StringSet string_set_value = 3;
		EnumValue enum_value = 4;
	}
}

message ListSettingsRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "*"
		}
	];
	int32 page_size = 2;
	string page_token = 3;
	SettingView view = 4;
}

message ListSettingsResponse {

	repeated Setting settings = 1;
	string next_page_token = 2;
}

message GetSettingRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "resourcesettings.googleapis.com/Setting"
		}
	];
	SettingView view = 2;
}

message UpdateSettingRequest {

	Setting setting = 1 [
		(google.api.field_behavior) = REQUIRED
	];
}
