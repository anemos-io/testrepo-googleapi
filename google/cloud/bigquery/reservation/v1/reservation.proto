syntax = "proto3";

package google.cloud.bigquery.reservation.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "google/rpc/status.proto";

option java_package = "com.google.cloud.bigquery.reservation.v1";
option java_outer_classname = "ReservationProto";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/cloud/bigquery/reservation/v1;reservation";
option csharp_namespace = "Google.Cloud.BigQuery.Reservation.V1";
option php_namespace = "Google\\Cloud\\BigQuery\\Reservation\\V1";


service ReservationService {
	option (google.api.default_host) = "bigqueryreservation.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/bigquery,https://www.googleapis.com/auth/cloud-platform";

	rpc CreateReservation(google.cloud.bigquery.reservation.v1.CreateReservationRequest) returns (google.cloud.bigquery.reservation.v1.Reservation) {
		option (google.api.method_signature) = "parent,reservation,reservation_id";
		option (google.api.http) = {
			post: "/v1/{parent=projects/*/locations/*}/reservations"
			body: "reservation"
		};

	}
	rpc ListReservations(google.cloud.bigquery.reservation.v1.ListReservationsRequest) returns (google.cloud.bigquery.reservation.v1.ListReservationsResponse) {
		option (google.api.method_signature) = "parent";
		option (google.api.http) = {
			get: "/v1/{parent=projects/*/locations/*}/reservations"
		};

	}
	rpc GetReservation(google.cloud.bigquery.reservation.v1.GetReservationRequest) returns (google.cloud.bigquery.reservation.v1.Reservation) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v1/{name=projects/*/locations/*/reservations/*}"
		};

	}
	rpc DeleteReservation(google.cloud.bigquery.reservation.v1.DeleteReservationRequest) returns (google.protobuf.Empty) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			delete: "/v1/{name=projects/*/locations/*/reservations/*}"
		};

	}
	rpc UpdateReservation(google.cloud.bigquery.reservation.v1.UpdateReservationRequest) returns (google.cloud.bigquery.reservation.v1.Reservation) {
		option (google.api.method_signature) = "reservation,update_mask";
		option (google.api.http) = {
			patch: "/v1/{reservation.name=projects/*/locations/*/reservations/*}"
			body: "reservation"
		};

	}
	rpc CreateCapacityCommitment(google.cloud.bigquery.reservation.v1.CreateCapacityCommitmentRequest) returns (google.cloud.bigquery.reservation.v1.CapacityCommitment) {
		option (google.api.method_signature) = "parent,capacity_commitment";
		option (google.api.http) = {
			post: "/v1/{parent=projects/*/locations/*}/capacityCommitments"
			body: "capacity_commitment"
		};

	}
	rpc ListCapacityCommitments(google.cloud.bigquery.reservation.v1.ListCapacityCommitmentsRequest) returns (google.cloud.bigquery.reservation.v1.ListCapacityCommitmentsResponse) {
		option (google.api.method_signature) = "parent";
		option (google.api.http) = {
			get: "/v1/{parent=projects/*/locations/*}/capacityCommitments"
		};

	}
	rpc GetCapacityCommitment(google.cloud.bigquery.reservation.v1.GetCapacityCommitmentRequest) returns (google.cloud.bigquery.reservation.v1.CapacityCommitment) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v1/{name=projects/*/locations/*/capacityCommitments/*}"
		};

	}
	rpc DeleteCapacityCommitment(google.cloud.bigquery.reservation.v1.DeleteCapacityCommitmentRequest) returns (google.protobuf.Empty) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			delete: "/v1/{name=projects/*/locations/*/capacityCommitments/*}"
		};

	}
	rpc UpdateCapacityCommitment(google.cloud.bigquery.reservation.v1.UpdateCapacityCommitmentRequest) returns (google.cloud.bigquery.reservation.v1.CapacityCommitment) {
		option (google.api.method_signature) = "capacity_commitment,update_mask";
		option (google.api.http) = {
			patch: "/v1/{capacity_commitment.name=projects/*/locations/*/capacityCommitments/*}"
			body: "capacity_commitment"
		};

	}
	rpc SplitCapacityCommitment(google.cloud.bigquery.reservation.v1.SplitCapacityCommitmentRequest) returns (google.cloud.bigquery.reservation.v1.SplitCapacityCommitmentResponse) {
		option (google.api.method_signature) = "name,slot_count";
		option (google.api.http) = {
			post: "/v1/{name=projects/*/locations/*/capacityCommitments/*}:split"
			body: "*"
		};

	}
	rpc MergeCapacityCommitments(google.cloud.bigquery.reservation.v1.MergeCapacityCommitmentsRequest) returns (google.cloud.bigquery.reservation.v1.CapacityCommitment) {
		option (google.api.method_signature) = "parent,capacity_commitment_ids";
		option (google.api.http) = {
			post: "/v1/{parent=projects/*/locations/*}/capacityCommitments:merge"
			body: "*"
		};

	}
	rpc CreateAssignment(google.cloud.bigquery.reservation.v1.CreateAssignmentRequest) returns (google.cloud.bigquery.reservation.v1.Assignment) {
		option (google.api.method_signature) = "parent,assignment";
		option (google.api.http) = {
			post: "/v1/{parent=projects/*/locations/*/reservations/*}/assignments"
			body: "assignment"
		};

	}
	rpc ListAssignments(google.cloud.bigquery.reservation.v1.ListAssignmentsRequest) returns (google.cloud.bigquery.reservation.v1.ListAssignmentsResponse) {
		option (google.api.method_signature) = "parent";
		option (google.api.http) = {
			get: "/v1/{parent=projects/*/locations/*/reservations/*}/assignments"
		};

	}
	rpc DeleteAssignment(google.cloud.bigquery.reservation.v1.DeleteAssignmentRequest) returns (google.protobuf.Empty) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			delete: "/v1/{name=projects/*/locations/*/reservations/*/assignments/*}"
		};

	}
	rpc SearchAssignments(google.cloud.bigquery.reservation.v1.SearchAssignmentsRequest) returns (google.cloud.bigquery.reservation.v1.SearchAssignmentsResponse) {
		option (google.api.method_signature) = "parent,query";
		option (google.api.http) = {
			get: "/v1/{parent=projects/*/locations/*}:searchAssignments"
		};

	}
	rpc MoveAssignment(google.cloud.bigquery.reservation.v1.MoveAssignmentRequest) returns (google.cloud.bigquery.reservation.v1.Assignment) {
		option (google.api.method_signature) = "name,destination_id";
		option (google.api.http) = {
			post: "/v1/{name=projects/*/locations/*/reservations/*/assignments/*}:move"
			body: "*"
		};

	}
	rpc GetBiReservation(google.cloud.bigquery.reservation.v1.GetBiReservationRequest) returns (google.cloud.bigquery.reservation.v1.BiReservation) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v1/{name=projects/*/locations/*/biReservation}"
		};

	}
	rpc UpdateBiReservation(google.cloud.bigquery.reservation.v1.UpdateBiReservationRequest) returns (google.cloud.bigquery.reservation.v1.BiReservation) {
		option (google.api.method_signature) = "bi_reservation,update_mask";
		option (google.api.http) = {
			patch: "/v1/{bi_reservation.name=projects/*/locations/*/biReservation}"
			body: "bi_reservation"
		};

	}
}

message Reservation {
	option (google.api.resource) = {
		type: "bigqueryreservation.googleapis.com/Reservation"
		pattern: ["projects/{project}/locations/{location}/reservations/{reservation}"]
	};

	string name = 1;
	int64 slot_capacity = 2;
	bool ignore_idle_slots = 4;
}

message CapacityCommitment {
	option (google.api.resource) = {
		type: "bigqueryreservation.googleapis.com/CapacityCommitment"
		pattern: ["projects/{project}/locations/{location}/capacityCommitments/{capacity_commitment}"]
	};

	enum CommitmentPlan {

		COMMITMENT_PLAN_UNSPECIFIED = 0;
		FLEX = 3;
		TRIAL = 5;
		MONTHLY = 2;
		ANNUAL = 4;
	}

	enum State {

		STATE_UNSPECIFIED = 0;
		PENDING = 1;
		ACTIVE = 2;
		FAILED = 3;
	}

	string name = 1 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	int64 slot_count = 2;
	CommitmentPlan plan = 3;
	State state = 4 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.protobuf.Timestamp commitment_end_time = 5 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.rpc.Status failure_status = 7 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	CommitmentPlan renewal_plan = 8;
}

message CreateReservationRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "bigqueryreservation.googleapis.com/Reservation"
		}
	];
	string reservation_id = 2;
	Reservation reservation = 3;
}

message ListReservationsRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "bigqueryreservation.googleapis.com/Reservation"
		}
	];
	int32 page_size = 2;
	string page_token = 3;
}

message ListReservationsResponse {

	repeated Reservation reservations = 1;
	string next_page_token = 2;
}

message GetReservationRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "bigqueryreservation.googleapis.com/Reservation"
		}
	];
}

message DeleteReservationRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "bigqueryreservation.googleapis.com/Reservation"
		}
	];
}

message UpdateReservationRequest {

	Reservation reservation = 1;
	google.protobuf.FieldMask update_mask = 2;
}

message CreateCapacityCommitmentRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "bigqueryreservation.googleapis.com/CapacityCommitment"
		}
	];
	CapacityCommitment capacity_commitment = 2;
	bool enforce_single_admin_project_per_org = 4;
}

message ListCapacityCommitmentsRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "bigqueryreservation.googleapis.com/CapacityCommitment"
		}
	];
	int32 page_size = 2;
	string page_token = 3;
}

message ListCapacityCommitmentsResponse {

	repeated CapacityCommitment capacity_commitments = 1;
	string next_page_token = 2;
}

message GetCapacityCommitmentRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "bigqueryreservation.googleapis.com/CapacityCommitment"
		}
	];
}

message DeleteCapacityCommitmentRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "bigqueryreservation.googleapis.com/CapacityCommitment"
		}
	];
}

message UpdateCapacityCommitmentRequest {

	CapacityCommitment capacity_commitment = 1;
	google.protobuf.FieldMask update_mask = 2;
}

message SplitCapacityCommitmentRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "bigqueryreservation.googleapis.com/CapacityCommitment"
		}
	];
	int64 slot_count = 2;
}

message SplitCapacityCommitmentResponse {

	CapacityCommitment first = 1;
	CapacityCommitment second = 2;
}

message MergeCapacityCommitmentsRequest {

	string parent = 1 [
		(google.api.resource_reference) = {
			child_type: "bigqueryreservation.googleapis.com/CapacityCommitment"
		}
	];
	repeated string capacity_commitment_ids = 2;
}

message Assignment {
	option (google.api.resource) = {
		type: "bigqueryreservation.googleapis.com/Assignment"
		pattern: ["projects/{project}/locations/{location}/reservations/{reservation}/assignments/{assignment}"]
	};

	enum JobType {

		JOB_TYPE_UNSPECIFIED = 0;
		PIPELINE = 1;
		QUERY = 2;
	}

	enum State {

		STATE_UNSPECIFIED = 0;
		PENDING = 1;
		ACTIVE = 2;
	}

	string name = 1 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string assignee = 4;
	JobType job_type = 3;
	State state = 6 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
}

message CreateAssignmentRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "bigqueryreservation.googleapis.com/Assignment"
		}
	];
	Assignment assignment = 2;
}

message ListAssignmentsRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "bigqueryreservation.googleapis.com/Assignment"
		}
	];
	int32 page_size = 2;
	string page_token = 3;
}

message ListAssignmentsResponse {

	repeated Assignment assignments = 1;
	string next_page_token = 2;
}

message DeleteAssignmentRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "bigqueryreservation.googleapis.com/Assignment"
		}
	];
}

message SearchAssignmentsRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "locations.googleapis.com/Location"
		}
	];
	string query = 2;
	int32 page_size = 3;
	string page_token = 4;
}

message SearchAssignmentsResponse {

	repeated Assignment assignments = 1;
	string next_page_token = 2;
}

message MoveAssignmentRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "bigqueryreservation.googleapis.com/Assignment"
		}
	];
	string destination_id = 3 [
		(google.api.resource_reference) = {
			child_type: "bigqueryreservation.googleapis.com/Assignment"
		}
	];
}

message BiReservation {
	option (google.api.resource) = {
		type: "bigqueryreservation.googleapis.com/BiReservation"
		pattern: ["projects/{project}/locations/{location}/bireservation"]
	};

	string name = 1;
	google.protobuf.Timestamp update_time = 3 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	int64 size = 4;
}

message GetBiReservationRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "bigqueryreservation.googleapis.com/BiReservation"
		}
	];
}

message UpdateBiReservationRequest {

	BiReservation bi_reservation = 1;
	google.protobuf.FieldMask update_mask = 2;
}
