syntax = "proto3";

package google.cloud.aiplatform.v1;

import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/cloud/aiplatform/v1/encryption_spec.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";

option java_package = "com.google.cloud.aiplatform.v1";
option java_outer_classname = "FeaturestoreProto";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/cloud/aiplatform/v1;aiplatform";
option csharp_namespace = "Google.Cloud.AIPlatform.V1";
option php_namespace = "Google\\Cloud\\AIPlatform\\V1";
option ruby_package = "Google::Cloud::AIPlatform::V1";


message Featurestore {
	option (google.api.resource) = {
		type: "aiplatform.googleapis.com/Featurestore"
		pattern: ["projects/{project}/locations/{location}/featurestores/{featurestore}"]
	};

	message OnlineServingConfig {

		int32 fixed_node_count = 2;
	}

	enum State {

		STATE_UNSPECIFIED = 0;
		STABLE = 1;
		UPDATING = 2;
	}

	string name = 1 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.protobuf.Timestamp create_time = 3 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.protobuf.Timestamp update_time = 4 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string etag = 5 [
		(google.api.field_behavior) = OPTIONAL
	];
	map<string, string> labels = 6 [
		(google.api.field_behavior) = OPTIONAL
	];
	OnlineServingConfig online_serving_config = 7 [
		(google.api.field_behavior) = REQUIRED
	];
	State state = 8 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.cloud.aiplatform.v1.EncryptionSpec encryption_spec = 10 [
		(google.api.field_behavior) = OPTIONAL
	];
}
