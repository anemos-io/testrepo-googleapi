syntax = "proto3";

package google.cloud.aiplatform.v1;

import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/cloud/aiplatform/v1/completion_stats.proto";
import "google/cloud/aiplatform/v1/encryption_spec.proto";
import "google/cloud/aiplatform/v1/explanation.proto";
import "google/cloud/aiplatform/v1/io.proto";
import "google/cloud/aiplatform/v1/job_state.proto";
import "google/cloud/aiplatform/v1/machine_resources.proto";
import "google/cloud/aiplatform/v1/manual_batch_tuning_parameters.proto";
import "google/cloud/aiplatform/v1/model_monitoring.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/rpc/status.proto";
import "google/api/annotations.proto";

option java_package = "com.google.cloud.aiplatform.v1";
option java_outer_classname = "BatchPredictionJobProto";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/cloud/aiplatform/v1;aiplatform";
option csharp_namespace = "Google.Cloud.AIPlatform.V1";
option php_namespace = "Google\\Cloud\\AIPlatform\\V1";
option ruby_package = "Google::Cloud::AIPlatform::V1";


message BatchPredictionJob {
	option (google.api.resource) = {
		type: "aiplatform.googleapis.com/BatchPredictionJob"
		pattern: ["projects/{project}/locations/{location}/batchPredictionJobs/{batch_prediction_job}"]
	};

	message InputConfig {

		oneof source {
			google.cloud.aiplatform.v1.GcsSource gcs_source = 2;
			google.cloud.aiplatform.v1.BigQuerySource bigquery_source = 3;
		}
		string instances_format = 1 [
			(google.api.field_behavior) = REQUIRED
		];
	}

	message OutputConfig {

		oneof destination {
			google.cloud.aiplatform.v1.GcsDestination gcs_destination = 2;
			google.cloud.aiplatform.v1.BigQueryDestination bigquery_destination = 3;
		}
		string predictions_format = 1 [
			(google.api.field_behavior) = REQUIRED
		];
	}

	message OutputInfo {

		oneof output_location {
			string gcs_output_directory = 1 [
				(google.api.field_behavior) = OUTPUT_ONLY
			];
			string bigquery_output_dataset = 2 [
				(google.api.field_behavior) = OUTPUT_ONLY
			];
		}
		string bigquery_output_table = 4 [
			(google.api.field_behavior) = OUTPUT_ONLY
		];
	}

	string name = 1 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string display_name = 2 [
		(google.api.field_behavior) = REQUIRED
	];
	string model = 3 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "aiplatform.googleapis.com/Model"
		}
	];
	InputConfig input_config = 4 [
		(google.api.field_behavior) = REQUIRED
	];
	google.protobuf.Value model_parameters = 5;
	OutputConfig output_config = 6 [
		(google.api.field_behavior) = REQUIRED
	];
	google.cloud.aiplatform.v1.BatchDedicatedResources dedicated_resources = 7;
	google.cloud.aiplatform.v1.ManualBatchTuningParameters manual_batch_tuning_parameters = 8 [
		(google.api.field_behavior) = IMMUTABLE
	];
	bool generate_explanation = 23;
	google.cloud.aiplatform.v1.ExplanationSpec explanation_spec = 25;
	OutputInfo output_info = 9 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.cloud.aiplatform.v1.JobState state = 10 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.rpc.Status error = 11 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	repeated google.rpc.Status partial_failures = 12 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.cloud.aiplatform.v1.ResourcesConsumed resources_consumed = 13 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.cloud.aiplatform.v1.CompletionStats completion_stats = 14 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.protobuf.Timestamp create_time = 15 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.protobuf.Timestamp start_time = 16 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.protobuf.Timestamp end_time = 17 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.protobuf.Timestamp update_time = 18 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	map<string, string> labels = 19;
	google.cloud.aiplatform.v1.EncryptionSpec encryption_spec = 24;
}
