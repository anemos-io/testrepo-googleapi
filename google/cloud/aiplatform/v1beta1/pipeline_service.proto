syntax = "proto3";

package google.cloud.aiplatform.v1beta1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/cloud/aiplatform/v1beta1/pipeline_job.proto";
import "google/cloud/aiplatform/v1beta1/training_pipeline.proto";
import "google/longrunning/operations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";

option java_package = "com.google.cloud.aiplatform.v1beta1";
option java_outer_classname = "PipelineServiceProto";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/cloud/aiplatform/v1beta1;aiplatform";
option csharp_namespace = "Google.Cloud.AIPlatform.V1Beta1";
option php_namespace = "Google\\Cloud\\AIPlatform\\V1beta1";
option ruby_package = "Google::Cloud::AIPlatform::V1beta1";


service PipelineService {
	option (google.api.default_host) = "aiplatform.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/cloud-platform";

	rpc CreateTrainingPipeline(google.cloud.aiplatform.v1beta1.CreateTrainingPipelineRequest) returns (google.cloud.aiplatform.v1beta1.TrainingPipeline) {
		option (google.api.method_signature) = "parent,training_pipeline";
		option (google.api.http) = {
			post: "/v1beta1/{parent=projects/*/locations/*}/trainingPipelines"
			body: "training_pipeline"
		};

	}
	rpc GetTrainingPipeline(google.cloud.aiplatform.v1beta1.GetTrainingPipelineRequest) returns (google.cloud.aiplatform.v1beta1.TrainingPipeline) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v1beta1/{name=projects/*/locations/*/trainingPipelines/*}"
		};

	}
	rpc ListTrainingPipelines(google.cloud.aiplatform.v1beta1.ListTrainingPipelinesRequest) returns (google.cloud.aiplatform.v1beta1.ListTrainingPipelinesResponse) {
		option (google.api.method_signature) = "parent";
		option (google.api.http) = {
			get: "/v1beta1/{parent=projects/*/locations/*}/trainingPipelines"
		};

	}
	rpc DeleteTrainingPipeline(google.cloud.aiplatform.v1beta1.DeleteTrainingPipelineRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "google.protobuf.Empty"
			metadata_type: "DeleteOperationMetadata"
		};
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			delete: "/v1beta1/{name=projects/*/locations/*/trainingPipelines/*}"
		};

	}
	rpc CancelTrainingPipeline(google.cloud.aiplatform.v1beta1.CancelTrainingPipelineRequest) returns (google.protobuf.Empty) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			post: "/v1beta1/{name=projects/*/locations/*/trainingPipelines/*}:cancel"
			body: "*"
		};

	}
	rpc CreatePipelineJob(google.cloud.aiplatform.v1beta1.CreatePipelineJobRequest) returns (google.cloud.aiplatform.v1beta1.PipelineJob) {
		option (google.api.method_signature) = "parent,pipeline_job,pipeline_job_id";
		option (google.api.http) = {
			post: "/v1beta1/{parent=projects/*/locations/*}/pipelineJobs"
			body: "pipeline_job"
		};

	}
	rpc GetPipelineJob(google.cloud.aiplatform.v1beta1.GetPipelineJobRequest) returns (google.cloud.aiplatform.v1beta1.PipelineJob) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v1beta1/{name=projects/*/locations/*/pipelineJobs/*}"
		};

	}
	rpc ListPipelineJobs(google.cloud.aiplatform.v1beta1.ListPipelineJobsRequest) returns (google.cloud.aiplatform.v1beta1.ListPipelineJobsResponse) {
		option (google.api.method_signature) = "parent";
		option (google.api.http) = {
			get: "/v1beta1/{parent=projects/*/locations/*}/pipelineJobs"
		};

	}
	rpc DeletePipelineJob(google.cloud.aiplatform.v1beta1.DeletePipelineJobRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "google.protobuf.Empty"
			metadata_type: "DeleteOperationMetadata"
		};
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			delete: "/v1beta1/{name=projects/*/locations/*/pipelineJobs/*}"
		};

	}
	rpc CancelPipelineJob(google.cloud.aiplatform.v1beta1.CancelPipelineJobRequest) returns (google.protobuf.Empty) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			post: "/v1beta1/{name=projects/*/locations/*/pipelineJobs/*}:cancel"
			body: "*"
		};

	}
}

message CreateTrainingPipelineRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "locations.googleapis.com/Location"
		}
	];
	google.cloud.aiplatform.v1beta1.TrainingPipeline training_pipeline = 2 [
		(google.api.field_behavior) = REQUIRED
	];
}

message GetTrainingPipelineRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "aiplatform.googleapis.com/TrainingPipeline"
		}
	];
}

message ListTrainingPipelinesRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "locations.googleapis.com/Location"
		}
	];
	string filter = 2;
	int32 page_size = 3;
	string page_token = 4;
	google.protobuf.FieldMask read_mask = 5;
}

message ListTrainingPipelinesResponse {

	repeated google.cloud.aiplatform.v1beta1.TrainingPipeline training_pipelines = 1;
	string next_page_token = 2;
}

message DeleteTrainingPipelineRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "aiplatform.googleapis.com/TrainingPipeline"
		}
	];
}

message CancelTrainingPipelineRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "aiplatform.googleapis.com/TrainingPipeline"
		}
	];
}

message CreatePipelineJobRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "locations.googleapis.com/Location"
		}
	];
	google.cloud.aiplatform.v1beta1.PipelineJob pipeline_job = 2 [
		(google.api.field_behavior) = REQUIRED
	];
	string pipeline_job_id = 3;
}

message GetPipelineJobRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "aiplatform.googleapis.com/PipelineJob"
		}
	];
}

message ListPipelineJobsRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "locations.googleapis.com/Location"
		}
	];
	string filter = 2;
	int32 page_size = 3;
	string page_token = 4;
	string order_by = 6;
}

message ListPipelineJobsResponse {

	repeated google.cloud.aiplatform.v1beta1.PipelineJob pipeline_jobs = 1;
	string next_page_token = 2;
}

message DeletePipelineJobRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "aiplatform.googleapis.com/PipelineJob"
		}
	];
}

message CancelPipelineJobRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "aiplatform.googleapis.com/PipelineJob"
		}
	];
}
