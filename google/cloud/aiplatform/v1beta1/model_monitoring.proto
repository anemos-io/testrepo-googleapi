syntax = "proto3";

package google.cloud.aiplatform.v1beta1;

import "google/api/resource.proto";
import "google/cloud/aiplatform/v1beta1/io.proto";
import "google/api/annotations.proto";

option java_package = "com.google.cloud.aiplatform.v1beta1";
option java_outer_classname = "ModelMonitoringProto";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/cloud/aiplatform/v1beta1;aiplatform";
option csharp_namespace = "Google.Cloud.AIPlatform.V1Beta1";
option php_namespace = "Google\\Cloud\\AIPlatform\\V1beta1";
option ruby_package = "Google::Cloud::AIPlatform::V1beta1";


message ModelMonitoringObjectiveConfig {

	message TrainingDataset {

		oneof data_source {
			string dataset = 3 [
				(google.api.resource_reference) = {
					type: "aiplatform.googleapis.com/Dataset"
				}
			];
			google.cloud.aiplatform.v1beta1.GcsSource gcs_source = 4;
			google.cloud.aiplatform.v1beta1.BigQuerySource bigquery_source = 5;
		}
		string data_format = 2;
		string target_field = 6;
		SamplingStrategy logging_sampling_strategy = 7;
	}

	message TrainingPredictionSkewDetectionConfig {

		map<string, ThresholdConfig> skew_thresholds = 1;
		map<string, ThresholdConfig> attribution_score_skew_thresholds = 2;
	}

	message PredictionDriftDetectionConfig {

		map<string, ThresholdConfig> drift_thresholds = 1;
		map<string, ThresholdConfig> attribution_score_drift_thresholds = 2;
	}

	message ExplanationConfig {

		message ExplanationBaseline {

			enum PredictionFormat {

				PREDICTION_FORMAT_UNSPECIFIED = 0;
				JSONL = 2;
				BIGQUERY = 3;
			}

			oneof destination {
				google.cloud.aiplatform.v1beta1.GcsDestination gcs = 2;
				google.cloud.aiplatform.v1beta1.BigQueryDestination bigquery = 3;
			}
			PredictionFormat prediction_format = 1;
		}

		bool enable_feature_attributes = 1;
		ExplanationBaseline explanation_baseline = 2;
	}

	TrainingDataset training_dataset = 1;
	TrainingPredictionSkewDetectionConfig training_prediction_skew_detection_config = 2;
	PredictionDriftDetectionConfig prediction_drift_detection_config = 3;
	ExplanationConfig explanation_config = 5;
}

message ModelMonitoringAlertConfig {

	message EmailAlertConfig {

		repeated string user_emails = 1;
	}

	oneof alert {
		EmailAlertConfig email_alert_config = 1;
	}
}

message ThresholdConfig {

	oneof threshold {
		double value = 1;
	}
}

message SamplingStrategy {

	message RandomSampleConfig {

		double sample_rate = 1;
	}

	RandomSampleConfig random_sample_config = 1;
}
