syntax = "proto3";

package google.cloud.networkservices.v1beta1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/cloud/networkservices/v1beta1/endpoint_policy.proto";
import "google/longrunning/operations.proto";

option java_package = "com.google.cloud.networkservices.v1beta1";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/cloud/networkservices/v1beta1;networkservices";
option csharp_namespace = "Google.Cloud.NetworkServices.V1Beta1";
option php_namespace = "Google\\Cloud\\NetworkServices\\V1beta1";
option ruby_package = "Google::Cloud::NetworkServices::V1beta1";


service NetworkServices {
	option (google.api.default_host) = "networkservices.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/cloud-platform";

	rpc ListEndpointPolicies(google.cloud.networkservices.v1beta1.ListEndpointPoliciesRequest) returns (google.cloud.networkservices.v1beta1.ListEndpointPoliciesResponse) {
		option (google.api.method_signature) = "parent";
		option (google.api.http) = {
			get: "/v1beta1/{parent=projects/*/locations/*}/endpointPolicies"
		};

	}
	rpc GetEndpointPolicy(google.cloud.networkservices.v1beta1.GetEndpointPolicyRequest) returns (google.cloud.networkservices.v1beta1.EndpointPolicy) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v1beta1/{name=projects/*/locations/*/endpointPolicies/*}"
		};

	}
	rpc CreateEndpointPolicy(google.cloud.networkservices.v1beta1.CreateEndpointPolicyRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "EndpointPolicy"
			metadata_type: "google.cloud.networkservices.v1beta1.OperationMetadata"
		};
		option (google.api.method_signature) = "parent,endpoint_policy,endpoint_policy_id";
		option (google.api.http) = {
			post: "/v1beta1/{parent=projects/*/locations/*}/endpointPolicies"
			body: "endpoint_policy"
		};

	}
	rpc UpdateEndpointPolicy(google.cloud.networkservices.v1beta1.UpdateEndpointPolicyRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "EndpointPolicy"
			metadata_type: "google.cloud.networkservices.v1beta1.OperationMetadata"
		};
		option (google.api.method_signature) = "endpoint_policy,update_mask";
		option (google.api.http) = {
			patch: "/v1beta1/{endpoint_policy.name=projects/*/locations/*/endpointPolicies/*}"
			body: "endpoint_policy"
		};

	}
	rpc DeleteEndpointPolicy(google.cloud.networkservices.v1beta1.DeleteEndpointPolicyRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "google.protobuf.Empty"
			metadata_type: "google.cloud.networkservices.v1beta1.OperationMetadata"
		};
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			delete: "/v1beta1/{name=projects/*/locations/*/endpointPolicies/*}"
		};

	}
}
