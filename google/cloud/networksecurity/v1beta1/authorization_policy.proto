syntax = "proto3";

package google.cloud.networksecurity.v1beta1;

import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";

option java_package = "com.google.cloud.networksecurity.v1beta1";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/cloud/networksecurity/v1beta1;networksecurity";
option csharp_namespace = "Google.Cloud.NetworkSecurity.V1Beta1";
option php_namespace = "Google\\Cloud\\NetworkSecurity\\V1beta1";
option ruby_package = "Google::Cloud::NetworkSecurity::V1beta1";


message AuthorizationPolicy {
	option (google.api.resource) = {
		type: "networksecurity.googleapis.com/AuthorizationPolicy"
		pattern: ["projects/{project}/locations/{location}/authorizationPolicies/{authorization_policy}"]
	};

	message Rule {

		message Source {

			repeated string principals = 1 [
				(google.api.field_behavior) = OPTIONAL
			];
			repeated string ip_blocks = 2 [
				(google.api.field_behavior) = OPTIONAL
			];
		}

		message Destination {

			message HttpHeaderMatch {

				oneof type {
					string regex_match = 2 [
						(google.api.field_behavior) = REQUIRED
					];
				}
				string header_name = 1 [
					(google.api.field_behavior) = REQUIRED
				];
			}

			repeated string hosts = 1 [
				(google.api.field_behavior) = REQUIRED
			];
			repeated uint32 ports = 2 [
				(google.api.field_behavior) = REQUIRED
			];
			repeated string methods = 4 [
				(google.api.field_behavior) = OPTIONAL
			];
			HttpHeaderMatch http_header_match = 5 [
				(google.api.field_behavior) = OPTIONAL
			];
		}

		repeated Source sources = 1 [
			(google.api.field_behavior) = OPTIONAL
		];
		repeated Destination destinations = 2 [
			(google.api.field_behavior) = OPTIONAL
		];
	}

	enum Action {

		ACTION_UNSPECIFIED = 0;
		ALLOW = 1;
		DENY = 2;
	}

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
	];
	string description = 2 [
		(google.api.field_behavior) = OPTIONAL
	];
	google.protobuf.Timestamp create_time = 3 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.protobuf.Timestamp update_time = 4 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	map<string, string> labels = 5 [
		(google.api.field_behavior) = OPTIONAL
	];
	Action action = 6 [
		(google.api.field_behavior) = REQUIRED
	];
	repeated Rule rules = 7 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message ListAuthorizationPoliciesRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "locations.googleapis.com/Location"
		}
	];
	int32 page_size = 2;
	string page_token = 3;
}

message ListAuthorizationPoliciesResponse {

	repeated AuthorizationPolicy authorization_policies = 1;
	string next_page_token = 2;
}

message GetAuthorizationPolicyRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "networksecurity.googleapis.com/AuthorizationPolicy"
		}
	];
}

message CreateAuthorizationPolicyRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "networksecurity.googleapis.com/AuthorizationPolicy"
		}
	];
	string authorization_policy_id = 2 [
		(google.api.field_behavior) = REQUIRED
	];
	AuthorizationPolicy authorization_policy = 3 [
		(google.api.field_behavior) = REQUIRED
	];
}

message UpdateAuthorizationPolicyRequest {

	google.protobuf.FieldMask update_mask = 1 [
		(google.api.field_behavior) = OPTIONAL
	];
	AuthorizationPolicy authorization_policy = 2 [
		(google.api.field_behavior) = REQUIRED
	];
}

message DeleteAuthorizationPolicyRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "networksecurity.googleapis.com/AuthorizationPolicy"
		}
	];
}
