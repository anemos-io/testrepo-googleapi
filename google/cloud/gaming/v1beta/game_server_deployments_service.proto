syntax = "proto3";

package google.cloud.gaming.v1beta;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/cloud/gaming/v1beta/game_server_deployments.proto";
import "google/longrunning/operations.proto";

option java_package = "com.google.cloud.gaming.v1beta";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/cloud/gaming/v1beta;gaming";


service GameServerDeploymentsService {
	option (google.api.default_host) = "gameservices.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/cloud-platform";

	rpc ListGameServerDeployments(google.cloud.gaming.v1beta.ListGameServerDeploymentsRequest) returns (google.cloud.gaming.v1beta.ListGameServerDeploymentsResponse) {
		option (google.api.method_signature) = "parent";
		option (google.api.http) = {
			get: "/v1beta/{parent=projects/*/locations/*}/gameServerDeployments"
		};

	}
	rpc GetGameServerDeployment(google.cloud.gaming.v1beta.GetGameServerDeploymentRequest) returns (google.cloud.gaming.v1beta.GameServerDeployment) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v1beta/{name=projects/*/locations/*/gameServerDeployments/*}"
		};

	}
	rpc CreateGameServerDeployment(google.cloud.gaming.v1beta.CreateGameServerDeploymentRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "GameServerDeployment"
			metadata_type: "OperationMetadata"
		};
		option (google.api.method_signature) = "parent,game_server_deployment";
		option (google.api.http) = {
			post: "/v1beta/{parent=projects/*/locations/*}/gameServerDeployments"
			body: "game_server_deployment"
		};

	}
	rpc DeleteGameServerDeployment(google.cloud.gaming.v1beta.DeleteGameServerDeploymentRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "google.protobuf.Empty"
			metadata_type: "OperationMetadata"
		};
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			delete: "/v1beta/{name=projects/*/locations/*/gameServerDeployments/*}"
		};

	}
	rpc UpdateGameServerDeployment(google.cloud.gaming.v1beta.UpdateGameServerDeploymentRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "GameServerDeployment"
			metadata_type: "OperationMetadata"
		};
		option (google.api.method_signature) = "game_server_deployment,update_mask";
		option (google.api.http) = {
			patch: "/v1beta/{game_server_deployment.name=projects/*/locations/*/gameServerDeployments/*}"
			body: "game_server_deployment"
		};

	}
	rpc GetGameServerDeploymentRollout(google.cloud.gaming.v1beta.GetGameServerDeploymentRolloutRequest) returns (google.cloud.gaming.v1beta.GameServerDeploymentRollout) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v1beta/{name=projects/*/locations/*/gameServerDeployments/*}/rollout"
		};

	}
	rpc UpdateGameServerDeploymentRollout(google.cloud.gaming.v1beta.UpdateGameServerDeploymentRolloutRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "GameServerDeployment"
			metadata_type: "OperationMetadata"
		};
		option (google.api.method_signature) = "rollout,update_mask";
		option (google.api.http) = {
			patch: "/v1beta/{rollout.name=projects/*/locations/*/gameServerDeployments/*}/rollout"
			body: "rollout"
		};

	}
	rpc PreviewGameServerDeploymentRollout(google.cloud.gaming.v1beta.PreviewGameServerDeploymentRolloutRequest) returns (google.cloud.gaming.v1beta.PreviewGameServerDeploymentRolloutResponse) {
		option (google.api.http) = {
			patch: "/v1beta/{rollout.name=projects/*/locations/*/gameServerDeployments/*}/rollout:preview"
			body: "rollout"
		};

	}
	rpc FetchDeploymentState(google.cloud.gaming.v1beta.FetchDeploymentStateRequest) returns (google.cloud.gaming.v1beta.FetchDeploymentStateResponse) {
		option (google.api.http) = {
			post: "/v1beta/{name=projects/*/locations/*/gameServerDeployments/*}:fetchDeploymentState"
			body: "*"
		};

	}
}
