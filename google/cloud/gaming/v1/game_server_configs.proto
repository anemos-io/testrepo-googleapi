syntax = "proto3";

package google.cloud.gaming.v1;

import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/cloud/gaming/v1/common.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";

option java_package = "com.google.cloud.gaming.v1";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/cloud/gaming/v1;gaming";


message ListGameServerConfigsRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "gameservices.googleapis.com/GameServerConfig"
		}
	];
	int32 page_size = 2 [
		(google.api.field_behavior) = OPTIONAL
	];
	string page_token = 3 [
		(google.api.field_behavior) = OPTIONAL
	];
	string filter = 4 [
		(google.api.field_behavior) = OPTIONAL
	];
	string order_by = 5 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message ListGameServerConfigsResponse {

	repeated GameServerConfig game_server_configs = 1;
	string next_page_token = 2;
	repeated string unreachable = 4;
}

message GetGameServerConfigRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "gameservices.googleapis.com/GameServerConfig"
		}
	];
}

message CreateGameServerConfigRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "gameservices.googleapis.com/GameServerConfig"
		}
	];
	string config_id = 2 [
		(google.api.field_behavior) = REQUIRED
	];
	GameServerConfig game_server_config = 3 [
		(google.api.field_behavior) = REQUIRED
	];
}

message DeleteGameServerConfigRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "gameservices.googleapis.com/GameServerConfig"
		}
	];
}

message ScalingConfig {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
	];
	string fleet_autoscaler_spec = 2 [
		(google.api.field_behavior) = REQUIRED
	];
	repeated google.cloud.gaming.v1.LabelSelector selectors = 4;
	repeated google.cloud.gaming.v1.Schedule schedules = 5;
}

message FleetConfig {

	string fleet_spec = 1;
	string name = 2;
}

message GameServerConfig {
	option (google.api.resource) = {
		type: "gameservices.googleapis.com/GameServerConfig"
		pattern: ["projects/{project}/locations/{location}/gameServerDeployments/{deployment}/configs/{config}"]
	};

	string name = 1;
	google.protobuf.Timestamp create_time = 2 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.protobuf.Timestamp update_time = 3 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	map<string, string> labels = 4;
	repeated FleetConfig fleet_configs = 5;
	repeated ScalingConfig scaling_configs = 6;
	string description = 7;
}
