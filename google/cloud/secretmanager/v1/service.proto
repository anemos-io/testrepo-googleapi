syntax = "proto3";

package google.cloud.secretmanager.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/cloud/secretmanager/v1/resources.proto";
import "google/iam/v1/iam_policy.proto";
import "google/iam/v1/policy.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";

option java_package = "com.google.cloud.secretmanager.v1";
option java_outer_classname = "ServiceProto";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/cloud/secretmanager/v1;secretmanager";
option cc_enable_arenas = true;
option objc_class_prefix = "GSM";
option csharp_namespace = "Google.Cloud.SecretManager.V1";
option php_namespace = "Google\\Cloud\\SecretManager\\V1";
option ruby_package = "Google::Cloud::SecretManager::V1";


service SecretManagerService {
	option (google.api.default_host) = "secretmanager.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/cloud-platform";

	rpc ListSecrets(google.cloud.secretmanager.v1.ListSecretsRequest) returns (google.cloud.secretmanager.v1.ListSecretsResponse) {
		option (google.api.method_signature) = "parent";
		option (google.api.http) = {
			get: "/v1/{parent=projects/*}/secrets"
		};

	}
	rpc CreateSecret(google.cloud.secretmanager.v1.CreateSecretRequest) returns (google.cloud.secretmanager.v1.Secret) {
		option (google.api.method_signature) = "parent,secret_id,secret";
		option (google.api.http) = {
			post: "/v1/{parent=projects/*}/secrets"
			body: "secret"
		};

	}
	rpc AddSecretVersion(google.cloud.secretmanager.v1.AddSecretVersionRequest) returns (google.cloud.secretmanager.v1.SecretVersion) {
		option (google.api.method_signature) = "parent,payload";
		option (google.api.http) = {
			post: "/v1/{parent=projects/*/secrets/*}:addVersion"
			body: "*"
		};

	}
	rpc GetSecret(google.cloud.secretmanager.v1.GetSecretRequest) returns (google.cloud.secretmanager.v1.Secret) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v1/{name=projects/*/secrets/*}"
		};

	}
	rpc UpdateSecret(google.cloud.secretmanager.v1.UpdateSecretRequest) returns (google.cloud.secretmanager.v1.Secret) {
		option (google.api.method_signature) = "secret,update_mask";
		option (google.api.http) = {
			patch: "/v1/{secret.name=projects/*/secrets/*}"
			body: "secret"
		};

	}
	rpc DeleteSecret(google.cloud.secretmanager.v1.DeleteSecretRequest) returns (google.protobuf.Empty) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			delete: "/v1/{name=projects/*/secrets/*}"
		};

	}
	rpc ListSecretVersions(google.cloud.secretmanager.v1.ListSecretVersionsRequest) returns (google.cloud.secretmanager.v1.ListSecretVersionsResponse) {
		option (google.api.method_signature) = "parent";
		option (google.api.http) = {
			get: "/v1/{parent=projects/*/secrets/*}/versions"
		};

	}
	rpc GetSecretVersion(google.cloud.secretmanager.v1.GetSecretVersionRequest) returns (google.cloud.secretmanager.v1.SecretVersion) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v1/{name=projects/*/secrets/*/versions/*}"
		};

	}
	rpc AccessSecretVersion(google.cloud.secretmanager.v1.AccessSecretVersionRequest) returns (google.cloud.secretmanager.v1.AccessSecretVersionResponse) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v1/{name=projects/*/secrets/*/versions/*}:access"
		};

	}
	rpc DisableSecretVersion(google.cloud.secretmanager.v1.DisableSecretVersionRequest) returns (google.cloud.secretmanager.v1.SecretVersion) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			post: "/v1/{name=projects/*/secrets/*/versions/*}:disable"
			body: "*"
		};

	}
	rpc EnableSecretVersion(google.cloud.secretmanager.v1.EnableSecretVersionRequest) returns (google.cloud.secretmanager.v1.SecretVersion) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			post: "/v1/{name=projects/*/secrets/*/versions/*}:enable"
			body: "*"
		};

	}
	rpc DestroySecretVersion(google.cloud.secretmanager.v1.DestroySecretVersionRequest) returns (google.cloud.secretmanager.v1.SecretVersion) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			post: "/v1/{name=projects/*/secrets/*/versions/*}:destroy"
			body: "*"
		};

	}
	rpc SetIamPolicy(google.iam.v1.SetIamPolicyRequest) returns (google.iam.v1.Policy) {
		option (google.api.http) = {
			post: "/v1/{resource=projects/*/secrets/*}:setIamPolicy"
			body: "*"
		};

	}
	rpc GetIamPolicy(google.iam.v1.GetIamPolicyRequest) returns (google.iam.v1.Policy) {
		option (google.api.http) = {
			get: "/v1/{resource=projects/*/secrets/*}:getIamPolicy"
		};

	}
	rpc TestIamPermissions(google.iam.v1.TestIamPermissionsRequest) returns (google.iam.v1.TestIamPermissionsResponse) {
		option (google.api.http) = {
			post: "/v1/{resource=projects/*/secrets/*}:testIamPermissions"
			body: "*"
		};

	}
}

message ListSecretsRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "cloudresourcemanager.googleapis.com/Project"
		}
	];
	int32 page_size = 2 [
		(google.api.field_behavior) = OPTIONAL
	];
	string page_token = 3 [
		(google.api.field_behavior) = OPTIONAL
	];
	string filter = 4 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message ListSecretsResponse {

	repeated google.cloud.secretmanager.v1.Secret secrets = 1;
	string next_page_token = 2;
	int32 total_size = 3;
}

message CreateSecretRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "cloudresourcemanager.googleapis.com/Project"
		}
	];
	string secret_id = 2 [
		(google.api.field_behavior) = REQUIRED
	];
	google.cloud.secretmanager.v1.Secret secret = 3 [
		(google.api.field_behavior) = REQUIRED
	];
}

message AddSecretVersionRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "secretmanager.googleapis.com/Secret"
		}
	];
	google.cloud.secretmanager.v1.SecretPayload payload = 2 [
		(google.api.field_behavior) = REQUIRED
	];
}

message GetSecretRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "secretmanager.googleapis.com/Secret"
		}
	];
}

message ListSecretVersionsRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "secretmanager.googleapis.com/Secret"
		}
	];
	int32 page_size = 2 [
		(google.api.field_behavior) = OPTIONAL
	];
	string page_token = 3 [
		(google.api.field_behavior) = OPTIONAL
	];
	string filter = 4 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message ListSecretVersionsResponse {

	repeated google.cloud.secretmanager.v1.SecretVersion versions = 1;
	string next_page_token = 2;
	int32 total_size = 3;
}

message GetSecretVersionRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "secretmanager.googleapis.com/SecretVersion"
		}
	];
}

message UpdateSecretRequest {

	google.cloud.secretmanager.v1.Secret secret = 1 [
		(google.api.field_behavior) = REQUIRED
	];
	google.protobuf.FieldMask update_mask = 2 [
		(google.api.field_behavior) = REQUIRED
	];
}

message AccessSecretVersionRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "secretmanager.googleapis.com/SecretVersion"
		}
	];
}

message AccessSecretVersionResponse {

	string name = 1 [
		(google.api.resource_reference) = {
			type: "secretmanager.googleapis.com/SecretVersion"
		}
	];
	google.cloud.secretmanager.v1.SecretPayload payload = 2;
}

message DeleteSecretRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "secretmanager.googleapis.com/Secret"
		}
	];
	string etag = 2 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message DisableSecretVersionRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "secretmanager.googleapis.com/SecretVersion"
		}
	];
	string etag = 2 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message EnableSecretVersionRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "secretmanager.googleapis.com/SecretVersion"
		}
	];
	string etag = 2 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message DestroySecretVersionRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "secretmanager.googleapis.com/SecretVersion"
		}
	];
	string etag = 2 [
		(google.api.field_behavior) = OPTIONAL
	];
}
