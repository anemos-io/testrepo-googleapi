syntax = "proto3";

package google.cloud.deploy.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/longrunning/operations.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "google/type/date.proto";

option java_package = "com.google.cloud.deploy.v1";
option java_outer_classname = "CloudDeployProto";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/cloud/deploy/v1;deploy";
option (google.api.resource_definition) = {
	type: "cloudbuild.googleapis.com/Build"
	pattern: ["projects/{project}/locations/{location}/builds/{build}"]
};
option (google.api.resource_definition) = {
	type: "container.googleapis.com/Cluster"
	pattern: ["projects/{project}/locations/{location}/clusters/{cluster}"]
};
option (google.api.resource_definition) = {
	type: "clouddeploy.googleapis.com/Operation"
	pattern: ["projects/{project}/locations/{location}/operations/{operation}"]
};
option (google.api.resource_definition) = {
	type: "cloudbuild.googleapis.com/WorkerPool"
	pattern: ["projects/{project}/locations/{location}/workerPools/{worker_pool}"]
};


service CloudDeploy {
	option (google.api.default_host) = "clouddeploy.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/cloud-platform";

	rpc ListDeliveryPipelines(google.cloud.deploy.v1.ListDeliveryPipelinesRequest) returns (google.cloud.deploy.v1.ListDeliveryPipelinesResponse) {
		option (google.api.method_signature) = "parent";
		option (google.api.http) = {
			get: "/v1/{parent=projects/*/locations/*}/deliveryPipelines"
		};

	}
	rpc GetDeliveryPipeline(google.cloud.deploy.v1.GetDeliveryPipelineRequest) returns (google.cloud.deploy.v1.DeliveryPipeline) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v1/{name=projects/*/locations/*/deliveryPipelines/*}"
		};

	}
	rpc CreateDeliveryPipeline(google.cloud.deploy.v1.CreateDeliveryPipelineRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "DeliveryPipeline"
			metadata_type: "OperationMetadata"
		};
		option (google.api.method_signature) = "parent,delivery_pipeline,delivery_pipeline_id";
		option (google.api.http) = {
			post: "/v1/{parent=projects/*/locations/*}/deliveryPipelines"
			body: "delivery_pipeline"
		};

	}
	rpc UpdateDeliveryPipeline(google.cloud.deploy.v1.UpdateDeliveryPipelineRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "DeliveryPipeline"
			metadata_type: "OperationMetadata"
		};
		option (google.api.method_signature) = "delivery_pipeline,update_mask";
		option (google.api.http) = {
			patch: "/v1/{delivery_pipeline.name=projects/*/locations/*/deliveryPipelines/*}"
			body: "delivery_pipeline"
		};

	}
	rpc DeleteDeliveryPipeline(google.cloud.deploy.v1.DeleteDeliveryPipelineRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "google.protobuf.Empty"
			metadata_type: "OperationMetadata"
		};
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			delete: "/v1/{name=projects/*/locations/*/deliveryPipelines/*}"
		};

	}
	rpc ListTargets(google.cloud.deploy.v1.ListTargetsRequest) returns (google.cloud.deploy.v1.ListTargetsResponse) {
		option (google.api.method_signature) = "parent";
		option (google.api.http) = {
			get: "/v1/{parent=projects/*/locations/*}/targets"
		};

	}
	rpc GetTarget(google.cloud.deploy.v1.GetTargetRequest) returns (google.cloud.deploy.v1.Target) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v1/{name=projects/*/locations/*/targets/*}"
		};

	}
	rpc CreateTarget(google.cloud.deploy.v1.CreateTargetRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "Target"
			metadata_type: "OperationMetadata"
		};
		option (google.api.method_signature) = "parent,target,target_id";
		option (google.api.http) = {
			post: "/v1/{parent=projects/*/locations/*}/targets"
			body: "target"
		};

	}
	rpc UpdateTarget(google.cloud.deploy.v1.UpdateTargetRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "Target"
			metadata_type: "OperationMetadata"
		};
		option (google.api.method_signature) = "target,update_mask";
		option (google.api.http) = {
			patch: "/v1/{target.name=projects/*/locations/*/targets/*}"
			body: "target"
		};

	}
	rpc DeleteTarget(google.cloud.deploy.v1.DeleteTargetRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "google.protobuf.Empty"
			metadata_type: "OperationMetadata"
		};
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			delete: "/v1/{name=projects/*/locations/*/targets/*}"
		};

	}
	rpc ListReleases(google.cloud.deploy.v1.ListReleasesRequest) returns (google.cloud.deploy.v1.ListReleasesResponse) {
		option (google.api.method_signature) = "parent";
		option (google.api.http) = {
			get: "/v1/{parent=projects/*/locations/*/deliveryPipelines/*}/releases"
		};

	}
	rpc GetRelease(google.cloud.deploy.v1.GetReleaseRequest) returns (google.cloud.deploy.v1.Release) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v1/{name=projects/*/locations/*/deliveryPipelines/*/releases/*}"
		};

	}
	rpc CreateRelease(google.cloud.deploy.v1.CreateReleaseRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "Release"
			metadata_type: "OperationMetadata"
		};
		option (google.api.method_signature) = "parent,release,release_id";
		option (google.api.http) = {
			post: "/v1/{parent=projects/*/locations/*/deliveryPipelines/*}/releases"
			body: "release"
		};

	}
	rpc ApproveRollout(google.cloud.deploy.v1.ApproveRolloutRequest) returns (google.cloud.deploy.v1.ApproveRolloutResponse) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			post: "/v1/{name=projects/*/locations/*/deliveryPipelines/*/releases/*/rollouts/*}:approve"
			body: "*"
		};

	}
	rpc ListRollouts(google.cloud.deploy.v1.ListRolloutsRequest) returns (google.cloud.deploy.v1.ListRolloutsResponse) {
		option (google.api.method_signature) = "parent";
		option (google.api.http) = {
			get: "/v1/{parent=projects/*/locations/*/deliveryPipelines/*/releases/*}/rollouts"
		};

	}
	rpc GetRollout(google.cloud.deploy.v1.GetRolloutRequest) returns (google.cloud.deploy.v1.Rollout) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v1/{name=projects/*/locations/*/deliveryPipelines/*/releases/*/rollouts/*}"
		};

	}
	rpc CreateRollout(google.cloud.deploy.v1.CreateRolloutRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "Rollout"
			metadata_type: "OperationMetadata"
		};
		option (google.api.method_signature) = "parent,rollout,rollout_id";
		option (google.api.http) = {
			post: "/v1/{parent=projects/*/locations/*/deliveryPipelines/*/releases/*}/rollouts"
			body: "rollout"
		};

	}
	rpc GetConfig(google.cloud.deploy.v1.GetConfigRequest) returns (google.cloud.deploy.v1.Config) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v1/{name=projects/*/locations/*/config}"
		};

	}
}

message DeliveryPipeline {
	option (google.api.resource) = {
		type: "clouddeploy.googleapis.com/DeliveryPipeline"
		pattern: ["projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}"]
	};

	string name = 1 [
		(google.api.field_behavior) = OPTIONAL
	];
	string uid = 2 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string description = 3;
	map<string, string> annotations = 4;
	map<string, string> labels = 5;
	google.protobuf.Timestamp create_time = 6 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.protobuf.Timestamp update_time = 7 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	oneof pipeline {
		SerialPipeline serial_pipeline = 8;
	}
	PipelineCondition condition = 11 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string etag = 10;
}

message SerialPipeline {

	repeated Stage stages = 1;
}

message Stage {

	string target_id = 1;
	repeated string profiles = 2;
}

message PipelineReadyCondition {

	bool status = 3;
	google.protobuf.Timestamp update_time = 4;
}

message TargetsPresentCondition {

	bool status = 1;
	repeated string missing_targets = 2 [
		(google.api.resource_reference) = {
			type: "clouddeploy.googleapis.com/Target"
		}
	];
	google.protobuf.Timestamp update_time = 4;
}

message PipelineCondition {

	PipelineReadyCondition pipeline_ready_condition = 1;
	TargetsPresentCondition targets_present_condition = 3;
}

message ListDeliveryPipelinesRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "clouddeploy.googleapis.com/DeliveryPipeline"
		}
	];
	int32 page_size = 2;
	string page_token = 3;
	string filter = 4;
	string order_by = 5;
}

message ListDeliveryPipelinesResponse {

	repeated DeliveryPipeline delivery_pipelines = 1;
	string next_page_token = 2;
	repeated string unreachable = 3;
}

message GetDeliveryPipelineRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "clouddeploy.googleapis.com/DeliveryPipeline"
		}
	];
}

message CreateDeliveryPipelineRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "clouddeploy.googleapis.com/DeliveryPipeline"
		}
	];
	string delivery_pipeline_id = 2 [
		(google.api.field_behavior) = REQUIRED
	];
	DeliveryPipeline delivery_pipeline = 3 [
		(google.api.field_behavior) = REQUIRED
	];
	string request_id = 4 [
		(google.api.field_behavior) = OPTIONAL
	];
	bool validate_only = 5 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message UpdateDeliveryPipelineRequest {

	google.protobuf.FieldMask update_mask = 1 [
		(google.api.field_behavior) = REQUIRED
	];
	DeliveryPipeline delivery_pipeline = 2 [
		(google.api.field_behavior) = REQUIRED
	];
	string request_id = 3 [
		(google.api.field_behavior) = OPTIONAL
	];
	bool allow_missing = 4 [
		(google.api.field_behavior) = OPTIONAL
	];
	bool validate_only = 5 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message DeleteDeliveryPipelineRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "clouddeploy.googleapis.com/DeliveryPipeline"
		}
	];
	string request_id = 2 [
		(google.api.field_behavior) = OPTIONAL
	];
	bool allow_missing = 3 [
		(google.api.field_behavior) = OPTIONAL
	];
	bool validate_only = 4 [
		(google.api.field_behavior) = OPTIONAL
	];
	bool force = 6 [
		(google.api.field_behavior) = OPTIONAL
	];
	string etag = 5 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message Target {
	option (google.api.resource) = {
		type: "clouddeploy.googleapis.com/Target"
		pattern: ["projects/{project}/locations/{location}/targets/{target}"]
	};

	string name = 1 [
		(google.api.field_behavior) = OPTIONAL
	];
	string target_id = 2 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string uid = 3 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string description = 4 [
		(google.api.field_behavior) = OPTIONAL
	];
	map<string, string> annotations = 5 [
		(google.api.field_behavior) = OPTIONAL
	];
	map<string, string> labels = 6 [
		(google.api.field_behavior) = OPTIONAL
	];
	bool require_approval = 13 [
		(google.api.field_behavior) = OPTIONAL
	];
	google.protobuf.Timestamp create_time = 8 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.protobuf.Timestamp update_time = 9 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	oneof deployment_target {
		GkeCluster gke = 15;
	}
	string etag = 12 [
		(google.api.field_behavior) = OPTIONAL
	];
	repeated ExecutionConfig execution_configs = 16;
}

message ExecutionConfig {

	enum ExecutionEnvironmentUsage {

		EXECUTION_ENVIRONMENT_USAGE_UNSPECIFIED = 0;
		RENDER = 1;
		DEPLOY = 2;
	}

	repeated ExecutionEnvironmentUsage usages = 1 [
		(google.api.field_behavior) = REQUIRED
	];
	oneof execution_environment {
		DefaultPool default_pool = 2 [
			(google.api.field_behavior) = OPTIONAL
		];
		PrivatePool private_pool = 3 [
			(google.api.field_behavior) = OPTIONAL
		];
	}
}

message DefaultPool {

	string service_account = 1 [
		(google.api.field_behavior) = OPTIONAL
	];
	string artifact_storage = 2 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message PrivatePool {

	string worker_pool = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "cloudbuild.googleapis.com/WorkerPool"
		}
	];
	string service_account = 2 [
		(google.api.field_behavior) = OPTIONAL
	];
	string artifact_storage = 3 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message GkeCluster {

	string cluster = 1 [
		(google.api.resource_reference) = {
			type: "container.googleapis.com/Cluster"
		}
	];
}

message ListTargetsRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "clouddeploy.googleapis.com/Target"
		}
	];
	int32 page_size = 2 [
		(google.api.field_behavior) = OPTIONAL
	];
	string page_token = 3 [
		(google.api.field_behavior) = OPTIONAL
	];
	string filter = 4 [
		(google.api.field_behavior) = OPTIONAL
	];
	string order_by = 5 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message ListTargetsResponse {

	repeated Target targets = 1;
	string next_page_token = 2;
	repeated string unreachable = 3;
}

message GetTargetRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "clouddeploy.googleapis.com/Target"
		}
	];
}

message CreateTargetRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "clouddeploy.googleapis.com/Target"
		}
	];
	string target_id = 2 [
		(google.api.field_behavior) = REQUIRED
	];
	Target target = 3 [
		(google.api.field_behavior) = REQUIRED
	];
	string request_id = 4 [
		(google.api.field_behavior) = OPTIONAL
	];
	bool validate_only = 5 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message UpdateTargetRequest {

	google.protobuf.FieldMask update_mask = 1 [
		(google.api.field_behavior) = REQUIRED
	];
	Target target = 2 [
		(google.api.field_behavior) = REQUIRED
	];
	string request_id = 3 [
		(google.api.field_behavior) = OPTIONAL
	];
	bool allow_missing = 4 [
		(google.api.field_behavior) = OPTIONAL
	];
	bool validate_only = 5 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message DeleteTargetRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "clouddeploy.googleapis.com/Target"
		}
	];
	string request_id = 2 [
		(google.api.field_behavior) = OPTIONAL
	];
	bool allow_missing = 3 [
		(google.api.field_behavior) = OPTIONAL
	];
	bool validate_only = 4 [
		(google.api.field_behavior) = OPTIONAL
	];
	string etag = 5 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message Release {
	option (google.api.resource) = {
		type: "clouddeploy.googleapis.com/Release"
		pattern: ["projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}/releases/{release}"]
	};

	message TargetRender {

		enum TargetRenderState {

			TARGET_RENDER_STATE_UNSPECIFIED = 0;
			SUCCEEDED = 1;
			FAILED = 2;
			IN_PROGRESS = 3;
		}

		string rendering_build = 1 [
			(google.api.field_behavior) = OUTPUT_ONLY
			(google.api.resource_reference) = {
				type: "cloudbuild.googleapis.com/Build"
			}
		];
		TargetRenderState rendering_state = 2 [
			(google.api.field_behavior) = OUTPUT_ONLY
		];
	}

	enum RenderState {

		RENDER_STATE_UNSPECIFIED = 0;
		SUCCEEDED = 1;
		FAILED = 2;
		IN_PROGRESS = 3;
	}

	string name = 1 [
		(google.api.field_behavior) = OPTIONAL
	];
	string uid = 2 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string description = 3;
	map<string, string> annotations = 4;
	map<string, string> labels = 5;
	google.protobuf.Timestamp create_time = 6 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.protobuf.Timestamp render_start_time = 7 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.protobuf.Timestamp render_end_time = 8 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string skaffold_config_uri = 17;
	string skaffold_config_path = 9;
	repeated BuildArtifact build_artifacts = 10;
	DeliveryPipeline delivery_pipeline_snapshot = 11 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	repeated Target target_snapshots = 12 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	RenderState render_state = 13 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string etag = 16;
	string skaffold_version = 19;
	map<string, TargetArtifact> target_artifacts = 20 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	map<string, TargetRender> target_renders = 22 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
}

message BuildArtifact {

	string image = 3;
	string tag = 2;
}

message TargetArtifact {

	oneof uri {
		string artifact_uri = 4 [
			(google.api.field_behavior) = OUTPUT_ONLY
		];
	}
	string skaffold_config_path = 2 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string manifest_path = 3 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
}

message ListReleasesRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "clouddeploy.googleapis.com/DeliveryPipeline"
		}
	];
	int32 page_size = 2 [
		(google.api.field_behavior) = OPTIONAL
	];
	string page_token = 3 [
		(google.api.field_behavior) = OPTIONAL
	];
	string filter = 4 [
		(google.api.field_behavior) = OPTIONAL
	];
	string order_by = 5 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message ListReleasesResponse {

	repeated Release releases = 1;
	string next_page_token = 2;
	repeated string unreachable = 3;
}

message GetReleaseRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "clouddeploy.googleapis.com/Release"
		}
	];
}

message CreateReleaseRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "clouddeploy.googleapis.com/DeliveryPipeline"
		}
	];
	string release_id = 2 [
		(google.api.field_behavior) = REQUIRED
	];
	Release release = 3 [
		(google.api.field_behavior) = REQUIRED
	];
	string request_id = 4 [
		(google.api.field_behavior) = OPTIONAL
	];
	bool validate_only = 5 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message Rollout {
	option (google.api.resource) = {
		type: "clouddeploy.googleapis.com/Rollout"
		pattern: ["projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}/releases/{release}/rollouts/{rollout}"]
	};

	enum ApprovalState {

		APPROVAL_STATE_UNSPECIFIED = 0;
		NEEDS_APPROVAL = 1;
		DOES_NOT_NEED_APPROVAL = 2;
		APPROVED = 3;
		REJECTED = 4;
	}

	enum State {

		STATE_UNSPECIFIED = 0;
		SUCCEEDED = 1;
		FAILED = 2;
		IN_PROGRESS = 3;
		PENDING_APPROVAL = 4;
		APPROVAL_REJECTED = 5;
		PENDING = 6;
		PENDING_RELEASE = 7;
	}

	string name = 1 [
		(google.api.field_behavior) = OPTIONAL
	];
	string uid = 2 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string description = 3;
	map<string, string> annotations = 4;
	map<string, string> labels = 5;
	google.protobuf.Timestamp create_time = 6 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.protobuf.Timestamp approve_time = 7 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.protobuf.Timestamp enqueue_time = 8 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.protobuf.Timestamp deploy_start_time = 9 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.protobuf.Timestamp deploy_end_time = 10 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string target_id = 18 [
		(google.api.field_behavior) = REQUIRED
	];
	ApprovalState approval_state = 12 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	State state = 13 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string failure_reason = 14 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string deploying_build = 17 [
		(google.api.field_behavior) = OUTPUT_ONLY
		(google.api.resource_reference) = {
			type: "cloudbuild.googleapis.com/Build"
		}
	];
	string etag = 16;
}

message ListRolloutsRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "clouddeploy.googleapis.com/Release"
		}
	];
	int32 page_size = 2 [
		(google.api.field_behavior) = OPTIONAL
	];
	string page_token = 3 [
		(google.api.field_behavior) = OPTIONAL
	];
	string filter = 4 [
		(google.api.field_behavior) = OPTIONAL
	];
	string order_by = 5 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message ListRolloutsResponse {

	repeated Rollout rollouts = 1;
	string next_page_token = 2;
	repeated string unreachable = 3;
}

message GetRolloutRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "clouddeploy.googleapis.com/Rollout"
		}
	];
}

message CreateRolloutRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "clouddeploy.googleapis.com/Release"
		}
	];
	string rollout_id = 2 [
		(google.api.field_behavior) = REQUIRED
	];
	Rollout rollout = 3 [
		(google.api.field_behavior) = REQUIRED
	];
	string request_id = 4 [
		(google.api.field_behavior) = OPTIONAL
	];
	bool validate_only = 5 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message OperationMetadata {

	google.protobuf.Timestamp create_time = 1 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.protobuf.Timestamp end_time = 2 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string target = 3 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string verb = 4 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string status_message = 5 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	bool requested_cancellation = 6 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string api_version = 7 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
}

message ApproveRolloutRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "clouddeploy.googleapis.com/Rollout"
		}
	];
	bool approved = 2 [
		(google.api.field_behavior) = REQUIRED
	];
}

message ApproveRolloutResponse {

}

message Config {
	option (google.api.resource) = {
		type: "clouddeploy.googleapis.com/Config"
		pattern: ["projects/{project}/locations/{location}/config"]
	};

	string name = 1;
	repeated SkaffoldVersion supported_versions = 2 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string default_skaffold_version = 3 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
}

message SkaffoldVersion {

	string version = 1;
	google.type.Date support_end_date = 2;
}

message GetConfigRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "clouddeploy.googleapis.com/Config"
		}
	];
}
