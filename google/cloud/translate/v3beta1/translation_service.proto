syntax = "proto3";

package google.cloud.translation.v3beta1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/longrunning/operations.proto";
import "google/protobuf/timestamp.proto";

option java_package = "com.google.cloud.translate.v3beta1";
option java_outer_classname = "TranslationServiceProto";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/cloud/translate/v3beta1;translate";
option cc_enable_arenas = true;
option csharp_namespace = "Google.Cloud.Translate.V3Beta1";
option php_namespace = "Google\\Cloud\\Translate\\V3beta1";
option ruby_package = "Google::Cloud::Translate::V3beta1";


service TranslationService {
	option (google.api.default_host) = "translate.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/cloud-translation";

	rpc TranslateText(google.cloud.translation.v3beta1.TranslateTextRequest) returns (google.cloud.translation.v3beta1.TranslateTextResponse) {
		option (google.api.http) = {
			post: "/v3beta1/{parent=projects/*/locations/*}:translateText"
			body: "*"
			additional_bindings: {
				post: "/v3beta1/{parent=projects/*}:translateText"
				body: "*"
			}
		};

	}
	rpc DetectLanguage(google.cloud.translation.v3beta1.DetectLanguageRequest) returns (google.cloud.translation.v3beta1.DetectLanguageResponse) {
		option (google.api.method_signature) = "parent,model,mime_type";
		option (google.api.http) = {
			post: "/v3beta1/{parent=projects/*/locations/*}:detectLanguage"
			body: "*"
			additional_bindings: {
				post: "/v3beta1/{parent=projects/*}:detectLanguage"
				body: "*"
			}
		};

	}
	rpc GetSupportedLanguages(google.cloud.translation.v3beta1.GetSupportedLanguagesRequest) returns (google.cloud.translation.v3beta1.SupportedLanguages) {
		option (google.api.method_signature) = "parent,display_language_code,model";
		option (google.api.http) = {
			get: "/v3beta1/{parent=projects/*/locations/*}/supportedLanguages"
			additional_bindings: {
				get: "/v3beta1/{parent=projects/*}/supportedLanguages"
			}
		};

	}
	rpc BatchTranslateText(google.cloud.translation.v3beta1.BatchTranslateTextRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "BatchTranslateResponse"
			metadata_type: "BatchTranslateMetadata"
		};
		option (google.api.http) = {
			post: "/v3beta1/{parent=projects/*/locations/*}:batchTranslateText"
			body: "*"
		};

	}
	rpc CreateGlossary(google.cloud.translation.v3beta1.CreateGlossaryRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "Glossary"
			metadata_type: "CreateGlossaryMetadata"
		};
		option (google.api.method_signature) = "parent,glossary";
		option (google.api.http) = {
			post: "/v3beta1/{parent=projects/*/locations/*}/glossaries"
			body: "glossary"
		};

	}
	rpc ListGlossaries(google.cloud.translation.v3beta1.ListGlossariesRequest) returns (google.cloud.translation.v3beta1.ListGlossariesResponse) {
		option (google.api.method_signature) = "parent";
		option (google.api.method_signature) = "parent,filter";
		option (google.api.http) = {
			get: "/v3beta1/{parent=projects/*/locations/*}/glossaries"
		};

	}
	rpc GetGlossary(google.cloud.translation.v3beta1.GetGlossaryRequest) returns (google.cloud.translation.v3beta1.Glossary) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v3beta1/{name=projects/*/locations/*/glossaries/*}"
		};

	}
	rpc DeleteGlossary(google.cloud.translation.v3beta1.DeleteGlossaryRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "DeleteGlossaryResponse"
			metadata_type: "DeleteGlossaryMetadata"
		};
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			delete: "/v3beta1/{name=projects/*/locations/*/glossaries/*}"
		};

	}
}

message TranslateTextGlossaryConfig {

	string glossary = 1 [
		(google.api.field_behavior) = REQUIRED
	];
	bool ignore_case = 2 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message TranslateTextRequest {

	repeated string contents = 1 [
		(google.api.field_behavior) = REQUIRED
	];
	string mime_type = 3 [
		(google.api.field_behavior) = OPTIONAL
	];
	string source_language_code = 4 [
		(google.api.field_behavior) = OPTIONAL
	];
	string target_language_code = 5 [
		(google.api.field_behavior) = REQUIRED
	];
	string parent = 8 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "locations.googleapis.com/Location"
		}
	];
	string model = 6 [
		(google.api.field_behavior) = OPTIONAL
	];
	TranslateTextGlossaryConfig glossary_config = 7 [
		(google.api.field_behavior) = OPTIONAL
	];
	map<string, string> labels = 10 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message TranslateTextResponse {

	repeated Translation translations = 1;
	repeated Translation glossary_translations = 3;
}

message Translation {

	string translated_text = 1;
	string model = 2;
	string detected_language_code = 4;
	TranslateTextGlossaryConfig glossary_config = 3;
}

message DetectLanguageRequest {

	string parent = 5 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "locations.googleapis.com/Location"
		}
	];
	string model = 4 [
		(google.api.field_behavior) = OPTIONAL
	];
	oneof source {
		string content = 1;
	}
	string mime_type = 3 [
		(google.api.field_behavior) = OPTIONAL
	];
	map<string, string> labels = 6;
}

message DetectedLanguage {

	string language_code = 1;
	float confidence = 2;
}

message DetectLanguageResponse {

	repeated DetectedLanguage languages = 1;
}

message GetSupportedLanguagesRequest {

	string parent = 3 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "locations.googleapis.com/Location"
		}
	];
	string display_language_code = 1 [
		(google.api.field_behavior) = OPTIONAL
	];
	string model = 2 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message SupportedLanguages {

	repeated SupportedLanguage languages = 1;
}

message SupportedLanguage {

	string language_code = 1;
	string display_name = 2;
	bool support_source = 3;
	bool support_target = 4;
}

message GcsSource {

	string input_uri = 1 [
		(google.api.field_behavior) = REQUIRED
	];
}

message InputConfig {

	string mime_type = 1 [
		(google.api.field_behavior) = OPTIONAL
	];
	oneof source {
		GcsSource gcs_source = 2;
	}
}

message GcsDestination {

	string output_uri_prefix = 1 [
		(google.api.field_behavior) = REQUIRED
	];
}

message OutputConfig {

	oneof destination {
		GcsDestination gcs_destination = 1;
	}
}

message BatchTranslateTextRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "locations.googleapis.com/Location"
		}
	];
	string source_language_code = 2 [
		(google.api.field_behavior) = REQUIRED
	];
	repeated string target_language_codes = 3 [
		(google.api.field_behavior) = REQUIRED
	];
	map<string, string> models = 4 [
		(google.api.field_behavior) = OPTIONAL
	];
	repeated InputConfig input_configs = 5 [
		(google.api.field_behavior) = REQUIRED
	];
	OutputConfig output_config = 6 [
		(google.api.field_behavior) = REQUIRED
	];
	map<string, TranslateTextGlossaryConfig> glossaries = 7 [
		(google.api.field_behavior) = OPTIONAL
	];
	map<string, string> labels = 9 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message BatchTranslateMetadata {

	enum State {

		STATE_UNSPECIFIED = 0;
		RUNNING = 1;
		SUCCEEDED = 2;
		FAILED = 3;
		CANCELLING = 4;
		CANCELLED = 5;
	}

	State state = 1;
	int64 translated_characters = 2;
	int64 failed_characters = 3;
	int64 total_characters = 4;
	google.protobuf.Timestamp submit_time = 5;
}

message BatchTranslateResponse {

	int64 total_characters = 1;
	int64 translated_characters = 2;
	int64 failed_characters = 3;
	google.protobuf.Timestamp submit_time = 4;
	google.protobuf.Timestamp end_time = 5;
}

message GlossaryInputConfig {

	oneof source {
		GcsSource gcs_source = 1;
	}
}

message Glossary {
	option (google.api.resource) = {
		type: "translate.googleapis.com/Glossary"
		pattern: ["projects/{project}/locations/{location}/glossaries/{glossary}"]
	};

	message LanguageCodePair {

		string source_language_code = 1;
		string target_language_code = 2;
	}

	message LanguageCodesSet {

		repeated string language_codes = 1;
	}

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
	];
	oneof languages {
		LanguageCodePair language_pair = 3;
		LanguageCodesSet language_codes_set = 4;
	}
	GlossaryInputConfig input_config = 5;
	int32 entry_count = 6 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.protobuf.Timestamp submit_time = 7 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.protobuf.Timestamp end_time = 8 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
}

message CreateGlossaryRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "locations.googleapis.com/Location"
		}
	];
	Glossary glossary = 2 [
		(google.api.field_behavior) = REQUIRED
	];
}

message GetGlossaryRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "translate.googleapis.com/Glossary"
		}
	];
}

message DeleteGlossaryRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "translate.googleapis.com/Glossary"
		}
	];
}

message ListGlossariesRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "locations.googleapis.com/Location"
		}
	];
	int32 page_size = 2 [
		(google.api.field_behavior) = OPTIONAL
	];
	string page_token = 3 [
		(google.api.field_behavior) = OPTIONAL
	];
	string filter = 4 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message ListGlossariesResponse {

	repeated Glossary glossaries = 1;
	string next_page_token = 2;
}

message CreateGlossaryMetadata {

	enum State {

		STATE_UNSPECIFIED = 0;
		RUNNING = 1;
		SUCCEEDED = 2;
		FAILED = 3;
		CANCELLING = 4;
		CANCELLED = 5;
	}

	string name = 1;
	State state = 2;
	google.protobuf.Timestamp submit_time = 3;
}

message DeleteGlossaryMetadata {

	enum State {

		STATE_UNSPECIFIED = 0;
		RUNNING = 1;
		SUCCEEDED = 2;
		FAILED = 3;
		CANCELLING = 4;
		CANCELLED = 5;
	}

	string name = 1;
	State state = 2;
	google.protobuf.Timestamp submit_time = 3;
}

message DeleteGlossaryResponse {

	string name = 1;
	google.protobuf.Timestamp submit_time = 2;
	google.protobuf.Timestamp end_time = 3;
}
