syntax = "proto3";

package google.cloud.datafusion.v1beta1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/iam/v1/policy.proto";
import "google/longrunning/operations.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "google/rpc/status.proto";

option java_package = "com.google.cloud.datafusion.v1beta1";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/cloud/datafusion/v1beta1;datafusion";
option csharp_namespace = "Google.Cloud.DataFusion.V1Beta1";
option php_namespace = "Google\\Cloud\\DataFusion\\V1beta1";
option ruby_package = "Google::Cloud::DataFusion::V1beta1";


enum NamespaceView {

	NAMESPACE_VIEW_UNSPECIFIED = 0;
	NAMESPACE_VIEW_BASIC = 1;
	NAMESPACE_VIEW_FULL = 2;
}

service DataFusion {
	option (google.api.default_host) = "datafusion.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/cloud-platform";

	rpc ListAvailableVersions(google.cloud.datafusion.v1beta1.ListAvailableVersionsRequest) returns (google.cloud.datafusion.v1beta1.ListAvailableVersionsResponse) {
		option (google.api.method_signature) = "parent";
		option (google.api.http) = {
			get: "/v1beta1/{parent=projects/*/locations/*}/versions"
		};

	}
	rpc ListInstances(google.cloud.datafusion.v1beta1.ListInstancesRequest) returns (google.cloud.datafusion.v1beta1.ListInstancesResponse) {
		option (google.api.http) = {
			get: "/v1beta1/{parent=projects/*/locations/*}/instances"
		};

	}
	rpc GetInstance(google.cloud.datafusion.v1beta1.GetInstanceRequest) returns (google.cloud.datafusion.v1beta1.Instance) {
		option (google.api.http) = {
			get: "/v1beta1/{name=projects/*/locations/*/instances/*}"
		};

	}
	rpc CreateInstance(google.cloud.datafusion.v1beta1.CreateInstanceRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "Instance"
			metadata_type: "OperationMetadata"
		};
		option (google.api.method_signature) = "parent,instance,instance_id";
		option (google.api.http) = {
			post: "/v1beta1/{parent=projects/*/locations/*}/instances"
			body: "instance"
		};

	}
	rpc DeleteInstance(google.cloud.datafusion.v1beta1.DeleteInstanceRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "google.protobuf.Empty"
			metadata_type: "OperationMetadata"
		};
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			delete: "/v1beta1/{name=projects/*/locations/*/instances/*}"
		};

	}
	rpc UpdateInstance(google.cloud.datafusion.v1beta1.UpdateInstanceRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "Instance"
			metadata_type: "OperationMetadata"
		};
		option (google.api.method_signature) = "instance,update_mask";
		option (google.api.http) = {
			patch: "/v1beta1/{instance.name=projects/*/locations/*/instances/*}"
			body: "instance"
		};

	}
	rpc RestartInstance(google.cloud.datafusion.v1beta1.RestartInstanceRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "Instance"
			metadata_type: "OperationMetadata"
		};
		option (google.api.http) = {
			post: "/v1beta1/{name=projects/*/locations/*/instances/*}:restart"
			body: "*"
		};

	}
	rpc UpgradeInstance(google.cloud.datafusion.v1beta1.UpgradeInstanceRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "Instance"
			metadata_type: "OperationMetadata"
		};
		option (google.api.http) = {
			post: "/v1beta1/{name=projects/*/locations/*/instances/*}:upgrade"
			body: "*"
		};

	}
	rpc RemoveIamPolicy(google.cloud.datafusion.v1beta1.RemoveIamPolicyRequest) returns (google.cloud.datafusion.v1beta1.RemoveIamPolicyResponse) {
		option (google.api.http) = {
			post: "/v1beta1/{resource=projects/*/locations/*/**}:removeIamPolicy"
			body: "*"
		};

	}
	rpc ListNamespaces(google.cloud.datafusion.v1beta1.ListNamespacesRequest) returns (google.cloud.datafusion.v1beta1.ListNamespacesResponse) {
		option (google.api.method_signature) = "parent";
		option (google.api.http) = {
			get: "/v1beta1/{parent=projects/*/locations/*/instances/*}/namespaces"
		};

	}
	rpc AddDnsPeering(google.cloud.datafusion.v1beta1.AddDnsPeeringRequest) returns (google.cloud.datafusion.v1beta1.AddDnsPeeringResponse) {
		option (google.api.method_signature) = "parent";
		option (google.api.http) = {
			post: "/v1beta1/{parent=projects/*/locations/*/instances/*}/dnsPeerings:add"
			body: "*"
		};

	}
	rpc RemoveDnsPeering(google.cloud.datafusion.v1beta1.RemoveDnsPeeringRequest) returns (google.cloud.datafusion.v1beta1.RemoveDnsPeeringResponse) {
		option (google.api.method_signature) = "parent";
		option (google.api.http) = {
			post: "/v1beta1/{parent=projects/*/locations/*/instances/*}/dnsPeerings:remove"
			body: "*"
		};

	}
	rpc ListDnsPeerings(google.cloud.datafusion.v1beta1.ListDnsPeeringsRequest) returns (google.cloud.datafusion.v1beta1.ListDnsPeeringsResponse) {
		option (google.api.method_signature) = "parent";
		option (google.api.http) = {
			get: "/v1beta1/{parent=projects/*/locations/*/instances/*}/dnsPeerings:list"
		};

	}
}

message NetworkConfig {

	string network = 1;
	string ip_allocation = 2;
}

message Version {

	string version_number = 1;
	bool default_version = 2;
	repeated string available_features = 3;
}

message Accelerator {

	enum AcceleratorType {

		ACCELERATOR_TYPE_UNSPECIFIED = 0;
		CDC = 1;
		HEALTHCARE = 2;
	}

	AcceleratorType accelerator_type = 1;
}

message CryptoKeyConfig {

	string key_reference = 1;
}

message Instance {
	option (google.api.resource) = {
		type: "datafusion.googleapis.com/Instance"
		pattern: ["projects/{project}/locations/{location}/instances/{instance}"]
	};

	enum Type {

		TYPE_UNSPECIFIED = 0;
		BASIC = 1;
		ENTERPRISE = 2;
		DEVELOPER = 3;
	}

	enum State {

		STATE_UNSPECIFIED = 0;
		CREATING = 1;
		RUNNING = 2;
		FAILED = 3;
		DELETING = 4;
		UPGRADING = 5;
		RESTARTING = 6;
		UPDATING = 7;
		AUTO_UPDATING = 8;
		AUTO_UPGRADING = 9;
	}

	string name = 1 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string description = 2;
	Type type = 3 [
		(google.api.field_behavior) = REQUIRED
	];
	bool enable_stackdriver_logging = 4;
	bool enable_stackdriver_monitoring = 5;
	bool private_instance = 6;
	NetworkConfig network_config = 7;
	map<string, string> labels = 8;
	map<string, string> options = 9;
	google.protobuf.Timestamp create_time = 10 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.protobuf.Timestamp update_time = 11 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	State state = 12 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string state_message = 13 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string service_endpoint = 14 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string zone = 15;
	string version = 16;
	string service_account = 17 [
		deprecated = true,
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string display_name = 18;
	repeated Version available_version = 19;
	string api_endpoint = 20 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string gcs_bucket = 21 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	repeated Accelerator accelerators = 22;
	string p4_service_account = 23 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string tenant_project_id = 24 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string dataproc_service_account = 25;
	bool enable_rbac = 26;
	CryptoKeyConfig crypto_key_config = 27;
}

message ListInstancesRequest {

	string parent = 1;
	int32 page_size = 2;
	string page_token = 3;
	string filter = 4;
	string order_by = 5;
}

message ListInstancesResponse {

	repeated Instance instances = 1;
	string next_page_token = 2;
	repeated string unreachable = 3;
}

message ListAvailableVersionsRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
	];
	int32 page_size = 2;
	string page_token = 3;
	bool latest_patch_only = 4;
}

message ListAvailableVersionsResponse {

	repeated Version available_versions = 1;
	string next_page_token = 2;
}

message GetInstanceRequest {

	string name = 1;
}

message CreateInstanceRequest {

	string parent = 1;
	string instance_id = 2;
	Instance instance = 3;
}

message DeleteInstanceRequest {

	string name = 1;
}

message UpdateInstanceRequest {

	Instance instance = 1;
	google.protobuf.FieldMask update_mask = 2;
}

message RestartInstanceRequest {

	string name = 1;
}

message UpgradeInstanceRequest {

	string name = 1;
}

message OperationMetadata {

	google.protobuf.Timestamp create_time = 1;
	google.protobuf.Timestamp end_time = 2;
	string target = 3;
	string verb = 4;
	string status_detail = 5;
	bool requested_cancellation = 6;
	string api_version = 7;
}

message RemoveIamPolicyRequest {

	string resource = 1;
}

message RemoveIamPolicyResponse {

}

message ListNamespacesRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "datafusion.googleapis.com/Instance"
		}
	];
	int32 page_size = 2;
	string page_token = 3;
	NamespaceView view = 4;
}

message IAMPolicy {

	google.iam.v1.Policy policy = 1;
	google.rpc.Status status = 2;
}

message Namespace {
	option (google.api.resource) = {
		type: "datafusion.googleapis.com/Namespace"
		pattern: ["projects/{project}/locations/{location}/instances/{instance}/namespaces/{namespace}"]
	};

	string name = 1;
	IAMPolicy iam_policy = 2;
}

message ListNamespacesResponse {

	repeated Namespace namespaces = 1;
	string next_page_token = 2;
}

message DnsPeering {

	string zone = 1 [
		(google.api.field_behavior) = REQUIRED
	];
	string domain = 2 [
		(google.api.field_behavior) = REQUIRED
	];
	string description = 3 [
		(google.api.field_behavior) = OPTIONAL
	];
	string target_project = 4 [
		(google.api.field_behavior) = OPTIONAL
	];
	string target_network = 5 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message AddDnsPeeringRequest {

	string parent = 1;
	DnsPeering dns_peering = 2;
}

message AddDnsPeeringResponse {

}

message RemoveDnsPeeringRequest {

	string parent = 1;
	string zone = 2 [
		(google.api.field_behavior) = REQUIRED
	];
}

message RemoveDnsPeeringResponse {

}

message ListDnsPeeringsRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "datafusion.googleapis.com/Instance"
		}
	];
	int32 page_size = 2;
	string page_token = 3;
}

message ListDnsPeeringsResponse {

	repeated DnsPeering dns_peerings = 1;
	string next_page_token = 2;
}
