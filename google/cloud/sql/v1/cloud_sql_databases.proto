syntax = "proto3";

package google.cloud.sql.v1;

import "google/api/annotations.proto";
import "google/cloud/sql/v1/cloud_sql_resources.proto";
import "google/api/client.proto";

option java_package = "com.google.cloud.sql.v1";
option java_outer_classname = "CloudSqlDatabasesProto";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/cloud/sql/v1;sql";


service SqlDatabasesService {
	option (google.api.default_host) = "sqladmin.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/sqlservice.admin";

	rpc Delete(google.cloud.sql.v1.SqlDatabasesDeleteRequest) returns (google.cloud.sql.v1.Operation) {
		option (google.api.http) = {
			delete: "/v1/projects/{project}/instances/{instance}/databases/{database}"
		};

	}
	rpc Get(google.cloud.sql.v1.SqlDatabasesGetRequest) returns (google.cloud.sql.v1.Database) {
		option (google.api.http) = {
			get: "/v1/projects/{project}/instances/{instance}/databases/{database}"
		};

	}
	rpc Insert(google.cloud.sql.v1.SqlDatabasesInsertRequest) returns (google.cloud.sql.v1.Operation) {
		option (google.api.http) = {
			post: "/v1/projects/{project}/instances/{instance}/databases"
			body: "body"
		};

	}
	rpc List(google.cloud.sql.v1.SqlDatabasesListRequest) returns (google.cloud.sql.v1.DatabasesListResponse) {
		option (google.api.http) = {
			get: "/v1/projects/{project}/instances/{instance}/databases"
		};

	}
	rpc Patch(google.cloud.sql.v1.SqlDatabasesUpdateRequest) returns (google.cloud.sql.v1.Operation) {
		option (google.api.http) = {
			patch: "/v1/projects/{project}/instances/{instance}/databases/{database}"
			body: "body"
		};

	}
	rpc Update(google.cloud.sql.v1.SqlDatabasesUpdateRequest) returns (google.cloud.sql.v1.Operation) {
		option (google.api.http) = {
			put: "/v1/projects/{project}/instances/{instance}/databases/{database}"
			body: "body"
		};

	}
}

message SqlDatabasesDeleteRequest {

	string database = 1;
	string instance = 2;
	string project = 3;
}

message SqlDatabasesGetRequest {

	string database = 1;
	string instance = 2;
	string project = 3;
}

message SqlDatabasesInsertRequest {

	string instance = 1;
	string project = 2;
	google.cloud.sql.v1.Database body = 100;
}

message SqlDatabasesListRequest {

	string instance = 1;
	string project = 2;
}

message SqlDatabasesUpdateRequest {

	string database = 1;
	string instance = 2;
	string project = 3;
	google.cloud.sql.v1.Database body = 100;
}

message DatabasesListResponse {

	string kind = 1;
	repeated google.cloud.sql.v1.Database items = 2;
}
