syntax = "proto3";

package google.cloud.gkehub.v1;

import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";

option java_package = "com.google.cloud.gkehub.v1";
option java_outer_classname = "MembershipProto";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/cloud/gkehub/v1;gkehub";
option csharp_namespace = "Google.Cloud.GkeHub.V1";
option php_namespace = "Google\\Cloud\\GkeHub\\V1";
option ruby_package = "Google::Cloud::GkeHub::V1";


message Membership {
	option (google.api.resource) = {
		type: "gkehub.googleapis.com/Membership"
		pattern: ["projects/{project}/locations/{location}/memberships/{membership}"]
	};

	oneof type {
		MembershipEndpoint endpoint = 4 [
			(google.api.field_behavior) = OPTIONAL
		];
	}
	string name = 1 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	map<string, string> labels = 2 [
		(google.api.field_behavior) = OPTIONAL
	];
	string description = 3 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	MembershipState state = 5 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.protobuf.Timestamp create_time = 6 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.protobuf.Timestamp update_time = 7 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.protobuf.Timestamp delete_time = 8 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string external_id = 9 [
		(google.api.field_behavior) = OPTIONAL
	];
	google.protobuf.Timestamp last_connection_time = 10 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string unique_id = 11 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	Authority authority = 12 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message MembershipEndpoint {

	GkeCluster gke_cluster = 1 [
		(google.api.field_behavior) = OPTIONAL
	];
	KubernetesMetadata kubernetes_metadata = 2 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
}

message GkeCluster {

	string resource_link = 1 [
		(google.api.field_behavior) = IMMUTABLE
	];
}

message KubernetesMetadata {

	string kubernetes_api_server_version = 1 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string node_provider_id = 2 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	int32 node_count = 3 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	int32 vcpu_count = 4 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	int32 memory_mb = 5 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.protobuf.Timestamp update_time = 100 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
}

message MembershipState {

	enum Code {

		CODE_UNSPECIFIED = 0;
		CREATING = 1;
		READY = 2;
		DELETING = 3;
		UPDATING = 4;
		SERVICE_UPDATING = 5;
	}

	Code code = 1 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
}

message Authority {

	string issuer = 1 [
		(google.api.field_behavior) = OPTIONAL
	];
	string workload_identity_pool = 2 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string identity_provider = 3 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	bytes oidc_jwks = 4 [
		(google.api.field_behavior) = OPTIONAL
	];
}
