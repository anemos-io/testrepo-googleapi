syntax = "proto3";

package google.cloud.dataproc.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/cloud/dataproc/v1/clusters.proto";
import "google/cloud/dataproc/v1/jobs.proto";
import "google/longrunning/operations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

option java_package = "com.google.cloud.dataproc.v1";
option java_outer_classname = "WorkflowTemplatesProto";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/cloud/dataproc/v1;dataproc";


service WorkflowTemplateService {
	option (google.api.default_host) = "dataproc.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/cloud-platform";

	rpc CreateWorkflowTemplate(google.cloud.dataproc.v1.CreateWorkflowTemplateRequest) returns (google.cloud.dataproc.v1.WorkflowTemplate) {
		option (google.api.method_signature) = "parent,template";
		option (google.api.http) = {
			post: "/v1/{parent=projects/*/locations/*}/workflowTemplates"
			body: "template"
			additional_bindings: {
				post: "/v1/{parent=projects/*/regions/*}/workflowTemplates"
				body: "template"
			}
		};

	}
	rpc GetWorkflowTemplate(google.cloud.dataproc.v1.GetWorkflowTemplateRequest) returns (google.cloud.dataproc.v1.WorkflowTemplate) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v1/{name=projects/*/locations/*/workflowTemplates/*}"
			additional_bindings: {
				get: "/v1/{name=projects/*/regions/*/workflowTemplates/*}"
			}
		};

	}
	rpc InstantiateWorkflowTemplate(google.cloud.dataproc.v1.InstantiateWorkflowTemplateRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "google.protobuf.Empty"
			metadata_type: "WorkflowMetadata"
		};
		option (google.api.method_signature) = "name";
		option (google.api.method_signature) = "name,parameters";
		option (google.api.http) = {
			post: "/v1/{name=projects/*/locations/*/workflowTemplates/*}:instantiate"
			body: "*"
			additional_bindings: {
				post: "/v1/{name=projects/*/regions/*/workflowTemplates/*}:instantiate"
				body: "*"
			}
		};

	}
	rpc InstantiateInlineWorkflowTemplate(google.cloud.dataproc.v1.InstantiateInlineWorkflowTemplateRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "google.protobuf.Empty"
			metadata_type: "WorkflowMetadata"
		};
		option (google.api.method_signature) = "parent,template";
		option (google.api.http) = {
			post: "/v1/{parent=projects/*/locations/*}/workflowTemplates:instantiateInline"
			body: "template"
			additional_bindings: {
				post: "/v1/{parent=projects/*/regions/*}/workflowTemplates:instantiateInline"
				body: "template"
			}
		};

	}
	rpc UpdateWorkflowTemplate(google.cloud.dataproc.v1.UpdateWorkflowTemplateRequest) returns (google.cloud.dataproc.v1.WorkflowTemplate) {
		option (google.api.method_signature) = "template";
		option (google.api.http) = {
			put: "/v1/{template.name=projects/*/locations/*/workflowTemplates/*}"
			body: "template"
			additional_bindings: {
				put: "/v1/{template.name=projects/*/regions/*/workflowTemplates/*}"
				body: "template"
			}
		};

	}
	rpc ListWorkflowTemplates(google.cloud.dataproc.v1.ListWorkflowTemplatesRequest) returns (google.cloud.dataproc.v1.ListWorkflowTemplatesResponse) {
		option (google.api.method_signature) = "parent";
		option (google.api.http) = {
			get: "/v1/{parent=projects/*/locations/*}/workflowTemplates"
			additional_bindings: {
				get: "/v1/{parent=projects/*/regions/*}/workflowTemplates"
			}
		};

	}
	rpc DeleteWorkflowTemplate(google.cloud.dataproc.v1.DeleteWorkflowTemplateRequest) returns (google.protobuf.Empty) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			delete: "/v1/{name=projects/*/locations/*/workflowTemplates/*}"
			additional_bindings: {
				delete: "/v1/{name=projects/*/regions/*/workflowTemplates/*}"
			}
		};

	}
}

message WorkflowTemplate {
	option (google.api.resource) = {
		type: "dataproc.googleapis.com/WorkflowTemplate"
		pattern: ["projects/{project}/regions/{region}/workflowTemplates/{workflow_template}","projects/{project}/locations/{location}/workflowTemplates/{workflow_template}"]
		history: ORIGINALLY_SINGLE_PATTERN
	};

	string id = 2 [
		(google.api.field_behavior) = REQUIRED
	];
	string name = 1 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	int32 version = 3 [
		(google.api.field_behavior) = OPTIONAL
	];
	google.protobuf.Timestamp create_time = 4 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.protobuf.Timestamp update_time = 5 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	map<string, string> labels = 6 [
		(google.api.field_behavior) = OPTIONAL
	];
	WorkflowTemplatePlacement placement = 7 [
		(google.api.field_behavior) = REQUIRED
	];
	repeated OrderedJob jobs = 8 [
		(google.api.field_behavior) = REQUIRED
	];
	repeated TemplateParameter parameters = 9 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message WorkflowTemplatePlacement {

	oneof placement {
		ManagedCluster managed_cluster = 1;
		ClusterSelector cluster_selector = 2;
	}
}

message ManagedCluster {

	string cluster_name = 2 [
		(google.api.field_behavior) = REQUIRED
	];
	google.cloud.dataproc.v1.ClusterConfig config = 3 [
		(google.api.field_behavior) = REQUIRED
	];
	map<string, string> labels = 4 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message ClusterSelector {

	string zone = 1 [
		(google.api.field_behavior) = OPTIONAL
	];
	map<string, string> cluster_labels = 2 [
		(google.api.field_behavior) = REQUIRED
	];
}

message OrderedJob {

	string step_id = 1 [
		(google.api.field_behavior) = REQUIRED
	];
	oneof job_type {
		google.cloud.dataproc.v1.HadoopJob hadoop_job = 2 [
			(google.api.field_behavior) = OPTIONAL
		];
		google.cloud.dataproc.v1.SparkJob spark_job = 3 [
			(google.api.field_behavior) = OPTIONAL
		];
		google.cloud.dataproc.v1.PySparkJob pyspark_job = 4 [
			(google.api.field_behavior) = OPTIONAL
		];
		google.cloud.dataproc.v1.HiveJob hive_job = 5 [
			(google.api.field_behavior) = OPTIONAL
		];
		google.cloud.dataproc.v1.PigJob pig_job = 6 [
			(google.api.field_behavior) = OPTIONAL
		];
		google.cloud.dataproc.v1.SparkRJob spark_r_job = 11 [
			(google.api.field_behavior) = OPTIONAL
		];
		google.cloud.dataproc.v1.SparkSqlJob spark_sql_job = 7 [
			(google.api.field_behavior) = OPTIONAL
		];
		google.cloud.dataproc.v1.PrestoJob presto_job = 12 [
			(google.api.field_behavior) = OPTIONAL
		];
	}
	map<string, string> labels = 8 [
		(google.api.field_behavior) = OPTIONAL
	];
	google.cloud.dataproc.v1.JobScheduling scheduling = 9 [
		(google.api.field_behavior) = OPTIONAL
	];
	repeated string prerequisite_step_ids = 10 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message TemplateParameter {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
	];
	repeated string fields = 2 [
		(google.api.field_behavior) = REQUIRED
	];
	string description = 3 [
		(google.api.field_behavior) = OPTIONAL
	];
	ParameterValidation validation = 4 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message ParameterValidation {

	oneof validation_type {
		RegexValidation regex = 1;
		ValueValidation values = 2;
	}
}

message RegexValidation {

	repeated string regexes = 1 [
		(google.api.field_behavior) = REQUIRED
	];
}

message ValueValidation {

	repeated string values = 1 [
		(google.api.field_behavior) = REQUIRED
	];
}

message WorkflowMetadata {

	enum State {

		UNKNOWN = 0;
		PENDING = 1;
		RUNNING = 2;
		DONE = 3;
	}

	string template = 1 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	int32 version = 2 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	ClusterOperation create_cluster = 3 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	WorkflowGraph graph = 4 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	ClusterOperation delete_cluster = 5 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	State state = 6 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string cluster_name = 7 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	map<string, string> parameters = 8;
	google.protobuf.Timestamp start_time = 9 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	google.protobuf.Timestamp end_time = 10 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string cluster_uuid = 11 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
}

message ClusterOperation {

	string operation_id = 1 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string error = 2 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	bool done = 3 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
}

message WorkflowGraph {

	repeated WorkflowNode nodes = 1 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
}

message WorkflowNode {

	enum NodeState {

		NODE_STATE_UNSPECIFIED = 0;
		BLOCKED = 1;
		RUNNABLE = 2;
		RUNNING = 3;
		COMPLETED = 4;
		FAILED = 5;
	}

	string step_id = 1 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	repeated string prerequisite_step_ids = 2 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string job_id = 3 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	NodeState state = 5 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string error = 6 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
}

message CreateWorkflowTemplateRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "dataproc.googleapis.com/WorkflowTemplate"
		}
	];
	WorkflowTemplate template = 2 [
		(google.api.field_behavior) = REQUIRED
	];
}

message GetWorkflowTemplateRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "dataproc.googleapis.com/WorkflowTemplate"
		}
	];
	int32 version = 2 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message InstantiateWorkflowTemplateRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "dataproc.googleapis.com/WorkflowTemplate"
		}
	];
	int32 version = 2 [
		(google.api.field_behavior) = OPTIONAL
	];
	string request_id = 5 [
		(google.api.field_behavior) = OPTIONAL
	];
	map<string, string> parameters = 6 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message InstantiateInlineWorkflowTemplateRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "dataproc.googleapis.com/WorkflowTemplate"
		}
	];
	WorkflowTemplate template = 2 [
		(google.api.field_behavior) = REQUIRED
	];
	string request_id = 3 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message UpdateWorkflowTemplateRequest {

	WorkflowTemplate template = 1 [
		(google.api.field_behavior) = REQUIRED
	];
}

message ListWorkflowTemplatesRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "dataproc.googleapis.com/WorkflowTemplate"
		}
	];
	int32 page_size = 2 [
		(google.api.field_behavior) = OPTIONAL
	];
	string page_token = 3 [
		(google.api.field_behavior) = OPTIONAL
	];
}

message ListWorkflowTemplatesResponse {

	repeated WorkflowTemplate templates = 1 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string next_page_token = 2 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
}

message DeleteWorkflowTemplateRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "dataproc.googleapis.com/WorkflowTemplate"
		}
	];
	int32 version = 2 [
		(google.api.field_behavior) = OPTIONAL
	];
}
