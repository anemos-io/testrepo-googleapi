syntax = "proto3";

package google.iam.admin.v1;

import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/iam/v1/iam_policy.proto";
import "google/iam/v1/options.proto";
import "google/iam/v1/policy.proto";
import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "google/type/expr.proto";
import "google/api/annotations.proto";

option java_package = "com.google.iam.admin.v1";
option java_outer_classname = "IamProto";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/iam/admin/v1;admin";
option cc_enable_arenas = true;
option csharp_namespace = "Google.Cloud.Iam.Admin.V1";
option php_namespace = "Google\\Cloud\\Iam\\Admin\\V1";


enum ServiceAccountKeyAlgorithm {

	KEY_ALG_UNSPECIFIED = 0;
	KEY_ALG_RSA_1024 = 1;
	KEY_ALG_RSA_2048 = 2;
}

enum ServiceAccountPrivateKeyType {

	TYPE_UNSPECIFIED = 0;
	TYPE_PKCS12_FILE = 1;
	TYPE_GOOGLE_CREDENTIALS_FILE = 2;
}

enum ServiceAccountPublicKeyType {

	TYPE_NONE = 0;
	TYPE_X509_PEM_FILE = 1;
	TYPE_RAW_PUBLIC_KEY = 2;
}

enum ServiceAccountKeyOrigin {

	ORIGIN_UNSPECIFIED = 0;
	USER_PROVIDED = 1;
	GOOGLE_PROVIDED = 2;
}

enum RoleView {

	BASIC = 0;
	FULL = 1;
}

service IAM {
	option (google.api.default_host) = "iam.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/cloud-platform";

	rpc ListServiceAccounts(google.iam.admin.v1.ListServiceAccountsRequest) returns (google.iam.admin.v1.ListServiceAccountsResponse) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v1/{name=projects/*}/serviceAccounts"
		};

	}
	rpc GetServiceAccount(google.iam.admin.v1.GetServiceAccountRequest) returns (google.iam.admin.v1.ServiceAccount) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v1/{name=projects/*/serviceAccounts/*}"
		};

	}
	rpc CreateServiceAccount(google.iam.admin.v1.CreateServiceAccountRequest) returns (google.iam.admin.v1.ServiceAccount) {
		option (google.api.method_signature) = "name,account_id,service_account";
		option (google.api.http) = {
			post: "/v1/{name=projects/*}/serviceAccounts"
			body: "*"
		};

	}
	rpc UpdateServiceAccount(google.iam.admin.v1.ServiceAccount) returns (google.iam.admin.v1.ServiceAccount) {
		option (google.api.http) = {
			put: "/v1/{name=projects/*/serviceAccounts/*}"
			body: "*"
		};

	}
	rpc PatchServiceAccount(google.iam.admin.v1.PatchServiceAccountRequest) returns (google.iam.admin.v1.ServiceAccount) {
		option (google.api.http) = {
			patch: "/v1/{service_account.name=projects/*/serviceAccounts/*}"
			body: "*"
		};

	}
	rpc DeleteServiceAccount(google.iam.admin.v1.DeleteServiceAccountRequest) returns (google.protobuf.Empty) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			delete: "/v1/{name=projects/*/serviceAccounts/*}"
		};

	}
	rpc UndeleteServiceAccount(google.iam.admin.v1.UndeleteServiceAccountRequest) returns (google.iam.admin.v1.UndeleteServiceAccountResponse) {
		option (google.api.http) = {
			post: "/v1/{name=projects/*/serviceAccounts/*}:undelete"
			body: "*"
		};

	}
	rpc EnableServiceAccount(google.iam.admin.v1.EnableServiceAccountRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			post: "/v1/{name=projects/*/serviceAccounts/*}:enable"
			body: "*"
		};

	}
	rpc DisableServiceAccount(google.iam.admin.v1.DisableServiceAccountRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			post: "/v1/{name=projects/*/serviceAccounts/*}:disable"
			body: "*"
		};

	}
	rpc ListServiceAccountKeys(google.iam.admin.v1.ListServiceAccountKeysRequest) returns (google.iam.admin.v1.ListServiceAccountKeysResponse) {
		option (google.api.method_signature) = "name,key_types";
		option (google.api.http) = {
			get: "/v1/{name=projects/*/serviceAccounts/*}/keys"
		};

	}
	rpc GetServiceAccountKey(google.iam.admin.v1.GetServiceAccountKeyRequest) returns (google.iam.admin.v1.ServiceAccountKey) {
		option (google.api.method_signature) = "name,public_key_type";
		option (google.api.http) = {
			get: "/v1/{name=projects/*/serviceAccounts/*/keys/*}"
		};

	}
	rpc CreateServiceAccountKey(google.iam.admin.v1.CreateServiceAccountKeyRequest) returns (google.iam.admin.v1.ServiceAccountKey) {
		option (google.api.method_signature) = "name,private_key_type,key_algorithm";
		option (google.api.http) = {
			post: "/v1/{name=projects/*/serviceAccounts/*}/keys"
			body: "*"
		};

	}
	rpc UploadServiceAccountKey(google.iam.admin.v1.UploadServiceAccountKeyRequest) returns (google.iam.admin.v1.ServiceAccountKey) {
		option (google.api.http) = {
			post: "/v1/{name=projects/*/serviceAccounts/*}/keys:upload"
			body: "*"
		};

	}
	rpc DeleteServiceAccountKey(google.iam.admin.v1.DeleteServiceAccountKeyRequest) returns (google.protobuf.Empty) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			delete: "/v1/{name=projects/*/serviceAccounts/*/keys/*}"
		};

	}
	rpc SignBlob(google.iam.admin.v1.SignBlobRequest) returns (google.iam.admin.v1.SignBlobResponse) {
		option deprecated = true;
		option (google.api.method_signature) = "name,bytes_to_sign";
		option (google.api.http) = {
			post: "/v1/{name=projects/*/serviceAccounts/*}:signBlob"
			body: "*"
		};

	}
	rpc SignJwt(google.iam.admin.v1.SignJwtRequest) returns (google.iam.admin.v1.SignJwtResponse) {
		option deprecated = true;
		option (google.api.method_signature) = "name,payload";
		option (google.api.http) = {
			post: "/v1/{name=projects/*/serviceAccounts/*}:signJwt"
			body: "*"
		};

	}
	rpc GetIamPolicy(google.iam.v1.GetIamPolicyRequest) returns (google.iam.v1.Policy) {
		option (google.api.method_signature) = "resource";
		option (google.api.http) = {
			post: "/v1/{resource=projects/*/serviceAccounts/*}:getIamPolicy"
		};

	}
	rpc SetIamPolicy(google.iam.v1.SetIamPolicyRequest) returns (google.iam.v1.Policy) {
		option (google.api.method_signature) = "resource,policy";
		option (google.api.http) = {
			post: "/v1/{resource=projects/*/serviceAccounts/*}:setIamPolicy"
			body: "*"
		};

	}
	rpc TestIamPermissions(google.iam.v1.TestIamPermissionsRequest) returns (google.iam.v1.TestIamPermissionsResponse) {
		option (google.api.method_signature) = "resource,permissions";
		option (google.api.http) = {
			post: "/v1/{resource=projects/*/serviceAccounts/*}:testIamPermissions"
			body: "*"
		};

	}
	rpc QueryGrantableRoles(google.iam.admin.v1.QueryGrantableRolesRequest) returns (google.iam.admin.v1.QueryGrantableRolesResponse) {
		option (google.api.method_signature) = "full_resource_name";
		option (google.api.http) = {
			post: "/v1/roles:queryGrantableRoles"
			body: "*"
		};

	}
	rpc ListRoles(google.iam.admin.v1.ListRolesRequest) returns (google.iam.admin.v1.ListRolesResponse) {
		option (google.api.http) = {
			get: "/v1/roles"
			additional_bindings: {
				get: "/v1/{parent=organizations/*}/roles"
			}
			additional_bindings: {
				get: "/v1/{parent=projects/*}/roles"
			}
		};

	}
	rpc GetRole(google.iam.admin.v1.GetRoleRequest) returns (google.iam.admin.v1.Role) {
		option (google.api.http) = {
			get: "/v1/{name=roles/*}"
			additional_bindings: {
				get: "/v1/{name=organizations/*/roles/*}"
			}
			additional_bindings: {
				get: "/v1/{name=projects/*/roles/*}"
			}
		};

	}
	rpc CreateRole(google.iam.admin.v1.CreateRoleRequest) returns (google.iam.admin.v1.Role) {
		option (google.api.http) = {
			post: "/v1/{parent=organizations/*}/roles"
			body: "*"
			additional_bindings: {
				post: "/v1/{parent=projects/*}/roles"
				body: "*"
			}
		};

	}
	rpc UpdateRole(google.iam.admin.v1.UpdateRoleRequest) returns (google.iam.admin.v1.Role) {
		option (google.api.http) = {
			patch: "/v1/{name=organizations/*/roles/*}"
			body: "role"
			additional_bindings: {
				patch: "/v1/{name=projects/*/roles/*}"
				body: "role"
			}
		};

	}
	rpc DeleteRole(google.iam.admin.v1.DeleteRoleRequest) returns (google.iam.admin.v1.Role) {
		option (google.api.http) = {
			delete: "/v1/{name=organizations/*/roles/*}"
			additional_bindings: {
				delete: "/v1/{name=projects/*/roles/*}"
			}
		};

	}
	rpc UndeleteRole(google.iam.admin.v1.UndeleteRoleRequest) returns (google.iam.admin.v1.Role) {
		option (google.api.http) = {
			post: "/v1/{name=organizations/*/roles/*}:undelete"
			body: "*"
			additional_bindings: {
				post: "/v1/{name=projects/*/roles/*}:undelete"
				body: "*"
			}
		};

	}
	rpc QueryTestablePermissions(google.iam.admin.v1.QueryTestablePermissionsRequest) returns (google.iam.admin.v1.QueryTestablePermissionsResponse) {
		option (google.api.http) = {
			post: "/v1/permissions:queryTestablePermissions"
			body: "*"
		};

	}
	rpc QueryAuditableServices(google.iam.admin.v1.QueryAuditableServicesRequest) returns (google.iam.admin.v1.QueryAuditableServicesResponse) {
		option (google.api.http) = {
			post: "/v1/iamPolicies:queryAuditableServices"
			body: "*"
		};

	}
	rpc LintPolicy(google.iam.admin.v1.LintPolicyRequest) returns (google.iam.admin.v1.LintPolicyResponse) {
		option (google.api.http) = {
			post: "/v1/iamPolicies:lintPolicy"
			body: "*"
		};

	}
}

message ServiceAccount {
	option (google.api.resource) = {
		type: "iam.googleapis.com/ServiceAccount"
		pattern: ["projects/{project}/serviceAccounts/{service_account}"]
	};

	string name = 1;
	string project_id = 2 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string unique_id = 4 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string email = 5 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string display_name = 6 [
		(google.api.field_behavior) = OPTIONAL
	];
	bytes etag = 7 [
		deprecated = true
	];
	string description = 8 [
		(google.api.field_behavior) = OPTIONAL
	];
	string oauth2_client_id = 9 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	bool disabled = 11 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
}

message CreateServiceAccountRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "cloudresourcemanager.googleapis.com/Project"
		}
	];
	string account_id = 2 [
		(google.api.field_behavior) = REQUIRED
	];
	ServiceAccount service_account = 3;
}

message ListServiceAccountsRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "cloudresourcemanager.googleapis.com/Project"
		}
	];
	int32 page_size = 2;
	string page_token = 3;
}

message ListServiceAccountsResponse {

	repeated ServiceAccount accounts = 1;
	string next_page_token = 2;
}

message GetServiceAccountRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "iam.googleapis.com/ServiceAccount"
		}
	];
}

message DeleteServiceAccountRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "iam.googleapis.com/ServiceAccount"
		}
	];
}

message PatchServiceAccountRequest {

	ServiceAccount service_account = 1;
	google.protobuf.FieldMask update_mask = 2;
}

message UndeleteServiceAccountRequest {

	string name = 1;
}

message UndeleteServiceAccountResponse {

	ServiceAccount restored_account = 1;
}

message EnableServiceAccountRequest {

	string name = 1;
}

message DisableServiceAccountRequest {

	string name = 1;
}

message ListServiceAccountKeysRequest {

	enum KeyType {

		KEY_TYPE_UNSPECIFIED = 0;
		USER_MANAGED = 1;
		SYSTEM_MANAGED = 2;
	}

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "iam.googleapis.com/ServiceAccount"
		}
	];
	repeated KeyType key_types = 2;
}

message ListServiceAccountKeysResponse {

	repeated ServiceAccountKey keys = 1;
}

message GetServiceAccountKeyRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "iam.googleapis.com/Key"
		}
	];
	ServiceAccountPublicKeyType public_key_type = 2;
}

message ServiceAccountKey {
	option (google.api.resource) = {
		type: "iam.googleapis.com/Key"
		pattern: ["projects/{project}/serviceAccounts/{service_account}/keys/{key}"]
	};

	string name = 1;
	ServiceAccountPrivateKeyType private_key_type = 2;
	ServiceAccountKeyAlgorithm key_algorithm = 8;
	bytes private_key_data = 3;
	bytes public_key_data = 7;
	google.protobuf.Timestamp valid_after_time = 4;
	google.protobuf.Timestamp valid_before_time = 5;
	ServiceAccountKeyOrigin key_origin = 9;
	KeyType key_type = 10;
}

message CreateServiceAccountKeyRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "iam.googleapis.com/ServiceAccount"
		}
	];
	ServiceAccountPrivateKeyType private_key_type = 2;
	ServiceAccountKeyAlgorithm key_algorithm = 3;
}

message UploadServiceAccountKeyRequest {

	string name = 1;
	bytes public_key_data = 2;
}

message DeleteServiceAccountKeyRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "iam.googleapis.com/Key"
		}
	];
}

message SignBlobRequest {

	string name = 1 [
		deprecated = true,
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "iam.googleapis.com/ServiceAccount"
		}
	];
	bytes bytes_to_sign = 2 [
		deprecated = true,
		(google.api.field_behavior) = REQUIRED
	];
}

message SignBlobResponse {

	string key_id = 1 [
		deprecated = true
	];
	bytes signature = 2 [
		deprecated = true
	];
}

message SignJwtRequest {

	string name = 1 [
		deprecated = true,
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "iam.googleapis.com/ServiceAccount"
		}
	];
	string payload = 2 [
		deprecated = true,
		(google.api.field_behavior) = REQUIRED
	];
}

message SignJwtResponse {

	string key_id = 1 [
		deprecated = true
	];
	string signed_jwt = 2 [
		deprecated = true
	];
}

message Role {

	enum RoleLaunchStage {

		ALPHA = 0;
		BETA = 1;
		GA = 2;
		DEPRECATED = 4;
		DISABLED = 5;
		EAP = 6;
	}

	string name = 1;
	string title = 2;
	string description = 3;
	repeated string included_permissions = 7;
	RoleLaunchStage stage = 8;
	bytes etag = 9;
	bool deleted = 11;
}

message QueryGrantableRolesRequest {

	string full_resource_name = 1 [
		(google.api.field_behavior) = REQUIRED
	];
	RoleView view = 2;
	int32 page_size = 3;
	string page_token = 4;
}

message QueryGrantableRolesResponse {

	repeated Role roles = 1;
	string next_page_token = 2;
}

message ListRolesRequest {

	string parent = 1 [
		(google.api.resource_reference) = {
			type: "*"
		}
	];
	int32 page_size = 2;
	string page_token = 3;
	RoleView view = 4;
	bool show_deleted = 6;
}

message ListRolesResponse {

	repeated Role roles = 1;
	string next_page_token = 2;
}

message GetRoleRequest {

	string name = 1 [
		(google.api.resource_reference) = {
			type: "*"
		}
	];
}

message CreateRoleRequest {

	string parent = 1 [
		(google.api.resource_reference) = {
			type: "*"
		}
	];
	string role_id = 2;
	Role role = 3;
}

message UpdateRoleRequest {

	string name = 1 [
		(google.api.resource_reference) = {
			type: "*"
		}
	];
	Role role = 2;
	google.protobuf.FieldMask update_mask = 3;
}

message DeleteRoleRequest {

	string name = 1 [
		(google.api.resource_reference) = {
			type: "*"
		}
	];
	bytes etag = 2;
}

message UndeleteRoleRequest {

	string name = 1 [
		(google.api.resource_reference) = {
			type: "*"
		}
	];
	bytes etag = 2;
}

message Permission {

	enum PermissionLaunchStage {

		ALPHA = 0;
		BETA = 1;
		GA = 2;
		DEPRECATED = 3;
	}

	enum CustomRolesSupportLevel {

		SUPPORTED = 0;
		TESTING = 1;
		NOT_SUPPORTED = 2;
	}

	string name = 1;
	string title = 2;
	string description = 3;
	bool only_in_predefined_roles = 4 [
		deprecated = true
	];
	PermissionLaunchStage stage = 5;
	CustomRolesSupportLevel custom_roles_support_level = 6;
	bool api_disabled = 7;
	string primary_permission = 8;
}

message QueryTestablePermissionsRequest {

	string full_resource_name = 1;
	int32 page_size = 2;
	string page_token = 3;
}

message QueryTestablePermissionsResponse {

	repeated Permission permissions = 1;
	string next_page_token = 2;
}

message QueryAuditableServicesRequest {

	string full_resource_name = 1;
}

message QueryAuditableServicesResponse {

	message AuditableService {

		string name = 1;
	}

	repeated AuditableService services = 1;
}

message LintPolicyRequest {

	string full_resource_name = 1;
	oneof lint_object {
		google.type.Expr condition = 5;
	}
}

message LintResult {

	enum Level {

		LEVEL_UNSPECIFIED = 0;
		CONDITION = 3;
	}

	enum Severity {

		SEVERITY_UNSPECIFIED = 0;
		ERROR = 1;
		WARNING = 2;
		NOTICE = 3;
		INFO = 4;
		DEPRECATED = 5;
	}

	Level level = 1;
	string validation_unit_name = 2;
	Severity severity = 3;
	string field_name = 5;
	int32 location_offset = 6;
	string debug_message = 7;
}

message LintPolicyResponse {

	repeated LintResult lint_results = 1;
}
