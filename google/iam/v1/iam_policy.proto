syntax = "proto3";

package google.iam.v1;

import "google/iam/v1/options.proto";
import "google/iam/v1/policy.proto";
import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";

option java_package = "com.google.iam.v1";
option java_outer_classname = "IamPolicyProto";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/iam/v1;iam";
option cc_enable_arenas = true;
option csharp_namespace = "Google.Cloud.Iam.V1";
option php_namespace = "Google\\Cloud\\Iam\\V1";


service IAMPolicy {
	option (google.api.default_host) = "iam-meta-api.googleapis.com";

	rpc SetIamPolicy(google.iam.v1.SetIamPolicyRequest) returns (google.iam.v1.Policy) {
		option (google.api.http) = {
			post: "/v1/{resource=**}:setIamPolicy"
			body: "*"
		};

	}
	rpc GetIamPolicy(google.iam.v1.GetIamPolicyRequest) returns (google.iam.v1.Policy) {
		option (google.api.http) = {
			post: "/v1/{resource=**}:getIamPolicy"
			body: "*"
		};

	}
	rpc TestIamPermissions(google.iam.v1.TestIamPermissionsRequest) returns (google.iam.v1.TestIamPermissionsResponse) {
		option (google.api.http) = {
			post: "/v1/{resource=**}:testIamPermissions"
			body: "*"
		};

	}
}

message SetIamPolicyRequest {

	string resource = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "*"
		}
	];
	google.iam.v1.Policy policy = 2 [
		(google.api.field_behavior) = REQUIRED
	];
}

message GetIamPolicyRequest {

	string resource = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "*"
		}
	];
	google.iam.v1.GetPolicyOptions options = 2;
}

message TestIamPermissionsRequest {

	string resource = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "*"
		}
	];
	repeated string permissions = 2 [
		(google.api.field_behavior) = REQUIRED
	];
}

message TestIamPermissionsResponse {

	repeated string permissions = 1;
}
