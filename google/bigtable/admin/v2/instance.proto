syntax = "proto3";

package google.bigtable.admin.v2;

import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/bigtable/admin/v2/common.proto";

option java_package = "com.google.bigtable.admin.v2";
option java_outer_classname = "InstanceProto";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/bigtable/admin/v2;admin";
option csharp_namespace = "Google.Cloud.Bigtable.Admin.V2";
option php_namespace = "Google\\Cloud\\Bigtable\\Admin\\V2";
option ruby_package = "Google::Cloud::Bigtable::Admin::V2";


message Instance {
	option (google.api.resource) = {
		type: "bigtable.googleapis.com/Instance"
		pattern: ["projects/{project}/instances/{instance}"]
	};

	enum State {

		STATE_NOT_KNOWN = 0;
		READY = 1;
		CREATING = 2;
	}

	enum Type {

		TYPE_UNSPECIFIED = 0;
		PRODUCTION = 1;
		DEVELOPMENT = 2;
	}

	string name = 1 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string display_name = 2 [
		(google.api.field_behavior) = REQUIRED
	];
	State state = 3;
	Type type = 4;
	map<string, string> labels = 5;
}

message Cluster {
	option (google.api.resource) = {
		type: "bigtable.googleapis.com/Cluster"
		pattern: ["projects/{project}/instances/{instance}/clusters/{cluster}"]
	};

	enum State {

		STATE_NOT_KNOWN = 0;
		READY = 1;
		CREATING = 2;
		RESIZING = 3;
		DISABLED = 4;
	}

	string name = 1 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	string location = 2 [
		(google.api.resource_reference) = {
			type: "locations.googleapis.com/Location"
		}
	];
	State state = 3 [
		(google.api.field_behavior) = OUTPUT_ONLY
	];
	int32 serve_nodes = 4 [
		(google.api.field_behavior) = REQUIRED
	];
	google.bigtable.admin.v2.StorageType default_storage_type = 5;
}

message AppProfile {
	option (google.api.resource) = {
		type: "bigtable.googleapis.com/AppProfile"
		pattern: ["projects/{project}/instances/{instance}/appProfiles/{app_profile}"]
	};

	message MultiClusterRoutingUseAny {

	}

	message SingleClusterRouting {

		string cluster_id = 1;
		bool allow_transactional_writes = 2;
	}

	string name = 1;
	string etag = 2;
	string description = 3;
	oneof routing_policy {
		MultiClusterRoutingUseAny multi_cluster_routing_use_any = 5;
		SingleClusterRouting single_cluster_routing = 6;
	}
}
