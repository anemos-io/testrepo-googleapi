syntax = "proto3";

package google.monitoring.v3;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/monitoring/v3/notification.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

option java_package = "com.google.monitoring.v3";
option java_outer_classname = "NotificationServiceProto";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/monitoring/v3;monitoring";
option csharp_namespace = "Google.Cloud.Monitoring.V3";
option php_namespace = "Google\\Cloud\\Monitoring\\V3";
option ruby_package = "Google::Cloud::Monitoring::V3";


service NotificationChannelService {
	option (google.api.default_host) = "monitoring.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/monitoring,https://www.googleapis.com/auth/monitoring.read";

	rpc ListNotificationChannelDescriptors(google.monitoring.v3.ListNotificationChannelDescriptorsRequest) returns (google.monitoring.v3.ListNotificationChannelDescriptorsResponse) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v3/{name=projects/*}/notificationChannelDescriptors"
		};

	}
	rpc GetNotificationChannelDescriptor(google.monitoring.v3.GetNotificationChannelDescriptorRequest) returns (google.monitoring.v3.NotificationChannelDescriptor) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v3/{name=projects/*/notificationChannelDescriptors/*}"
		};

	}
	rpc ListNotificationChannels(google.monitoring.v3.ListNotificationChannelsRequest) returns (google.monitoring.v3.ListNotificationChannelsResponse) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v3/{name=projects/*}/notificationChannels"
		};

	}
	rpc GetNotificationChannel(google.monitoring.v3.GetNotificationChannelRequest) returns (google.monitoring.v3.NotificationChannel) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v3/{name=projects/*/notificationChannels/*}"
		};

	}
	rpc CreateNotificationChannel(google.monitoring.v3.CreateNotificationChannelRequest) returns (google.monitoring.v3.NotificationChannel) {
		option (google.api.method_signature) = "name,notification_channel";
		option (google.api.http) = {
			post: "/v3/{name=projects/*}/notificationChannels"
			body: "notification_channel"
		};

	}
	rpc UpdateNotificationChannel(google.monitoring.v3.UpdateNotificationChannelRequest) returns (google.monitoring.v3.NotificationChannel) {
		option (google.api.method_signature) = "update_mask,notification_channel";
		option (google.api.http) = {
			patch: "/v3/{notification_channel.name=projects/*/notificationChannels/*}"
			body: "notification_channel"
		};

	}
	rpc DeleteNotificationChannel(google.monitoring.v3.DeleteNotificationChannelRequest) returns (google.protobuf.Empty) {
		option (google.api.method_signature) = "name,force";
		option (google.api.http) = {
			delete: "/v3/{name=projects/*/notificationChannels/*}"
		};

	}
	rpc SendNotificationChannelVerificationCode(google.monitoring.v3.SendNotificationChannelVerificationCodeRequest) returns (google.protobuf.Empty) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			post: "/v3/{name=projects/*/notificationChannels/*}:sendVerificationCode"
			body: "*"
		};

	}
	rpc GetNotificationChannelVerificationCode(google.monitoring.v3.GetNotificationChannelVerificationCodeRequest) returns (google.monitoring.v3.GetNotificationChannelVerificationCodeResponse) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			post: "/v3/{name=projects/*/notificationChannels/*}:getVerificationCode"
			body: "*"
		};

	}
	rpc VerifyNotificationChannel(google.monitoring.v3.VerifyNotificationChannelRequest) returns (google.monitoring.v3.NotificationChannel) {
		option (google.api.method_signature) = "name,code";
		option (google.api.http) = {
			post: "/v3/{name=projects/*/notificationChannels/*}:verify"
			body: "*"
		};

	}
}

message ListNotificationChannelDescriptorsRequest {

	string name = 4 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "monitoring.googleapis.com/NotificationChannelDescriptor"
		}
	];
	int32 page_size = 2;
	string page_token = 3;
}

message ListNotificationChannelDescriptorsResponse {

	repeated google.monitoring.v3.NotificationChannelDescriptor channel_descriptors = 1;
	string next_page_token = 2;
}

message GetNotificationChannelDescriptorRequest {

	string name = 3 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "monitoring.googleapis.com/NotificationChannelDescriptor"
		}
	];
}

message CreateNotificationChannelRequest {

	string name = 3 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "monitoring.googleapis.com/NotificationChannel"
		}
	];
	google.monitoring.v3.NotificationChannel notification_channel = 2 [
		(google.api.field_behavior) = REQUIRED
	];
}

message ListNotificationChannelsRequest {

	string name = 5 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "monitoring.googleapis.com/NotificationChannel"
		}
	];
	string filter = 6;
	string order_by = 7;
	int32 page_size = 3;
	string page_token = 4;
}

message ListNotificationChannelsResponse {

	repeated google.monitoring.v3.NotificationChannel notification_channels = 3;
	string next_page_token = 2;
}

message GetNotificationChannelRequest {

	string name = 3 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "monitoring.googleapis.com/NotificationChannel"
		}
	];
}

message UpdateNotificationChannelRequest {

	google.protobuf.FieldMask update_mask = 2;
	google.monitoring.v3.NotificationChannel notification_channel = 3 [
		(google.api.field_behavior) = REQUIRED
	];
}

message DeleteNotificationChannelRequest {

	string name = 3 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "monitoring.googleapis.com/NotificationChannel"
		}
	];
	bool force = 5;
}

message SendNotificationChannelVerificationCodeRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "monitoring.googleapis.com/NotificationChannel"
		}
	];
}

message GetNotificationChannelVerificationCodeRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "monitoring.googleapis.com/NotificationChannel"
		}
	];
	google.protobuf.Timestamp expire_time = 2;
}

message GetNotificationChannelVerificationCodeResponse {

	string code = 1;
	google.protobuf.Timestamp expire_time = 2;
}

message VerifyNotificationChannelRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "monitoring.googleapis.com/NotificationChannel"
		}
	];
	string code = 2 [
		(google.api.field_behavior) = REQUIRED
	];
}
