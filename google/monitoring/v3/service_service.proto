syntax = "proto3";

package google.monitoring.v3;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/monitoring/v3/service.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";

option java_package = "com.google.monitoring.v3";
option java_outer_classname = "ServiceMonitoringServiceProto";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/monitoring/v3;monitoring";
option csharp_namespace = "Google.Cloud.Monitoring.V3";
option php_namespace = "Google\\Cloud\\Monitoring\\V3";
option ruby_package = "Google::Cloud::Monitoring::V3";


service ServiceMonitoringService {
	option (google.api.default_host) = "monitoring.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/monitoring,https://www.googleapis.com/auth/monitoring.read";

	rpc CreateService(google.monitoring.v3.CreateServiceRequest) returns (google.monitoring.v3.Service) {
		option (google.api.method_signature) = "parent,service";
		option (google.api.http) = {
			post: "/v3/{parent=*/*}/services"
			body: "service"
		};

	}
	rpc GetService(google.monitoring.v3.GetServiceRequest) returns (google.monitoring.v3.Service) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v3/{name=*/*/services/*}"
		};

	}
	rpc ListServices(google.monitoring.v3.ListServicesRequest) returns (google.monitoring.v3.ListServicesResponse) {
		option (google.api.method_signature) = "parent";
		option (google.api.http) = {
			get: "/v3/{parent=*/*}/services"
		};

	}
	rpc UpdateService(google.monitoring.v3.UpdateServiceRequest) returns (google.monitoring.v3.Service) {
		option (google.api.method_signature) = "service";
		option (google.api.http) = {
			patch: "/v3/{service.name=*/*/services/*}"
			body: "service"
		};

	}
	rpc DeleteService(google.monitoring.v3.DeleteServiceRequest) returns (google.protobuf.Empty) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			delete: "/v3/{name=*/*/services/*}"
		};

	}
	rpc CreateServiceLevelObjective(google.monitoring.v3.CreateServiceLevelObjectiveRequest) returns (google.monitoring.v3.ServiceLevelObjective) {
		option (google.api.method_signature) = "parent,service_level_objective";
		option (google.api.http) = {
			post: "/v3/{parent=*/*/services/*}/serviceLevelObjectives"
			body: "service_level_objective"
		};

	}
	rpc GetServiceLevelObjective(google.monitoring.v3.GetServiceLevelObjectiveRequest) returns (google.monitoring.v3.ServiceLevelObjective) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v3/{name=*/*/services/*/serviceLevelObjectives/*}"
		};

	}
	rpc ListServiceLevelObjectives(google.monitoring.v3.ListServiceLevelObjectivesRequest) returns (google.monitoring.v3.ListServiceLevelObjectivesResponse) {
		option (google.api.method_signature) = "parent";
		option (google.api.http) = {
			get: "/v3/{parent=*/*/services/*}/serviceLevelObjectives"
		};

	}
	rpc UpdateServiceLevelObjective(google.monitoring.v3.UpdateServiceLevelObjectiveRequest) returns (google.monitoring.v3.ServiceLevelObjective) {
		option (google.api.method_signature) = "service_level_objective";
		option (google.api.http) = {
			patch: "/v3/{service_level_objective.name=*/*/services/*/serviceLevelObjectives/*}"
			body: "service_level_objective"
		};

	}
	rpc DeleteServiceLevelObjective(google.monitoring.v3.DeleteServiceLevelObjectiveRequest) returns (google.protobuf.Empty) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			delete: "/v3/{name=*/*/services/*/serviceLevelObjectives/*}"
		};

	}
}

message CreateServiceRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "monitoring.googleapis.com/Service"
		}
	];
	string service_id = 3;
	google.monitoring.v3.Service service = 2 [
		(google.api.field_behavior) = REQUIRED
	];
}

message GetServiceRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "monitoring.googleapis.com/Service"
		}
	];
}

message ListServicesRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "monitoring.googleapis.com/Service"
		}
	];
	string filter = 2;
	int32 page_size = 3;
	string page_token = 4;
}

message ListServicesResponse {

	repeated google.monitoring.v3.Service services = 1;
	string next_page_token = 2;
}

message UpdateServiceRequest {

	google.monitoring.v3.Service service = 1 [
		(google.api.field_behavior) = REQUIRED
	];
	google.protobuf.FieldMask update_mask = 2;
}

message DeleteServiceRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "monitoring.googleapis.com/Service"
		}
	];
}

message CreateServiceLevelObjectiveRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "monitoring.googleapis.com/Service"
		}
	];
	string service_level_objective_id = 3;
	google.monitoring.v3.ServiceLevelObjective service_level_objective = 2 [
		(google.api.field_behavior) = REQUIRED
	];
}

message GetServiceLevelObjectiveRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "monitoring.googleapis.com/ServiceLevelObjective"
		}
	];
	google.monitoring.v3.ServiceLevelObjective.View view = 2;
}

message ListServiceLevelObjectivesRequest {

	string parent = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "monitoring.googleapis.com/Service"
		}
	];
	string filter = 2;
	int32 page_size = 3;
	string page_token = 4;
	google.monitoring.v3.ServiceLevelObjective.View view = 5;
}

message ListServiceLevelObjectivesResponse {

	repeated google.monitoring.v3.ServiceLevelObjective service_level_objectives = 1;
	string next_page_token = 2;
}

message UpdateServiceLevelObjectiveRequest {

	google.monitoring.v3.ServiceLevelObjective service_level_objective = 1 [
		(google.api.field_behavior) = REQUIRED
	];
	google.protobuf.FieldMask update_mask = 2;
}

message DeleteServiceLevelObjectiveRequest {

	string name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "monitoring.googleapis.com/ServiceLevelObjective"
		}
	];
}
