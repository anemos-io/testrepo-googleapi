syntax = "proto3";

package google.monitoring.v3;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/monitored_resource.proto";
import "google/api/resource.proto";
import "google/monitoring/v3/common.proto";
import "google/monitoring/v3/group.proto";
import "google/protobuf/empty.proto";

option java_package = "com.google.monitoring.v3";
option java_outer_classname = "GroupServiceProto";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/monitoring/v3;monitoring";
option csharp_namespace = "Google.Cloud.Monitoring.V3";
option php_namespace = "Google\\Cloud\\Monitoring\\V3";
option ruby_package = "Google::Cloud::Monitoring::V3";


service GroupService {
	option (google.api.default_host) = "monitoring.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/monitoring,https://www.googleapis.com/auth/monitoring.read";

	rpc ListGroups(google.monitoring.v3.ListGroupsRequest) returns (google.monitoring.v3.ListGroupsResponse) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v3/{name=projects/*}/groups"
		};

	}
	rpc GetGroup(google.monitoring.v3.GetGroupRequest) returns (google.monitoring.v3.Group) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v3/{name=projects/*/groups/*}"
		};

	}
	rpc CreateGroup(google.monitoring.v3.CreateGroupRequest) returns (google.monitoring.v3.Group) {
		option (google.api.method_signature) = "name,group";
		option (google.api.http) = {
			post: "/v3/{name=projects/*}/groups"
			body: "group"
		};

	}
	rpc UpdateGroup(google.monitoring.v3.UpdateGroupRequest) returns (google.monitoring.v3.Group) {
		option (google.api.method_signature) = "group";
		option (google.api.http) = {
			put: "/v3/{group.name=projects/*/groups/*}"
			body: "group"
		};

	}
	rpc DeleteGroup(google.monitoring.v3.DeleteGroupRequest) returns (google.protobuf.Empty) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			delete: "/v3/{name=projects/*/groups/*}"
		};

	}
	rpc ListGroupMembers(google.monitoring.v3.ListGroupMembersRequest) returns (google.monitoring.v3.ListGroupMembersResponse) {
		option (google.api.method_signature) = "name";
		option (google.api.http) = {
			get: "/v3/{name=projects/*/groups/*}/members"
		};

	}
}

message ListGroupsRequest {

	string name = 7 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "monitoring.googleapis.com/Group"
		}
	];
	oneof filter {
		string children_of_group = 2 [
			(google.api.resource_reference) = {
				type: "monitoring.googleapis.com/Group"
			}
		];
		string ancestors_of_group = 3 [
			(google.api.resource_reference) = {
				type: "monitoring.googleapis.com/Group"
			}
		];
		string descendants_of_group = 4 [
			(google.api.resource_reference) = {
				type: "monitoring.googleapis.com/Group"
			}
		];
	}
	int32 page_size = 5;
	string page_token = 6;
}

message ListGroupsResponse {

	repeated google.monitoring.v3.Group group = 1;
	string next_page_token = 2;
}

message GetGroupRequest {

	string name = 3 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "monitoring.googleapis.com/Group"
		}
	];
}

message CreateGroupRequest {

	string name = 4 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			child_type: "monitoring.googleapis.com/Group"
		}
	];
	google.monitoring.v3.Group group = 2 [
		(google.api.field_behavior) = REQUIRED
	];
	bool validate_only = 3;
}

message UpdateGroupRequest {

	google.monitoring.v3.Group group = 2 [
		(google.api.field_behavior) = REQUIRED
	];
	bool validate_only = 3;
}

message DeleteGroupRequest {

	string name = 3 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "monitoring.googleapis.com/Group"
		}
	];
	bool recursive = 4;
}

message ListGroupMembersRequest {

	string name = 7 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "monitoring.googleapis.com/Group"
		}
	];
	int32 page_size = 3;
	string page_token = 4;
	string filter = 5;
	google.monitoring.v3.TimeInterval interval = 6;
}

message ListGroupMembersResponse {

	repeated google.api.MonitoredResource members = 1;
	string next_page_token = 2;
	int32 total_size = 3;
}
