syntax = "proto3";

package google.appengine.v1beta;

import "google/appengine/v1beta/application.proto";
import "google/appengine/v1beta/certificate.proto";
import "google/appengine/v1beta/domain.proto";
import "google/appengine/v1beta/domain_mapping.proto";
import "google/appengine/v1beta/firewall.proto";
import "google/appengine/v1beta/instance.proto";
import "google/appengine/v1beta/version.proto";
import "google/appengine/v1beta/service.proto";
import "google/api/annotations.proto";
import "google/longrunning/operations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/api/client.proto";

option java_package = "com.google.appengine.v1beta";
option java_outer_classname = "AppengineProto";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/appengine/v1beta;appengine";


enum VersionView {

	BASIC = 0;
	FULL = 1;
}

enum AuthorizedCertificateView {

	BASIC_CERTIFICATE = 0;
	FULL_CERTIFICATE = 1;
}

enum DomainOverrideStrategy {

	UNSPECIFIED_DOMAIN_OVERRIDE_STRATEGY = 0;
	STRICT = 1;
	OVERRIDE = 2;
}

service Applications {
	option (google.api.default_host) = "appengine.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/appengine.admin,https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/cloud-platform.read-only";

	rpc GetApplication(google.appengine.v1beta.GetApplicationRequest) returns (google.appengine.v1beta.Application) {
		option (google.api.http) = {
			get: "/v1beta/{name=apps/*}"
		};

	}
	rpc CreateApplication(google.appengine.v1beta.CreateApplicationRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "Application"
			metadata_type: "OperationMetadataV1Beta"
		};
		option (google.api.http) = {
			post: "/v1beta/apps"
			body: "application"
		};

	}
	rpc UpdateApplication(google.appengine.v1beta.UpdateApplicationRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "Application"
			metadata_type: "OperationMetadataV1Beta"
		};
		option (google.api.http) = {
			patch: "/v1beta/{name=apps/*}"
			body: "application"
		};

	}
	rpc RepairApplication(google.appengine.v1beta.RepairApplicationRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "Application"
			metadata_type: "OperationMetadataV1Beta"
		};
		option (google.api.http) = {
			post: "/v1beta/{name=apps/*}:repair"
			body: "*"
		};

	}
}

service Services {
	option (google.api.default_host) = "appengine.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/appengine.admin,https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/cloud-platform.read-only";

	rpc ListServices(google.appengine.v1beta.ListServicesRequest) returns (google.appengine.v1beta.ListServicesResponse) {
		option (google.api.http) = {
			get: "/v1beta/{parent=apps/*}/services"
		};

	}
	rpc GetService(google.appengine.v1beta.GetServiceRequest) returns (google.appengine.v1beta.Service) {
		option (google.api.http) = {
			get: "/v1beta/{name=apps/*/services/*}"
		};

	}
	rpc UpdateService(google.appengine.v1beta.UpdateServiceRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "Service"
			metadata_type: "OperationMetadataV1Beta"
		};
		option (google.api.http) = {
			patch: "/v1beta/{name=apps/*/services/*}"
			body: "service"
		};

	}
	rpc DeleteService(google.appengine.v1beta.DeleteServiceRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "google.protobuf.Empty"
			metadata_type: "OperationMetadataV1Beta"
		};
		option (google.api.http) = {
			delete: "/v1beta/{name=apps/*/services/*}"
		};

	}
}

service Versions {
	option (google.api.default_host) = "appengine.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/appengine.admin,https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/cloud-platform.read-only";

	rpc ListVersions(google.appengine.v1beta.ListVersionsRequest) returns (google.appengine.v1beta.ListVersionsResponse) {
		option (google.api.http) = {
			get: "/v1beta/{parent=apps/*/services/*}/versions"
		};

	}
	rpc GetVersion(google.appengine.v1beta.GetVersionRequest) returns (google.appengine.v1beta.Version) {
		option (google.api.http) = {
			get: "/v1beta/{name=apps/*/services/*/versions/*}"
		};

	}
	rpc CreateVersion(google.appengine.v1beta.CreateVersionRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "Version"
			metadata_type: "CreateVersionMetadataV1Beta"
		};
		option (google.api.http) = {
			post: "/v1beta/{parent=apps/*/services/*}/versions"
			body: "version"
		};

	}
	rpc UpdateVersion(google.appengine.v1beta.UpdateVersionRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "Version"
			metadata_type: "OperationMetadataV1Beta"
		};
		option (google.api.http) = {
			patch: "/v1beta/{name=apps/*/services/*/versions/*}"
			body: "version"
		};

	}
	rpc DeleteVersion(google.appengine.v1beta.DeleteVersionRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "google.protobuf.Empty"
			metadata_type: "OperationMetadataV1Beta"
		};
		option (google.api.http) = {
			delete: "/v1beta/{name=apps/*/services/*/versions/*}"
		};

	}
}

service Instances {
	option (google.api.default_host) = "appengine.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/appengine.admin,https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/cloud-platform.read-only";

	rpc ListInstances(google.appengine.v1beta.ListInstancesRequest) returns (google.appengine.v1beta.ListInstancesResponse) {
		option (google.api.http) = {
			get: "/v1beta/{parent=apps/*/services/*/versions/*}/instances"
		};

	}
	rpc GetInstance(google.appengine.v1beta.GetInstanceRequest) returns (google.appengine.v1beta.Instance) {
		option (google.api.http) = {
			get: "/v1beta/{name=apps/*/services/*/versions/*/instances/*}"
		};

	}
	rpc DeleteInstance(google.appengine.v1beta.DeleteInstanceRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "google.protobuf.Empty"
			metadata_type: "OperationMetadataV1Beta"
		};
		option (google.api.http) = {
			delete: "/v1beta/{name=apps/*/services/*/versions/*/instances/*}"
		};

	}
	rpc DebugInstance(google.appengine.v1beta.DebugInstanceRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "Instance"
			metadata_type: "OperationMetadataV1Beta"
		};
		option (google.api.http) = {
			post: "/v1beta/{name=apps/*/services/*/versions/*/instances/*}:debug"
			body: "*"
		};

	}
}

service Firewall {
	option (google.api.default_host) = "appengine.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/appengine.admin,https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/cloud-platform.read-only";

	rpc ListIngressRules(google.appengine.v1beta.ListIngressRulesRequest) returns (google.appengine.v1beta.ListIngressRulesResponse) {
		option (google.api.http) = {
			get: "/v1beta/{parent=apps/*}/firewall/ingressRules"
		};

	}
	rpc BatchUpdateIngressRules(google.appengine.v1beta.BatchUpdateIngressRulesRequest) returns (google.appengine.v1beta.BatchUpdateIngressRulesResponse) {
		option (google.api.http) = {
			post: "/v1beta/{name=apps/*/firewall/ingressRules}:batchUpdate"
			body: "*"
		};

	}
	rpc CreateIngressRule(google.appengine.v1beta.CreateIngressRuleRequest) returns (google.appengine.v1beta.FirewallRule) {
		option (google.api.http) = {
			post: "/v1beta/{parent=apps/*}/firewall/ingressRules"
			body: "rule"
		};

	}
	rpc GetIngressRule(google.appengine.v1beta.GetIngressRuleRequest) returns (google.appengine.v1beta.FirewallRule) {
		option (google.api.http) = {
			get: "/v1beta/{name=apps/*/firewall/ingressRules/*}"
		};

	}
	rpc UpdateIngressRule(google.appengine.v1beta.UpdateIngressRuleRequest) returns (google.appengine.v1beta.FirewallRule) {
		option (google.api.http) = {
			patch: "/v1beta/{name=apps/*/firewall/ingressRules/*}"
			body: "rule"
		};

	}
	rpc DeleteIngressRule(google.appengine.v1beta.DeleteIngressRuleRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			delete: "/v1beta/{name=apps/*/firewall/ingressRules/*}"
		};

	}
}

service AuthorizedDomains {
	option (google.api.default_host) = "appengine.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/appengine.admin,https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/cloud-platform.read-only";

	rpc ListAuthorizedDomains(google.appengine.v1beta.ListAuthorizedDomainsRequest) returns (google.appengine.v1beta.ListAuthorizedDomainsResponse) {
		option (google.api.http) = {
			get: "/v1beta/{parent=apps/*}/authorizedDomains"
		};

	}
}

service AuthorizedCertificates {
	option (google.api.default_host) = "appengine.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/appengine.admin,https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/cloud-platform.read-only";

	rpc ListAuthorizedCertificates(google.appengine.v1beta.ListAuthorizedCertificatesRequest) returns (google.appengine.v1beta.ListAuthorizedCertificatesResponse) {
		option (google.api.http) = {
			get: "/v1beta/{parent=apps/*}/authorizedCertificates"
		};

	}
	rpc GetAuthorizedCertificate(google.appengine.v1beta.GetAuthorizedCertificateRequest) returns (google.appengine.v1beta.AuthorizedCertificate) {
		option (google.api.http) = {
			get: "/v1beta/{name=apps/*/authorizedCertificates/*}"
		};

	}
	rpc CreateAuthorizedCertificate(google.appengine.v1beta.CreateAuthorizedCertificateRequest) returns (google.appengine.v1beta.AuthorizedCertificate) {
		option (google.api.http) = {
			post: "/v1beta/{parent=apps/*}/authorizedCertificates"
			body: "certificate"
		};

	}
	rpc UpdateAuthorizedCertificate(google.appengine.v1beta.UpdateAuthorizedCertificateRequest) returns (google.appengine.v1beta.AuthorizedCertificate) {
		option (google.api.http) = {
			patch: "/v1beta/{name=apps/*/authorizedCertificates/*}"
			body: "certificate"
		};

	}
	rpc DeleteAuthorizedCertificate(google.appengine.v1beta.DeleteAuthorizedCertificateRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			delete: "/v1beta/{name=apps/*/authorizedCertificates/*}"
		};

	}
}

service DomainMappings {
	option (google.api.default_host) = "appengine.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/appengine.admin,https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/cloud-platform.read-only";

	rpc ListDomainMappings(google.appengine.v1beta.ListDomainMappingsRequest) returns (google.appengine.v1beta.ListDomainMappingsResponse) {
		option (google.api.http) = {
			get: "/v1beta/{parent=apps/*}/domainMappings"
		};

	}
	rpc GetDomainMapping(google.appengine.v1beta.GetDomainMappingRequest) returns (google.appengine.v1beta.DomainMapping) {
		option (google.api.http) = {
			get: "/v1beta/{name=apps/*/domainMappings/*}"
		};

	}
	rpc CreateDomainMapping(google.appengine.v1beta.CreateDomainMappingRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "DomainMapping"
			metadata_type: "OperationMetadataV1Beta"
		};
		option (google.api.http) = {
			post: "/v1beta/{parent=apps/*}/domainMappings"
			body: "domain_mapping"
		};

	}
	rpc UpdateDomainMapping(google.appengine.v1beta.UpdateDomainMappingRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "DomainMapping"
			metadata_type: "OperationMetadataV1Beta"
		};
		option (google.api.http) = {
			patch: "/v1beta/{name=apps/*/domainMappings/*}"
			body: "domain_mapping"
		};

	}
	rpc DeleteDomainMapping(google.appengine.v1beta.DeleteDomainMappingRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "google.protobuf.Empty"
			metadata_type: "OperationMetadataV1Beta"
		};
		option (google.api.http) = {
			delete: "/v1beta/{name=apps/*/domainMappings/*}"
		};

	}
}

message GetApplicationRequest {

	string name = 1;
}

message CreateApplicationRequest {

	google.appengine.v1beta.Application application = 2;
}

message UpdateApplicationRequest {

	string name = 1;
	google.appengine.v1beta.Application application = 2;
	google.protobuf.FieldMask update_mask = 3;
}

message RepairApplicationRequest {

	string name = 1;
}

message ListServicesRequest {

	string parent = 1;
	int32 page_size = 2;
	string page_token = 3;
}

message ListServicesResponse {

	repeated google.appengine.v1beta.Service services = 1;
	string next_page_token = 2;
}

message GetServiceRequest {

	string name = 1;
}

message UpdateServiceRequest {

	string name = 1;
	google.appengine.v1beta.Service service = 2;
	google.protobuf.FieldMask update_mask = 3;
	bool migrate_traffic = 4;
}

message DeleteServiceRequest {

	string name = 1;
}

message ListVersionsRequest {

	string parent = 1;
	VersionView view = 2;
	int32 page_size = 3;
	string page_token = 4;
}

message ListVersionsResponse {

	repeated google.appengine.v1beta.Version versions = 1;
	string next_page_token = 2;
}

message GetVersionRequest {

	string name = 1;
	VersionView view = 2;
}

message CreateVersionRequest {

	string parent = 1;
	google.appengine.v1beta.Version version = 2;
}

message UpdateVersionRequest {

	string name = 1;
	google.appengine.v1beta.Version version = 2;
	google.protobuf.FieldMask update_mask = 3;
}

message DeleteVersionRequest {

	string name = 1;
}

message ListInstancesRequest {

	string parent = 1;
	int32 page_size = 2;
	string page_token = 3;
}

message ListInstancesResponse {

	repeated google.appengine.v1beta.Instance instances = 1;
	string next_page_token = 2;
}

message GetInstanceRequest {

	string name = 1;
}

message DeleteInstanceRequest {

	string name = 1;
}

message DebugInstanceRequest {

	string name = 1;
	string ssh_key = 2;
}

message ListIngressRulesRequest {

	string parent = 1;
	int32 page_size = 2;
	string page_token = 3;
	string matching_address = 4;
}

message ListIngressRulesResponse {

	repeated google.appengine.v1beta.FirewallRule ingress_rules = 1;
	string next_page_token = 2;
}

message BatchUpdateIngressRulesRequest {

	string name = 1;
	repeated google.appengine.v1beta.FirewallRule ingress_rules = 2;
}

message BatchUpdateIngressRulesResponse {

	repeated google.appengine.v1beta.FirewallRule ingress_rules = 1;
}

message CreateIngressRuleRequest {

	string parent = 1;
	google.appengine.v1beta.FirewallRule rule = 2;
}

message GetIngressRuleRequest {

	string name = 1;
}

message UpdateIngressRuleRequest {

	string name = 1;
	google.appengine.v1beta.FirewallRule rule = 2;
	google.protobuf.FieldMask update_mask = 3;
}

message DeleteIngressRuleRequest {

	string name = 1;
}

message ListAuthorizedDomainsRequest {

	string parent = 1;
	int32 page_size = 2;
	string page_token = 3;
}

message ListAuthorizedDomainsResponse {

	repeated google.appengine.v1beta.AuthorizedDomain domains = 1;
	string next_page_token = 2;
}

message ListAuthorizedCertificatesRequest {

	string parent = 1;
	AuthorizedCertificateView view = 4;
	int32 page_size = 2;
	string page_token = 3;
}

message ListAuthorizedCertificatesResponse {

	repeated google.appengine.v1beta.AuthorizedCertificate certificates = 1;
	string next_page_token = 2;
}

message GetAuthorizedCertificateRequest {

	string name = 1;
	AuthorizedCertificateView view = 2;
}

message CreateAuthorizedCertificateRequest {

	string parent = 1;
	google.appengine.v1beta.AuthorizedCertificate certificate = 2;
}

message UpdateAuthorizedCertificateRequest {

	string name = 1;
	google.appengine.v1beta.AuthorizedCertificate certificate = 2;
	google.protobuf.FieldMask update_mask = 3;
}

message DeleteAuthorizedCertificateRequest {

	string name = 1;
}

message ListDomainMappingsRequest {

	string parent = 1;
	int32 page_size = 2;
	string page_token = 3;
}

message ListDomainMappingsResponse {

	repeated google.appengine.v1beta.DomainMapping domain_mappings = 1;
	string next_page_token = 2;
}

message GetDomainMappingRequest {

	string name = 1;
}

message CreateDomainMappingRequest {

	string parent = 1;
	google.appengine.v1beta.DomainMapping domain_mapping = 2;
	DomainOverrideStrategy override_strategy = 4;
}

message UpdateDomainMappingRequest {

	string name = 1;
	google.appengine.v1beta.DomainMapping domain_mapping = 2;
	google.protobuf.FieldMask update_mask = 3;
}

message DeleteDomainMappingRequest {

	string name = 1;
}
