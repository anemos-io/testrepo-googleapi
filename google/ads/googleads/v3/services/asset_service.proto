syntax = "proto3";

package google.ads.googleads.v3.services;

import "google/ads/googleads/v3/resources/asset.proto";
import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";

option java_package = "com.google.ads.googleads.v3.services";
option java_outer_classname = "AssetServiceProto";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/ads/googleads/v3/services;services";
option objc_class_prefix = "GAA";
option csharp_namespace = "Google.Ads.GoogleAds.V3.Services";
option php_namespace = "Google\\Ads\\GoogleAds\\V3\\Services";
option ruby_package = "Google::Ads::GoogleAds::V3::Services";


service AssetService {
	option (google.api.default_host) = "googleads.googleapis.com";

	rpc GetAsset(google.ads.googleads.v3.services.GetAssetRequest) returns (google.ads.googleads.v3.resources.Asset) {
		option (google.api.method_signature) = "resource_name";
		option (google.api.http) = {
			get: "/v3/{resource_name=customers/*/assets/*}"
		};

	}
	rpc MutateAssets(google.ads.googleads.v3.services.MutateAssetsRequest) returns (google.ads.googleads.v3.services.MutateAssetsResponse) {
		option (google.api.method_signature) = "customer_id,operations";
		option (google.api.http) = {
			post: "/v3/customers/{customer_id=*}/assets:mutate"
			body: "*"
		};

	}
}

message GetAssetRequest {

	string resource_name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "googleads.googleapis.com/Asset"
		}
	];
}

message MutateAssetsRequest {

	string customer_id = 1 [
		(google.api.field_behavior) = REQUIRED
	];
	repeated AssetOperation operations = 2 [
		(google.api.field_behavior) = REQUIRED
	];
}

message AssetOperation {

	oneof operation {
		google.ads.googleads.v3.resources.Asset create = 1;
	}
}

message MutateAssetsResponse {

	repeated MutateAssetResult results = 2;
}

message MutateAssetResult {

	string resource_name = 1;
}
