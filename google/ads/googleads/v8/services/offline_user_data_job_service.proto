syntax = "proto3";

package google.ads.googleads.v8.services;

import "google/ads/googleads/v8/common/offline_user_data.proto";
import "google/ads/googleads/v8/resources/offline_user_data_job.proto";
import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/longrunning/operations.proto";
import "google/rpc/status.proto";

option java_package = "com.google.ads.googleads.v8.services";
option java_outer_classname = "OfflineUserDataJobServiceProto";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/ads/googleads/v8/services;services";
option objc_class_prefix = "GAA";
option csharp_namespace = "Google.Ads.GoogleAds.V8.Services";
option php_namespace = "Google\\Ads\\GoogleAds\\V8\\Services";
option ruby_package = "Google::Ads::GoogleAds::V8::Services";


service OfflineUserDataJobService {
	option (google.api.default_host) = "googleads.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/adwords";

	rpc CreateOfflineUserDataJob(google.ads.googleads.v8.services.CreateOfflineUserDataJobRequest) returns (google.ads.googleads.v8.services.CreateOfflineUserDataJobResponse) {
		option (google.api.method_signature) = "customer_id,job";
		option (google.api.http) = {
			post: "/v8/customers/{customer_id=*}/offlineUserDataJobs:create"
			body: "*"
		};

	}
	rpc GetOfflineUserDataJob(google.ads.googleads.v8.services.GetOfflineUserDataJobRequest) returns (google.ads.googleads.v8.resources.OfflineUserDataJob) {
		option (google.api.method_signature) = "resource_name";
		option (google.api.http) = {
			get: "/v8/{resource_name=customers/*/offlineUserDataJobs/*}"
		};

	}
	rpc AddOfflineUserDataJobOperations(google.ads.googleads.v8.services.AddOfflineUserDataJobOperationsRequest) returns (google.ads.googleads.v8.services.AddOfflineUserDataJobOperationsResponse) {
		option (google.api.method_signature) = "resource_name,operations";
		option (google.api.http) = {
			post: "/v8/{resource_name=customers/*/offlineUserDataJobs/*}:addOperations"
			body: "*"
		};

	}
	rpc RunOfflineUserDataJob(google.ads.googleads.v8.services.RunOfflineUserDataJobRequest) returns (google.longrunning.Operation) {
		option (google.longrunning.operation_info) = {
			response_type: "google.protobuf.Empty"
			metadata_type: "google.protobuf.Empty"
		};
		option (google.api.method_signature) = "resource_name";
		option (google.api.http) = {
			post: "/v8/{resource_name=customers/*/offlineUserDataJobs/*}:run"
			body: "*"
		};

	}
}

message CreateOfflineUserDataJobRequest {

	string customer_id = 1 [
		(google.api.field_behavior) = REQUIRED
	];
	google.ads.googleads.v8.resources.OfflineUserDataJob job = 2 [
		(google.api.field_behavior) = REQUIRED
	];
	bool validate_only = 3;
}

message CreateOfflineUserDataJobResponse {

	string resource_name = 1;
}

message GetOfflineUserDataJobRequest {

	string resource_name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "googleads.googleapis.com/OfflineUserDataJob"
		}
	];
}

message RunOfflineUserDataJobRequest {

	string resource_name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "googleads.googleapis.com/OfflineUserDataJob"
		}
	];
	bool validate_only = 2;
}

message AddOfflineUserDataJobOperationsRequest {

	string resource_name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "googleads.googleapis.com/OfflineUserDataJob"
		}
	];
	oneof _enable_partial_failure {
		bool enable_partial_failure = 4;
	}
	repeated OfflineUserDataJobOperation operations = 3 [
		(google.api.field_behavior) = REQUIRED
	];
	bool validate_only = 5;
}

message OfflineUserDataJobOperation {

	oneof operation {
		google.ads.googleads.v8.common.UserData create = 1;
		google.ads.googleads.v8.common.UserData remove = 2;
		bool remove_all = 3;
	}
}

message AddOfflineUserDataJobOperationsResponse {

	google.rpc.Status partial_failure_error = 1;
}
