syntax = "proto3";

package google.ads.googleads.v8.services;

import "google/ads/googleads/v8/resources/third_party_app_analytics_link.proto";
import "google/api/annotations.proto";
import "google/api/resource.proto";
import "google/api/client.proto";

option java_package = "com.google.ads.googleads.v8.services";
option java_outer_classname = "ThirdPartyAppAnalyticsLinkServiceProto";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/ads/googleads/v8/services;services";
option objc_class_prefix = "GAA";
option csharp_namespace = "Google.Ads.GoogleAds.V8.Services";
option php_namespace = "Google\\Ads\\GoogleAds\\V8\\Services";
option ruby_package = "Google::Ads::GoogleAds::V8::Services";


service ThirdPartyAppAnalyticsLinkService {
	option (google.api.default_host) = "googleads.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/adwords";

	rpc GetThirdPartyAppAnalyticsLink(google.ads.googleads.v8.services.GetThirdPartyAppAnalyticsLinkRequest) returns (google.ads.googleads.v8.resources.ThirdPartyAppAnalyticsLink) {
		option (google.api.http) = {
			get: "/v8/{resource_name=customers/*/thirdPartyAppAnalyticsLinks/*}"
		};

	}
	rpc RegenerateShareableLinkId(google.ads.googleads.v8.services.RegenerateShareableLinkIdRequest) returns (google.ads.googleads.v8.services.RegenerateShareableLinkIdResponse) {
		option (google.api.http) = {
			post: "/v8/{resource_name=customers/*/thirdPartyAppAnalyticsLinks/*}:regenerateShareableLinkId"
			body: "*"
		};

	}
}

message GetThirdPartyAppAnalyticsLinkRequest {

	string resource_name = 1 [
		(google.api.resource_reference) = {
			type: "googleads.googleapis.com/ThirdPartyAppAnalyticsLink"
		}
	];
}

message RegenerateShareableLinkIdRequest {

	string resource_name = 1 [
		(google.api.resource_reference) = {
			type: "googleads.googleapis.com/ThirdPartyAppAnalyticsLink"
		}
	];
}

message RegenerateShareableLinkIdResponse {

}
