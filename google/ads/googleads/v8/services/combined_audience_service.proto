syntax = "proto3";

package google.ads.googleads.v8.services;

import "google/ads/googleads/v8/resources/combined_audience.proto";
import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";

option java_package = "com.google.ads.googleads.v8.services";
option java_outer_classname = "CombinedAudienceServiceProto";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/ads/googleads/v8/services;services";
option objc_class_prefix = "GAA";
option csharp_namespace = "Google.Ads.GoogleAds.V8.Services";
option php_namespace = "Google\\Ads\\GoogleAds\\V8\\Services";
option ruby_package = "Google::Ads::GoogleAds::V8::Services";


service CombinedAudienceService {
	option (google.api.default_host) = "googleads.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/adwords";

	rpc GetCombinedAudience(google.ads.googleads.v8.services.GetCombinedAudienceRequest) returns (google.ads.googleads.v8.resources.CombinedAudience) {
		option (google.api.method_signature) = "resource_name";
		option (google.api.http) = {
			get: "/v8/{resource_name=customers/*/combinedAudiences/*}"
		};

	}
}

message GetCombinedAudienceRequest {

	string resource_name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "googleads.googleapis.com/CombinedAudience"
		}
	];
}
