syntax = "proto3";

package google.devtools.clouderrorreporting.v1beta1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/devtools/clouderrorreporting/v1beta1/common.proto";

option java_package = "com.google.devtools.clouderrorreporting.v1beta1";
option java_outer_classname = "ErrorGroupServiceProto";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/devtools/clouderrorreporting/v1beta1;clouderrorreporting";
option cc_enable_arenas = true;
option csharp_namespace = "Google.Cloud.ErrorReporting.V1Beta1";
option php_namespace = "Google\\Cloud\\ErrorReporting\\V1beta1";
option ruby_package = "Google::Cloud::ErrorReporting::V1beta1";


service ErrorGroupService {
	option (google.api.default_host) = "clouderrorreporting.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/cloud-platform";

	rpc GetGroup(google.devtools.clouderrorreporting.v1beta1.GetGroupRequest) returns (google.devtools.clouderrorreporting.v1beta1.ErrorGroup) {
		option (google.api.method_signature) = "group_name";
		option (google.api.http) = {
			get: "/v1beta1/{group_name=projects/*/groups/*}"
		};

	}
	rpc UpdateGroup(google.devtools.clouderrorreporting.v1beta1.UpdateGroupRequest) returns (google.devtools.clouderrorreporting.v1beta1.ErrorGroup) {
		option (google.api.method_signature) = "group";
		option (google.api.http) = {
			put: "/v1beta1/{group.name=projects/*/groups/*}"
			body: "group"
		};

	}
}

message GetGroupRequest {

	string group_name = 1 [
		(google.api.field_behavior) = REQUIRED
		(google.api.resource_reference) = {
			type: "clouderrorreporting.googleapis.com/ErrorGroup"
		}
	];
}

message UpdateGroupRequest {

	google.devtools.clouderrorreporting.v1beta1.ErrorGroup group = 1 [
		(google.api.field_behavior) = REQUIRED
	];
}
