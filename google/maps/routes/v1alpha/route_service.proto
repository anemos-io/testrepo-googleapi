syntax = "proto3";

package google.maps.routes.v1alpha;

import "google/api/annotations.proto";
import "google/maps/routes/v1/compute_custom_routes_request.proto";
import "google/maps/routes/v1/compute_custom_routes_response.proto";
import "google/maps/routes/v1/compute_route_matrix_request.proto";
import "google/maps/routes/v1/compute_routes_request.proto";
import "google/maps/routes/v1/compute_routes_response.proto";
import "google/maps/routes/v1/route_matrix_element.proto";
import "google/api/client.proto";

option java_package = "com.google.maps.routes.v1alpha";
option java_outer_classname = "RoutesServiceAlphaProto";
option java_multiple_files = true;
option go_package = "google.golang.org/genproto/googleapis/maps/routes/v1alpha;routes";
option cc_enable_arenas = true;
option objc_class_prefix = "GMRS";
option csharp_namespace = "Google.Maps.Routes.V1Alpha";
option php_namespace = "Google\\Maps\\Routes\\V1alpha";


service RoutesAlpha {
	option (google.api.default_host) = "routespreferred.googleapis.com";
	option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/maps-platform.routespreferred";

	rpc ComputeRoutes(google.maps.routes.v1.ComputeRoutesRequest) returns (google.maps.routes.v1.ComputeRoutesResponse) {
		option (google.api.http) = {
			post: "/v1alpha:computeRoutes"
			body: "*"
		};

	}
	rpc ComputeRouteMatrix(google.maps.routes.v1.ComputeRouteMatrixRequest) returns (stream google.maps.routes.v1.RouteMatrixElement) {
		option (google.api.http) = {
			post: "/v1alpha:computeRouteMatrix"
			body: "*"
		};

	}
	rpc ComputeCustomRoutes(google.maps.routes.v1.ComputeCustomRoutesRequest) returns (google.maps.routes.v1.ComputeCustomRoutesResponse) {
		option (google.api.http) = {
			post: "/v1alpha:computeCustomRoutes"
			body: "*"
		};

	}
}
